<?xml-stylesheet href="/rss.xsl" type="text/xsl"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Charlie's Rethinking</title><link>https://forcemz.net/</link><description>Recent content on Charlie's Rethinking</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>Copyright (c) 2009-2024 J23</copyright><lastBuildDate>Mon, 01 Apr 2024 20:00:00 +0800</lastBuildDate><atom:link href="https://forcemz.net/index.xml" rel="self" type="application/rss+xml"/><item><title>基于 AspNetCore 的 Git HTTP 服务器</title><link>https://forcemz.net/posts/2017/2017-05-11-angelo/</link><pubDate>Thu, 11 May 2017 17:00:00 +0800</pubDate><guid>https://forcemz.net/posts/2017/2017-05-11-angelo/</guid><description>Charlie's Rethinking https://forcemz.net/posts/2017/2017-05-11-angelo/ -&lt;h1 id="关于">关于&lt;/h1>
&lt;p>Git HTTP 服务器是代码托管服务最重要的组件之一，Git HTTP 服务器将 HTTP 请求的数据写入到 git-upload-pack/git-receive-pack 的标准输入，然后读取 git-upload-pack/git-receive-pack 的输出，写入 HTTP 响应包体，然后传输给客户端。原理非常简单。&lt;/p>
&lt;h2 id="dotnet-core-安装">DotNet Core 安装&lt;/h2>
&lt;p>首先需要下载 .NET Core &lt;a href="https://www.microsoft.com/net/download">.NET Downloads&lt;/a> ,此站点为正式释放版本，
如果要体验新的版本可以去 Github 项目主页下载最新的：Github: &lt;a href="https://github.com/dotnet/cli">dotnet/cli&lt;/a>&lt;/p>
&lt;p>包括 Windows Ubuntu Debain 等都有安装指南&lt;/p>
&lt;h2 id="dotnet-命令">DotNet 命令&lt;/h2>
&lt;p>通常来说，dotnet 创建一个项目非常简单，进入到一个目录，运行&lt;/p>
&lt;blockquote>
&lt;p>dotnet new&lt;/p>
&lt;/blockquote>
&lt;p>还原依赖&lt;/p>
&lt;blockquote>
&lt;p>dotnet restore&lt;/p>
&lt;/blockquote>
&lt;p>编译&lt;/p>
&lt;blockquote>
&lt;p>dotnet build&lt;/p>
&lt;/blockquote>
&lt;p>运行&lt;/p>
&lt;blockquote>
&lt;p>dotnet run args&amp;hellip;&lt;/p>
&lt;/blockquote>
&lt;p>发布&lt;/p>
&lt;blockquote>
&lt;p>dotnet publish&lt;/p>
&lt;/blockquote>
&lt;h2 id="项目依赖">项目依赖&lt;/h2>
&lt;p>AspNetCore 的项目依赖一般都需要添加 &lt;code>Microsoft.AspNetCore&lt;/code> 此类库依赖 HTTP 服务器类库 Kestrel： &lt;a href="https://github.com/aspnet/KestrelHttpServer">https://github.com/aspnet/KestrelHttpServer&lt;/a>，网络库底层使用 &lt;code>libuv&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">&amp;lt;Project&lt;/span> &lt;span style="color:#58a1dd">Sdk=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;Microsoft.NET.Sdk.Web&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;PropertyGroup&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;OutputType&amp;gt;&lt;/span>Exe&lt;span style="color:#58a1dd">&amp;lt;/OutputType&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;TargetFramework&amp;gt;&lt;/span>netcoreapp1.1&lt;span style="color:#58a1dd">&amp;lt;/TargetFramework&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;RuntimeIdentifiers&amp;gt;&lt;/span>win10-x64;osx.10.11-x64;ubuntu.16.04-x64&lt;span style="color:#58a1dd">&amp;lt;/RuntimeIdentifiers&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/PropertyGroup&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;ItemGroup&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;Folder&lt;/span> &lt;span style="color:#58a1dd">Include=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;wwwroot\&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/ItemGroup&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;ItemGroup&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;PackageReference&lt;/span> &lt;span style="color:#58a1dd">Include=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;Microsoft.AspNetCore&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">Version=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;1.1.2&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/ItemGroup&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">&amp;lt;/Project&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="angelo-服务器入口">Angelo 服务器入口&lt;/h2>
&lt;p>运行一个 HTTP 服务器，在 Kestrel 的眼中就是一个 WebHostBuilder，WebHostBuilder 绑定好参数就可以运行了，ASP.NET 团队做了很多事情，
比如多线程，TCP 设置 NoDelay ，开启 HTTPS , 开启 HTTPS 要额外的证书，设置网站根目录，UseStartup 是一种模板类，
实现的类必须拥有 Configure 方法。关于 Unix domain socket，笔者并未测试。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#58a1dd">System&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#58a1dd">System.Collections.Generic&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#58a1dd">System.IO&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#58a1dd">System.Linq&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#58a1dd">System.Threading.Tasks&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#58a1dd">Microsoft.AspNetCore.Hosting&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">namespace&lt;/span> &lt;span style="color:#58a1dd">Angelo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">class&lt;/span> &lt;span style="color:#58a1dd">Program&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">static&lt;/span> &lt;span style="color:#ff636f">void&lt;/span> &lt;span style="color:#58a1dd">Main&lt;/span>(&lt;span style="color:#ff636f">string&lt;/span>[] &lt;span style="color:#58a1dd">args&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">var&lt;/span> &lt;span style="color:#58a1dd">host&lt;/span> = &lt;span style="color:#ff636f">new&lt;/span> &lt;span style="color:#58a1dd">WebHostBuilder&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#58a1dd">UseKestrel&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#58a1dd">UseContentRoot&lt;/span>(&lt;span style="color:#58a1dd">Directory&lt;/span>.&lt;span style="color:#58a1dd">GetCurrentDirectory&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#58a1dd">UseIISIntegration&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#58a1dd">UseStartup&lt;/span>&amp;lt;&lt;span style="color:#58a1dd">Startup&lt;/span>&amp;gt;()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#58a1dd">Build&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">host&lt;/span>.&lt;span style="color:#58a1dd">Run&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="服务器配置与初始化">服务器配置与初始化&lt;/h2>
&lt;p>熟悉 .NET 的都知道，以前读取配置文件有 System.Configuration ,通过读取 XML 格式后缀名为 .config 的配置文件，而 ASP.NET Core 支持 INI JSON XML 类型的配置，目前我使用的是 JSON, 即 &lt;code>appsettings.json&lt;/code>。&lt;/p>
&lt;p>以下面的配置文件（appsettings.json）内容:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;Logging&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;IncludeScopes&amp;#34;&lt;/span>: &lt;span style="color:#ff636f">false&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;LogLevel&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;Default&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;Warning&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;Appconfig&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;Root&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;F:\\GitHub&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;PathConvert&amp;#34;&lt;/span>: &lt;span style="color:#ff636f">false&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;Realm&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;git.io&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;Gitbin&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;C:\\Program Files\\Git\\bin\\git.exe&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>初始化解析分别如下：&lt;/p>
&lt;p>Appconfig.cs:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#58a1dd">System&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#58a1dd">System.Text&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#58a1dd">System.Linq&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">namespace&lt;/span> &lt;span style="color:#58a1dd">Angelo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">class&lt;/span> &lt;span style="color:#58a1dd">AuthResult&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">Result&lt;/span> { &lt;span style="color:#ff636f">get&lt;/span>; &lt;span style="color:#ff636f">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">Userid&lt;/span> { &lt;span style="color:#ff636f">get&lt;/span>; &lt;span style="color:#ff636f">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">class&lt;/span> &lt;span style="color:#58a1dd">Appconfig&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">string&lt;/span> &lt;span style="color:#58a1dd">Root&lt;/span> { &lt;span style="color:#ff636f">get&lt;/span>; &lt;span style="color:#ff636f">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">PathConvert&lt;/span> { &lt;span style="color:#ff636f">get&lt;/span>; &lt;span style="color:#ff636f">set&lt;/span>; } = &lt;span style="color:#ff636f">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">string&lt;/span> &lt;span style="color:#58a1dd">AuthorizeURL&lt;/span> { &lt;span style="color:#ff636f">get&lt;/span>; &lt;span style="color:#ff636f">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">string&lt;/span> &lt;span style="color:#58a1dd">Realm&lt;/span> { &lt;span style="color:#ff636f">get&lt;/span>; &lt;span style="color:#ff636f">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">string&lt;/span> &lt;span style="color:#58a1dd">Gitbin&lt;/span> { &lt;span style="color:#ff636f">get&lt;/span>; &lt;span style="color:#ff636f">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">class&lt;/span> &lt;span style="color:#58a1dd">AppconfigProvider&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">static&lt;/span> &lt;span style="color:#58a1dd">Appconfig&lt;/span> &lt;span style="color:#58a1dd">config&lt;/span> { &lt;span style="color:#ff636f">get&lt;/span>; &lt;span style="color:#ff636f">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">static&lt;/span> &lt;span style="color:#ff636f">string&lt;/span> &lt;span style="color:#58a1dd">PathcombineRoot&lt;/span>(&lt;span style="color:#ff636f">string&lt;/span> &lt;span style="color:#58a1dd">repodir&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">var&lt;/span> &lt;span style="color:#58a1dd">sb&lt;/span> = &lt;span style="color:#ff636f">new&lt;/span> &lt;span style="color:#58a1dd">StringBuilder&lt;/span>(&lt;span style="color:#58a1dd">config&lt;/span>.&lt;span style="color:#58a1dd">Root&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">config&lt;/span>.&lt;span style="color:#58a1dd">PathConvert&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">repodir&lt;/span>.&lt;span style="color:#58a1dd">Length&lt;/span> &amp;lt; &lt;span style="color:#a6be9d">3&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#ff636f">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">sb&lt;/span>.&lt;span style="color:#58a1dd">Append&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;/&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">repodir&lt;/span>.&lt;span style="color:#58a1dd">First&lt;/span>() == &lt;span style="color:#a6be9d">&amp;#39;/&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">sb&lt;/span>.&lt;span style="color:#58a1dd">Append&lt;/span>(&lt;span style="color:#58a1dd">repodir&lt;/span>.&lt;span style="color:#58a1dd">ElementAt&lt;/span>(&lt;span style="color:#a6be9d">1&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">sb&lt;/span>.&lt;span style="color:#58a1dd">Append&lt;/span>(&lt;span style="color:#58a1dd">repodir&lt;/span>.&lt;span style="color:#58a1dd">ElementAt&lt;/span>(&lt;span style="color:#a6be9d">2&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">sb&lt;/span>.&lt;span style="color:#58a1dd">Append&lt;/span>(&lt;span style="color:#58a1dd">repodir&lt;/span>.&lt;span style="color:#58a1dd">ElementAt&lt;/span>(&lt;span style="color:#a6be9d">0&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">sb&lt;/span>.&lt;span style="color:#58a1dd">Append&lt;/span>(&lt;span style="color:#58a1dd">repodir&lt;/span>.&lt;span style="color:#58a1dd">ElementAt&lt;/span>(&lt;span style="color:#a6be9d">1&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">sb&lt;/span>.&lt;span style="color:#58a1dd">Append&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;/&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">sb&lt;/span>.&lt;span style="color:#58a1dd">Append&lt;/span>(&lt;span style="color:#58a1dd">repodir&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">System&lt;/span>.&lt;span style="color:#58a1dd">IO&lt;/span>.&lt;span style="color:#58a1dd">Path&lt;/span>.&lt;span style="color:#58a1dd">GetFullPath&lt;/span>(&lt;span style="color:#58a1dd">sb&lt;/span>.&lt;span style="color:#58a1dd">ToString&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">repodir&lt;/span>.&lt;span style="color:#58a1dd">First&lt;/span>() != &lt;span style="color:#a6be9d">&amp;#39;/&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">sb&lt;/span>.&lt;span style="color:#58a1dd">Append&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;/&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">sb&lt;/span>.&lt;span style="color:#58a1dd">Append&lt;/span>(&lt;span style="color:#58a1dd">repodir&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">System&lt;/span>.&lt;span style="color:#58a1dd">IO&lt;/span>.&lt;span style="color:#58a1dd">Path&lt;/span>.&lt;span style="color:#58a1dd">GetFullPath&lt;/span>(&lt;span style="color:#58a1dd">sb&lt;/span>.&lt;span style="color:#58a1dd">ToString&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">static&lt;/span> &lt;span style="color:#58a1dd">AuthResult&lt;/span> &lt;span style="color:#58a1dd">Authorize&lt;/span>(&lt;span style="color:#ff636f">string&lt;/span> &lt;span style="color:#58a1dd">authtext&lt;/span>, &lt;span style="color:#ff636f">string&lt;/span> &lt;span style="color:#58a1dd">pwn&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/// NOT IMPL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">var&lt;/span> &lt;span style="color:#58a1dd">result&lt;/span> = &lt;span style="color:#ff636f">new&lt;/span> &lt;span style="color:#58a1dd">AuthResult&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Result&lt;/span> = &lt;span style="color:#a6be9d">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Userid&lt;/span> = &lt;span style="color:#a6be9d">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">result&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Startup.cs&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#58a1dd">System&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#58a1dd">System.Text&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#58a1dd">System.Linq&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">namespace&lt;/span> &lt;span style="color:#58a1dd">Angelo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">class&lt;/span> &lt;span style="color:#58a1dd">AuthResult&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">Result&lt;/span> { &lt;span style="color:#ff636f">get&lt;/span>; &lt;span style="color:#ff636f">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">Userid&lt;/span> { &lt;span style="color:#ff636f">get&lt;/span>; &lt;span style="color:#ff636f">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">class&lt;/span> &lt;span style="color:#58a1dd">Appconfig&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">string&lt;/span> &lt;span style="color:#58a1dd">Root&lt;/span> { &lt;span style="color:#ff636f">get&lt;/span>; &lt;span style="color:#ff636f">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">PathConvert&lt;/span> { &lt;span style="color:#ff636f">get&lt;/span>; &lt;span style="color:#ff636f">set&lt;/span>; } = &lt;span style="color:#ff636f">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">string&lt;/span> &lt;span style="color:#58a1dd">AuthorizeURL&lt;/span> { &lt;span style="color:#ff636f">get&lt;/span>; &lt;span style="color:#ff636f">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">string&lt;/span> &lt;span style="color:#58a1dd">Realm&lt;/span> { &lt;span style="color:#ff636f">get&lt;/span>; &lt;span style="color:#ff636f">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">string&lt;/span> &lt;span style="color:#58a1dd">Gitbin&lt;/span> { &lt;span style="color:#ff636f">get&lt;/span>; &lt;span style="color:#ff636f">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">class&lt;/span> &lt;span style="color:#58a1dd">AppconfigProvider&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">static&lt;/span> &lt;span style="color:#58a1dd">Appconfig&lt;/span> &lt;span style="color:#58a1dd">config&lt;/span> { &lt;span style="color:#ff636f">get&lt;/span>; &lt;span style="color:#ff636f">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">static&lt;/span> &lt;span style="color:#ff636f">string&lt;/span> &lt;span style="color:#58a1dd">PathcombineRoot&lt;/span>(&lt;span style="color:#ff636f">string&lt;/span> &lt;span style="color:#58a1dd">repodir&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">var&lt;/span> &lt;span style="color:#58a1dd">sb&lt;/span> = &lt;span style="color:#ff636f">new&lt;/span> &lt;span style="color:#58a1dd">StringBuilder&lt;/span>(&lt;span style="color:#58a1dd">config&lt;/span>.&lt;span style="color:#58a1dd">Root&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">config&lt;/span>.&lt;span style="color:#58a1dd">PathConvert&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">repodir&lt;/span>.&lt;span style="color:#58a1dd">Length&lt;/span> &amp;lt; &lt;span style="color:#a6be9d">3&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#ff636f">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">sb&lt;/span>.&lt;span style="color:#58a1dd">Append&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;/&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">repodir&lt;/span>.&lt;span style="color:#58a1dd">First&lt;/span>() == &lt;span style="color:#a6be9d">&amp;#39;/&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">sb&lt;/span>.&lt;span style="color:#58a1dd">Append&lt;/span>(&lt;span style="color:#58a1dd">repodir&lt;/span>.&lt;span style="color:#58a1dd">ElementAt&lt;/span>(&lt;span style="color:#a6be9d">1&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">sb&lt;/span>.&lt;span style="color:#58a1dd">Append&lt;/span>(&lt;span style="color:#58a1dd">repodir&lt;/span>.&lt;span style="color:#58a1dd">ElementAt&lt;/span>(&lt;span style="color:#a6be9d">2&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">sb&lt;/span>.&lt;span style="color:#58a1dd">Append&lt;/span>(&lt;span style="color:#58a1dd">repodir&lt;/span>.&lt;span style="color:#58a1dd">ElementAt&lt;/span>(&lt;span style="color:#a6be9d">0&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">sb&lt;/span>.&lt;span style="color:#58a1dd">Append&lt;/span>(&lt;span style="color:#58a1dd">repodir&lt;/span>.&lt;span style="color:#58a1dd">ElementAt&lt;/span>(&lt;span style="color:#a6be9d">1&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">sb&lt;/span>.&lt;span style="color:#58a1dd">Append&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;/&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">sb&lt;/span>.&lt;span style="color:#58a1dd">Append&lt;/span>(&lt;span style="color:#58a1dd">repodir&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">System&lt;/span>.&lt;span style="color:#58a1dd">IO&lt;/span>.&lt;span style="color:#58a1dd">Path&lt;/span>.&lt;span style="color:#58a1dd">GetFullPath&lt;/span>(&lt;span style="color:#58a1dd">sb&lt;/span>.&lt;span style="color:#58a1dd">ToString&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">repodir&lt;/span>.&lt;span style="color:#58a1dd">First&lt;/span>() != &lt;span style="color:#a6be9d">&amp;#39;/&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">sb&lt;/span>.&lt;span style="color:#58a1dd">Append&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;/&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">sb&lt;/span>.&lt;span style="color:#58a1dd">Append&lt;/span>(&lt;span style="color:#58a1dd">repodir&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">System&lt;/span>.&lt;span style="color:#58a1dd">IO&lt;/span>.&lt;span style="color:#58a1dd">Path&lt;/span>.&lt;span style="color:#58a1dd">GetFullPath&lt;/span>(&lt;span style="color:#58a1dd">sb&lt;/span>.&lt;span style="color:#58a1dd">ToString&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">static&lt;/span> &lt;span style="color:#58a1dd">AuthResult&lt;/span> &lt;span style="color:#58a1dd">Authorize&lt;/span>(&lt;span style="color:#ff636f">string&lt;/span> &lt;span style="color:#58a1dd">authtext&lt;/span>, &lt;span style="color:#ff636f">string&lt;/span> &lt;span style="color:#58a1dd">pwn&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/// NOT IMPL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">var&lt;/span> &lt;span style="color:#58a1dd">result&lt;/span> = &lt;span style="color:#ff636f">new&lt;/span> &lt;span style="color:#58a1dd">AuthResult&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Result&lt;/span> = &lt;span style="color:#a6be9d">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Userid&lt;/span> = &lt;span style="color:#a6be9d">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">result&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="服务器请求与响应">服务器请求与响应&lt;/h2>
&lt;p>在 Angelo 中，核心就是对请求进行处理后使用不同参数执行不同的 git 命令，讲 HTTP 包体写入到 git 命令输入，讲 git 命令输出作为响应体返回给客户端。&lt;/p>
&lt;p>得益于 DotNet &lt;code>async/await&lt;/code> 实现 Angelo 的过程颇为简单。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#58a1dd">System&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#58a1dd">System.IO&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#58a1dd">System.IO.Compression&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#58a1dd">System.Diagnostics&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#58a1dd">System.Threading.Tasks&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#58a1dd">Microsoft.AspNetCore.Http&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">namespace&lt;/span> &lt;span style="color:#58a1dd">Angelo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">class&lt;/span> &lt;span style="color:#58a1dd">Session&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">private&lt;/span> &lt;span style="color:#58a1dd">HttpContext&lt;/span> &lt;span style="color:#58a1dd">Context&lt;/span> { &lt;span style="color:#ff636f">get&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#58a1dd">Session&lt;/span>(&lt;span style="color:#58a1dd">HttpContext&lt;/span> &lt;span style="color:#58a1dd">context&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">this&lt;/span>.&lt;span style="color:#58a1dd">Context&lt;/span> = &lt;span style="color:#58a1dd">context&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">private&lt;/span> &lt;span style="color:#ff636f">async&lt;/span> &lt;span style="color:#58a1dd">Task&lt;/span> &lt;span style="color:#58a1dd">Unauthorized&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">StatusCode&lt;/span> = &lt;span style="color:#58a1dd">StatusCodes&lt;/span>.&lt;span style="color:#58a1dd">Status401Unauthorized&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">Headers&lt;/span>.&lt;span style="color:#58a1dd">Add&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;WWW-Authenticate&amp;#34;&lt;/span>, &lt;span style="color:#a6be9d">$&amp;#34;Basic realm=\&amp;#34;&lt;/span>{&lt;span style="color:#58a1dd">AppconfigProvider&lt;/span>.&lt;span style="color:#58a1dd">config&lt;/span>.&lt;span style="color:#58a1dd">Realm&lt;/span>}\&lt;span style="color:#a6be9d">&amp;#34;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">await&lt;/span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">WriteAsync&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;Unauthorized&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">private&lt;/span> &lt;span style="color:#ff636f">async&lt;/span> &lt;span style="color:#58a1dd">Task&lt;/span> &lt;span style="color:#58a1dd">NotFound&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">StatusCode&lt;/span> = &lt;span style="color:#58a1dd">StatusCodes&lt;/span>.&lt;span style="color:#58a1dd">Status404NotFound&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">await&lt;/span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">WriteAsync&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;Not Found&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">void&lt;/span> &lt;span style="color:#58a1dd">HeadersFill&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">Headers&lt;/span>[&lt;span style="color:#a6be9d">&amp;#34;Expires&amp;#34;&lt;/span>] = &lt;span style="color:#a6be9d">&amp;#34;Fri, 01 Jan 1980 00:00:00 GMT&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">Headers&lt;/span>[&lt;span style="color:#a6be9d">&amp;#34;Pragma&amp;#34;&lt;/span>] = &lt;span style="color:#a6be9d">&amp;#34;no-cache&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">Headers&lt;/span>[&lt;span style="color:#a6be9d">&amp;#34;Cache-Control&amp;#34;&lt;/span>] = &lt;span style="color:#a6be9d">&amp;#34;no-cache, max-age=0, must-revalidate&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">private&lt;/span> &lt;span style="color:#ff636f">async&lt;/span> &lt;span style="color:#58a1dd">Task&lt;/span> &lt;span style="color:#58a1dd">ExchangeRefs&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">var&lt;/span> &lt;span style="color:#58a1dd">url&lt;/span> = &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Request&lt;/span>.&lt;span style="color:#58a1dd">Path&lt;/span>.&lt;span style="color:#58a1dd">ToString&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (!&lt;span style="color:#58a1dd">url&lt;/span>.&lt;span style="color:#58a1dd">EndsWith&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;/info/refs&amp;#34;&lt;/span>) || !&lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Request&lt;/span>.&lt;span style="color:#58a1dd">Query&lt;/span>.&lt;span style="color:#58a1dd">ContainsKey&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;service&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">StatusCode&lt;/span> = &lt;span style="color:#58a1dd">StatusCodes&lt;/span>.&lt;span style="color:#58a1dd">Status400BadRequest&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">await&lt;/span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">WriteAsync&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;Bad Request !&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">var&lt;/span> &lt;span style="color:#58a1dd">path&lt;/span> = &lt;span style="color:#58a1dd">url&lt;/span>.&lt;span style="color:#58a1dd">Substring&lt;/span>(&lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#58a1dd">url&lt;/span>.&lt;span style="color:#58a1dd">Length&lt;/span> - &lt;span style="color:#a6be9d">&amp;#34;/info/refs&amp;#34;&lt;/span>.&lt;span style="color:#58a1dd">Length&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">string&lt;/span> &lt;span style="color:#58a1dd">authtxt&lt;/span> = &lt;span style="color:#ff636f">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Request&lt;/span>.&lt;span style="color:#58a1dd">Headers&lt;/span>.&lt;span style="color:#58a1dd">ContainsKey&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;Authorization&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">authtxt&lt;/span> = &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Request&lt;/span>.&lt;span style="color:#58a1dd">Headers&lt;/span>[&lt;span style="color:#a6be9d">&amp;#34;Authorization&amp;#34;&lt;/span>].&lt;span style="color:#58a1dd">ToString&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">var&lt;/span> &lt;span style="color:#58a1dd">result&lt;/span> = &lt;span style="color:#58a1dd">AppconfigProvider&lt;/span>.&lt;span style="color:#58a1dd">Authorize&lt;/span>(&lt;span style="color:#58a1dd">authtxt&lt;/span>, &lt;span style="color:#58a1dd">path&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">result&lt;/span> == &lt;span style="color:#ff636f">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">await&lt;/span> &lt;span style="color:#58a1dd">Unauthorized&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">var&lt;/span> &lt;span style="color:#58a1dd">repodir&lt;/span> = &lt;span style="color:#58a1dd">AppconfigProvider&lt;/span>.&lt;span style="color:#58a1dd">PathcombineRoot&lt;/span>(&lt;span style="color:#58a1dd">path&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (!&lt;span style="color:#58a1dd">Directory&lt;/span>.&lt;span style="color:#58a1dd">Exists&lt;/span>(&lt;span style="color:#58a1dd">repodir&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">await&lt;/span> &lt;span style="color:#58a1dd">NotFound&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">HeadersFill&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Process&lt;/span> &lt;span style="color:#58a1dd">process&lt;/span> = &lt;span style="color:#ff636f">new&lt;/span> &lt;span style="color:#58a1dd">Process&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">process&lt;/span>.&lt;span style="color:#58a1dd">StartInfo&lt;/span>.&lt;span style="color:#58a1dd">FileName&lt;/span> = &lt;span style="color:#58a1dd">AppconfigProvider&lt;/span>.&lt;span style="color:#58a1dd">config&lt;/span>.&lt;span style="color:#58a1dd">Gitbin&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">process&lt;/span>.&lt;span style="color:#58a1dd">StartInfo&lt;/span>.&lt;span style="color:#58a1dd">Environment&lt;/span>.&lt;span style="color:#58a1dd">Add&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;GL_ID&amp;#34;&lt;/span>, &lt;span style="color:#a6be9d">$&amp;#34;user-{result.Userid}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">process&lt;/span>.&lt;span style="color:#58a1dd">StartInfo&lt;/span>.&lt;span style="color:#58a1dd">RedirectStandardOutput&lt;/span> = &lt;span style="color:#ff636f">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">switch&lt;/span> (&lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Request&lt;/span>.&lt;span style="color:#58a1dd">Query&lt;/span>[&lt;span style="color:#a6be9d">&amp;#34;service&amp;#34;&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;git-upload-pack&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">process&lt;/span>.&lt;span style="color:#58a1dd">StartInfo&lt;/span>.&lt;span style="color:#58a1dd">Arguments&lt;/span> = &lt;span style="color:#a6be9d">$&amp;#34;upload-pack --stateless-rpc --advertise-refs \&amp;#34;&lt;/span>{&lt;span style="color:#58a1dd">repodir&lt;/span>}\&lt;span style="color:#a6be9d">&amp;#34;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">ContentType&lt;/span> = &lt;span style="color:#a6be9d">&amp;#34;application/x-git-upload-pack-advertisement&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">var&lt;/span> &lt;span style="color:#58a1dd">bytes&lt;/span> = &lt;span style="color:#58a1dd">System&lt;/span>.&lt;span style="color:#58a1dd">Text&lt;/span>.&lt;span style="color:#58a1dd">Encoding&lt;/span>.&lt;span style="color:#58a1dd">UTF8&lt;/span>.&lt;span style="color:#58a1dd">GetBytes&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;001e# service=git-upload-pack\n0000&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">await&lt;/span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">Body&lt;/span>.&lt;span style="color:#58a1dd">WriteAsync&lt;/span>(&lt;span style="color:#58a1dd">bytes&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#58a1dd">bytes&lt;/span>.&lt;span style="color:#58a1dd">Length&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;git-receive-pack&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">process&lt;/span>.&lt;span style="color:#58a1dd">StartInfo&lt;/span>.&lt;span style="color:#58a1dd">Arguments&lt;/span> = &lt;span style="color:#a6be9d">$&amp;#34;receive-pack --stateless-rpc --advertise-refs \&amp;#34;&lt;/span>{&lt;span style="color:#58a1dd">repodir&lt;/span>}\&lt;span style="color:#a6be9d">&amp;#34;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">ContentType&lt;/span> = &lt;span style="color:#a6be9d">&amp;#34;application/x-git-receive-pack-advertisement&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">var&lt;/span> &lt;span style="color:#58a1dd">bytes2&lt;/span> = &lt;span style="color:#58a1dd">System&lt;/span>.&lt;span style="color:#58a1dd">Text&lt;/span>.&lt;span style="color:#58a1dd">Encoding&lt;/span>.&lt;span style="color:#58a1dd">UTF8&lt;/span>.&lt;span style="color:#58a1dd">GetBytes&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;001f# service=git-receive-pack\n0000&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">await&lt;/span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">Body&lt;/span>.&lt;span style="color:#58a1dd">WriteAsync&lt;/span>(&lt;span style="color:#58a1dd">bytes2&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#58a1dd">bytes2&lt;/span>.&lt;span style="color:#58a1dd">Length&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">default&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">StatusCode&lt;/span> = &lt;span style="color:#58a1dd">StatusCodes&lt;/span>.&lt;span style="color:#58a1dd">Status400BadRequest&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">await&lt;/span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">WriteAsync&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;Invalid service !&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (!&lt;span style="color:#58a1dd">process&lt;/span>.&lt;span style="color:#58a1dd">Start&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">StatusCode&lt;/span> = &lt;span style="color:#58a1dd">StatusCodes&lt;/span>.&lt;span style="color:#58a1dd">Status404NotFound&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">await&lt;/span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">WriteAsync&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;Git Not Found&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">await&lt;/span> &lt;span style="color:#58a1dd">process&lt;/span>.&lt;span style="color:#58a1dd">StandardOutput&lt;/span>.&lt;span style="color:#58a1dd">BaseStream&lt;/span>.&lt;span style="color:#58a1dd">CopyToAsync&lt;/span>(&lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">Body&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">private&lt;/span> &lt;span style="color:#ff636f">async&lt;/span> &lt;span style="color:#58a1dd">Task&lt;/span> &lt;span style="color:#58a1dd">ExchangePackets&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">var&lt;/span> &lt;span style="color:#58a1dd">url&lt;/span> = &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Request&lt;/span>.&lt;span style="color:#58a1dd">Path&lt;/span>.&lt;span style="color:#58a1dd">ToString&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">var&lt;/span> &lt;span style="color:#58a1dd">index&lt;/span> = &lt;span style="color:#58a1dd">url&lt;/span>.&lt;span style="color:#58a1dd">LastIndexOf&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;/&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">index&lt;/span> == -&lt;span style="color:#a6be9d">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">StatusCode&lt;/span> = &lt;span style="color:#58a1dd">StatusCodes&lt;/span>.&lt;span style="color:#58a1dd">Status404NotFound&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">await&lt;/span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">WriteAsync&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;Not Found!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">var&lt;/span> &lt;span style="color:#58a1dd">service&lt;/span> = &lt;span style="color:#58a1dd">url&lt;/span>.&lt;span style="color:#58a1dd">Substring&lt;/span>(&lt;span style="color:#58a1dd">index&lt;/span> + &lt;span style="color:#a6be9d">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">var&lt;/span> &lt;span style="color:#58a1dd">path&lt;/span> = &lt;span style="color:#58a1dd">url&lt;/span>.&lt;span style="color:#58a1dd">Substring&lt;/span>(&lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#58a1dd">index&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">string&lt;/span> &lt;span style="color:#58a1dd">authtxt&lt;/span> = &lt;span style="color:#ff636f">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Request&lt;/span>.&lt;span style="color:#58a1dd">Headers&lt;/span>.&lt;span style="color:#58a1dd">ContainsKey&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;Authorization&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">authtxt&lt;/span> = &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Request&lt;/span>.&lt;span style="color:#58a1dd">Headers&lt;/span>[&lt;span style="color:#a6be9d">&amp;#34;Authorization&amp;#34;&lt;/span>].&lt;span style="color:#58a1dd">ToString&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">var&lt;/span> &lt;span style="color:#58a1dd">result&lt;/span> = &lt;span style="color:#58a1dd">AppconfigProvider&lt;/span>.&lt;span style="color:#58a1dd">Authorize&lt;/span>(&lt;span style="color:#58a1dd">authtxt&lt;/span>, &lt;span style="color:#58a1dd">path&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">result&lt;/span> == &lt;span style="color:#ff636f">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">await&lt;/span> &lt;span style="color:#58a1dd">Unauthorized&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">var&lt;/span> &lt;span style="color:#58a1dd">repodir&lt;/span> = &lt;span style="color:#58a1dd">AppconfigProvider&lt;/span>.&lt;span style="color:#58a1dd">PathcombineRoot&lt;/span>(&lt;span style="color:#58a1dd">path&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (!&lt;span style="color:#58a1dd">Directory&lt;/span>.&lt;span style="color:#58a1dd">Exists&lt;/span>(&lt;span style="color:#58a1dd">repodir&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">await&lt;/span> &lt;span style="color:#58a1dd">NotFound&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">HeadersFill&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Process&lt;/span> &lt;span style="color:#58a1dd">process&lt;/span> = &lt;span style="color:#ff636f">new&lt;/span> &lt;span style="color:#58a1dd">Process&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">process&lt;/span>.&lt;span style="color:#58a1dd">StartInfo&lt;/span>.&lt;span style="color:#58a1dd">FileName&lt;/span> = &lt;span style="color:#58a1dd">AppconfigProvider&lt;/span>.&lt;span style="color:#58a1dd">config&lt;/span>.&lt;span style="color:#58a1dd">Gitbin&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">process&lt;/span>.&lt;span style="color:#58a1dd">StartInfo&lt;/span>.&lt;span style="color:#58a1dd">RedirectStandardInput&lt;/span> = &lt;span style="color:#ff636f">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">process&lt;/span>.&lt;span style="color:#58a1dd">StartInfo&lt;/span>.&lt;span style="color:#58a1dd">RedirectStandardOutput&lt;/span> = &lt;span style="color:#ff636f">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">process&lt;/span>.&lt;span style="color:#58a1dd">StartInfo&lt;/span>.&lt;span style="color:#58a1dd">Environment&lt;/span>.&lt;span style="color:#58a1dd">Add&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;GL_ID&amp;#34;&lt;/span>, &lt;span style="color:#a6be9d">$&amp;#34;user-{result.Userid}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">service&lt;/span> == &lt;span style="color:#a6be9d">&amp;#34;git-upload-pack&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">process&lt;/span>.&lt;span style="color:#58a1dd">StartInfo&lt;/span>.&lt;span style="color:#58a1dd">Arguments&lt;/span> = &lt;span style="color:#a6be9d">&amp;#34;upload-pack --stateless-rpc \&amp;#34;&amp;#34;&lt;/span> + &lt;span style="color:#58a1dd">repodir&lt;/span> + &lt;span style="color:#a6be9d">&amp;#34;\&amp;#34;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">ContentType&lt;/span> = &lt;span style="color:#a6be9d">&amp;#34;application/x-git-upload-pack-result&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">else&lt;/span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">service&lt;/span> == &lt;span style="color:#a6be9d">&amp;#34;git-receive-pack&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">process&lt;/span>.&lt;span style="color:#58a1dd">StartInfo&lt;/span>.&lt;span style="color:#58a1dd">Arguments&lt;/span> = &lt;span style="color:#a6be9d">&amp;#34;receive-pack --stateless-rpc \&amp;#34;&amp;#34;&lt;/span> + &lt;span style="color:#58a1dd">repodir&lt;/span> + &lt;span style="color:#a6be9d">&amp;#34;\&amp;#34;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">ContentType&lt;/span> = &lt;span style="color:#a6be9d">&amp;#34;application/x-git-receive-pack-result&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">StatusCode&lt;/span> = &lt;span style="color:#58a1dd">StatusCodes&lt;/span>.&lt;span style="color:#58a1dd">Status400BadRequest&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">await&lt;/span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">WriteAsync&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;Invalid service !&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (!&lt;span style="color:#58a1dd">process&lt;/span>.&lt;span style="color:#58a1dd">Start&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">StatusCode&lt;/span> = &lt;span style="color:#58a1dd">StatusCodes&lt;/span>.&lt;span style="color:#58a1dd">Status404NotFound&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">await&lt;/span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">WriteAsync&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;Git Not Found&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Request&lt;/span>.&lt;span style="color:#58a1dd">Headers&lt;/span>.&lt;span style="color:#58a1dd">ContainsKey&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;Content-Encoding&amp;#34;&lt;/span>) &amp;amp;&amp;amp; &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Request&lt;/span>.&lt;span style="color:#58a1dd">Headers&lt;/span>[&lt;span style="color:#a6be9d">&amp;#34;Content-Encoding&amp;#34;&lt;/span>].&lt;span style="color:#58a1dd">Equals&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;gzip&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">var&lt;/span> &lt;span style="color:#58a1dd">input&lt;/span> = &lt;span style="color:#ff636f">new&lt;/span> &lt;span style="color:#58a1dd">GZipStream&lt;/span>(&lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Request&lt;/span>.&lt;span style="color:#58a1dd">Body&lt;/span>, &lt;span style="color:#58a1dd">CompressionMode&lt;/span>.&lt;span style="color:#58a1dd">Decompress&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">await&lt;/span> &lt;span style="color:#58a1dd">input&lt;/span>.&lt;span style="color:#58a1dd">CopyToAsync&lt;/span>(&lt;span style="color:#58a1dd">process&lt;/span>.&lt;span style="color:#58a1dd">StandardInput&lt;/span>.&lt;span style="color:#58a1dd">BaseStream&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">await&lt;/span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Request&lt;/span>.&lt;span style="color:#58a1dd">Body&lt;/span>.&lt;span style="color:#58a1dd">CopyToAsync&lt;/span>(&lt;span style="color:#58a1dd">process&lt;/span>.&lt;span style="color:#58a1dd">StandardInput&lt;/span>.&lt;span style="color:#58a1dd">BaseStream&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">await&lt;/span> &lt;span style="color:#58a1dd">process&lt;/span>.&lt;span style="color:#58a1dd">StandardInput&lt;/span>.&lt;span style="color:#58a1dd">WriteAsync&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;\0&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">process&lt;/span>.&lt;span style="color:#58a1dd">StandardInput&lt;/span>.&lt;span style="color:#58a1dd">Dispose&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">await&lt;/span> &lt;span style="color:#58a1dd">process&lt;/span>.&lt;span style="color:#58a1dd">StandardOutput&lt;/span>.&lt;span style="color:#58a1dd">BaseStream&lt;/span>.&lt;span style="color:#58a1dd">CopyToAsync&lt;/span>(&lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">Body&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">async&lt;/span> &lt;span style="color:#58a1dd">Task&lt;/span> &lt;span style="color:#58a1dd">Handle&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">Headers&lt;/span>[&lt;span style="color:#a6be9d">&amp;#34;Server&amp;#34;&lt;/span>] = &lt;span style="color:#a6be9d">&amp;#34;Angelo/1.0&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Request&lt;/span>.&lt;span style="color:#58a1dd">Method&lt;/span> == &lt;span style="color:#a6be9d">&amp;#34;GET&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">await&lt;/span> &lt;span style="color:#58a1dd">ExchangeRefs&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">else&lt;/span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Request&lt;/span>.&lt;span style="color:#58a1dd">Method&lt;/span> == &lt;span style="color:#a6be9d">&amp;#34;POST&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">await&lt;/span> &lt;span style="color:#58a1dd">ExchangePackets&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">StatusCode&lt;/span> = &lt;span style="color:#58a1dd">StatusCodes&lt;/span>.&lt;span style="color:#58a1dd">Status405MethodNotAllowed&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">await&lt;/span> &lt;span style="color:#58a1dd">Context&lt;/span>.&lt;span style="color:#58a1dd">Response&lt;/span>.&lt;span style="color:#58a1dd">WriteAsync&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;Method Not Allowed&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">//Context.Request.Path;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="运行">运行&lt;/h2>
&lt;blockquote>
&lt;p>dotnet run&lt;/p>
&lt;/blockquote>
&lt;p>在 Windows 10 上运行成功&lt;br>
在 Ubuntu 16.04 上运行成功&lt;/p>
&lt;h2 id="其他">其他&lt;/h2>
&lt;p>源码使用 MIT 协议托管到 Github: &lt;a href="https://github.com/fcharlie/Angelo">https://github.com/fcharlie/Angelo&lt;/a>，验证等其他细节未实现。&lt;/p>
- https://forcemz.net/posts/2017/2017-05-11-angelo/ - Copyright (c) 2009-2024 J23</description></item><item><title>Git LFS 服务器实现杂谈</title><link>https://forcemz.net/posts/2017/2017-04-16-moses/</link><pubDate>Sun, 16 Apr 2017 10:00:00 +0800</pubDate><guid>https://forcemz.net/posts/2017/2017-04-16-moses/</guid><description>Charlie's Rethinking https://forcemz.net/posts/2017/2017-04-16-moses/ -&lt;h1 id="前言">前言&lt;/h1>
&lt;p>从前言开始，便又要讲起 git 原理，多次讲起不胜其烦，诸位如果要了解 git 原理可以通过 bing google 或者其他搜索引擎从网络上查阅资料，也可以去 git-scm.com 网站查看 《Pro Git》，对于大多数开发者而言已是足够。&lt;/p>
&lt;p>倘若开发者熟知 git 原理，便可以知道 git 在管理大文件时，显得尤为麻烦，一来反复修改占用空间巨大，二来，每次修改网络传输占用资源，为了给更多的开发者服务，代码托管系统往往还需要对存储，网络连接进行限制，大文件的传输和存储肯定会陷入了囧境。&lt;/p>
&lt;p>开发者用到大文件的地方可能有静态资源，比如 PSD 文件，还有某 SDK 等。如何管理这些文件？善于思考的同学可能会想到，将这些大文件存储在第三方存储，等检出存储库后，再通过程序更新这些资源，实际上 NuGet，Maven 就是这种思路。但是对于 PSD 这类文件此方案就显得不足。&lt;/p>
&lt;p>作为全球最大的代码托管平台，Github 在这方面深有感触，为了解决大文件存储的问题，2015年4月，Github 宣布推出 Git LFS ，
&lt;a href="https://github.com/blog/1986-announcing-git-large-file-storage-lfs">Announcing Git Large File Storage (LFS)&lt;/a>。&lt;/p>
&lt;h2 id="lfs-主要技术原理">LFS 主要技术原理&lt;/h2>
&lt;p>在 git 存储库中，有一些特殊文件， &lt;code>.gitattributes&lt;/code>，&lt;code>.gitignore&lt;/code>，&lt;code>.gitattributes&lt;/code> 顾名思义用来管理存储库下路径的属性，如何过滤，如何 diff，如何合并。而 &lt;code>.gitignore&lt;/code> 的作用则是排除指定的路径，不添加到版本库中。&lt;/p>
&lt;p>笔者最早了解到 .gitattributes 时是使用 git 管理毕业论文，设置好 .gitattributes 后，就可以到 docx 文档进行 diff 了。利用这一特性，git lfs 在运行命令 &lt;code>git lfs track&lt;/code> 后，将路径添加到 &lt;code>.gitattributes&lt;/code> 文件中，比如这样：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>clang.tar.gz filter=lfs diff=lfs merge=lfs -text
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后修改 git 钩子，包括 post-checkout post-commit post-merge pre-push，其中的内容都是将当前钩子命令当做参数启动 git-lfs。&lt;/p>
&lt;p>创建提交的过程中，比如添加了 clang.tar.gz ，git 会启动 lfs 命令，将 clang.tar.gz 文件的 hash 值（目前是 sha256），大小写入到一个名字叫 &lt;code>clang.tar.gz&lt;/code> 文件中，然后将此文件作为大文件的 &lt;code>Pointer&lt;/code> 提交到版本库中，原始的 clang.tar.gz 会单独存储到 &lt;code>lfs/objects&lt;/code>，将更新推送到远程服务器上时，pre-push 钩子启动 git lfs，git lfs 连接到远程的 LFS 服务器，将文件上传到服务器上。&lt;/p>
&lt;p>而 checkout 或者 pull 的时候，本地没有的大文件，git lfs 就会将大文件下载下来。&lt;/p>
&lt;p>简单的说就是利用 .gitattributes 偷梁换柱。&lt;/p>
&lt;p>git lfs 规范可以在 &lt;a href="https://github.com/git-lfs/git-lfs/blob/master/docs/spec.md">https://github.com/git-lfs/git-lfs/blob/master/docs/spec.md&lt;/a> 查看。&lt;/p>
&lt;h2 id="lfs-服务器的实现">LFS 服务器的实现&lt;/h2>
&lt;p>实现一个 LFS 服务器实际上是比较简单的，在 Github 上搜索 &lt;code>git lfs server&lt;/code> 可以找到很多个类似项目。在 git-lfs wiki 上也有
&lt;a href="https://github.com/git-lfs/git-lfs/wiki/Implementations">https://github.com/git-lfs/git-lfs/wiki/Implementations&lt;/a> ,&lt;/p>
&lt;p>按照 v0.5 的协议，&lt;/p>
&lt;p>获取大文件的信息:&lt;/p>
&lt;blockquote>
&lt;p>GET /info/lfs/objects/{oid}&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;oid&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;oid&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;size&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">123&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;_links&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;download&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;href&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;http://some.com/oid&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;header&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;Authorization&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;some token&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>下载文件:&lt;/p>
&lt;blockquote>
&lt;p>GET /lfs/objects/{oid}&lt;/p>
&lt;/blockquote>
&lt;p>而这个 URL 是由 /info/lfs/objects/{oid} 获得的。&lt;/p>
&lt;p>如果要上传文件，首先是 POST：&lt;/p>
&lt;blockquote>
&lt;p>POST /lfs/info/objects/{oid}&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;_links&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;upload&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;href&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;https://some-upload.com&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;header&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;Key&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;value&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;verify&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;href&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;https://some-callback.com&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;header&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;Key&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;value&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>获得 upload 的 URL 后，然后使用 HTTP PUT 方法将文件上传到返回的 URL。PUT 时会将 header 的内容添加到 HTTP 请求头中，这里一般会使用 Authorization 头，这种设计可以将大文件存储到第三方存储上。&lt;/p>
&lt;p>Git LFS 2.0 已经移除了 v0.5 版本的 API，目前使用 &lt;a href="https://github.com/git-lfs/git-lfs/blob/master/docs/api/batch.md">Git LFS Batch API&lt;/a>&lt;/p>
&lt;p>Batch 实际上就是将 v0.5 API 的多个请求合并到一个请求中。由于 batch.md 已经说了，虽然不是很明白，也就不多说了。&lt;/p>
&lt;p>大多数 Git LFS 服务已经支持 Batch API 了，也就没什么好说的了。&lt;/p>
&lt;p>Git LFS 2.0 增加了 &lt;a href="https://github.com/git-lfs/git-lfs/blob/master/docs/api/locking.md">Locking API&lt;/a>&lt;/p>
&lt;p>开发者可以对某路径进行锁定，以避免其他开发者提交新的大文件到存储机器。于是就有了 Locking API。&lt;/p>
&lt;p>Locking API 需要实现的有 lock unlock verify （POST），list（GET）。verify 和 list 的区别主要是区分 &lt;code>我的&lt;/code> 和 &lt;code>其他的&lt;/code> 锁。&lt;/p>
&lt;p>创建：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;lock&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;6&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;path&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;image/av115.psd&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;locked_at&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;2017-04-14T02:19:04Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;owner&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;charlie&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;locks&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;2&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;path&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;image/av111.psd&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;locked_at&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;2017-04-11T10:47:30Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;owner&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;tom&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;3&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;path&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;image/av112.psd&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;locked_at&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;2017-04-12T06:30:09Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;owner&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;jekk&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;4&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;path&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;image/av113.psd&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;locked_at&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;2017-04-12T06:30:13Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;owner&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;other&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;5&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;path&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;image/av114.psd&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;locked_at&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;2017-04-12T06:30:16Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;owner&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;charlie&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;6&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;path&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;image/av115.psd&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;locked_at&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;2017-04-14T02:19:04Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;owner&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;charlie&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;next_cursor&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;6&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>验证：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;ours&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;5&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;path&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;image/av114.psd&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;locked_at&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;2017-04-12T06:30:16Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;owner&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;charlie&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;6&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;path&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;image/av115.psd&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;locked_at&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;2017-04-14T02:19:04Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;owner&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;charlie&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;theirs&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;2&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;path&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;image/av111.psd&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;locked_at&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;2017-04-11T10:47:30Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;owner&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;tom&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;3&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;path&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;image/av112.psd&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;locked_at&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;2017-04-12T06:30:09Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;owner&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;jekk&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;4&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;path&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;image/av113.psd&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;locked_at&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;2017-04-12T06:30:13Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;owner&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;other&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;#34;next_cursor&amp;#34;&lt;/span>: &lt;span style="color:#a6be9d">&amp;#34;6&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>笔者在实现 Git LFS 服务器时，使用的是 C++ , HTTP 库使用 cpprestsdk。锁的设计使用了 sqlite3，即每个存储库拥有一个 sqlite3 db，使用文件锁同步。&lt;/p>
&lt;h2 id="gvfs">GVFS&lt;/h2>
&lt;h2 id="闲聊">闲聊&lt;/h2>
&lt;p>Microsoft，Github 还有 Google ，都拥有版本控制领域的精英，比如微软有 git-for-windows 的维护者 Johannes Schindelin @dscho ，libgit2 LibGit2Sharp 核心维护者 Edward Thomson @ethomson 他还在 Github 待过一段时间。而 Github 有 Carlos Martín Nieto @carlosmn Vincent Marti @vmg，二者参加 Soc2011 为 libgit2 添加了网络栈，vmg 是 github 的主力程序员了，涉猎很广。Google 有 Git 的主要维护者 Junio C Hamano。&lt;/p>
&lt;p>&lt;a href="https://git.wiki.kernel.org/index.php/SoC2011Projects">SoC2011Projects&lt;/a>&lt;/p>
- https://forcemz.net/posts/2017/2017-04-16-moses/ - Copyright (c) 2009-2024 J23</description></item><item><title>2016 技术总结</title><link>https://forcemz.net/posts/2016/2016-12-31-total/</link><pubDate>Sat, 31 Dec 2016 23:00:00 +0800</pubDate><guid>https://forcemz.net/posts/2016/2016-12-31-total/</guid><description>Charlie's Rethinking https://forcemz.net/posts/2016/2016-12-31-total/ -&lt;p>&lt;strong>先说说公司的吧：&lt;/strong>&lt;/p>
&lt;p>最初开发了 Miracle 项目，这个项目是 nginx 动态代理和 svn 动态代理，然后共用路由库 cratos。&lt;/p>
&lt;p>后来又开发者 Illusory 项目，最初实现了 git-upload-pack git-receive-pack 的包装，然后后端服务器上运行 git-srv 就可以实现 git 任意协议的动态代理。
为了减少中间环节，新的 ssh 服务器直接与 git-srv 通讯。于是 git-srv 也就改进了。&lt;/p>
&lt;p>出于改进 git hook 机制的目的，实现了 git-hook，对于大文件的检测直接分析 pack 文件。改进了权限检测，大文件检测，以及动态的流程。&lt;/p>
&lt;p>而后有增加了开源项目 git-analyze 支持用户从本地分析和减小存储库体积，年底又增加了 git-cheat git-complete pre-commit 等工具。&lt;/p>
&lt;p>在 SSH 协议和 svn 协议分布式完成后，实现 git 的 HTTP 协议也尤为重要，于是又推出了 brzo，在 blog 中有讲。brzo 从原始的 HTTP 1.1 协议解析，
到针对 git 特性优化。&lt;/p>
&lt;p>然后还实现了 git 协议服务器，和基于 git 协议的内部 git 同步服务，同步是触发式，由 post-receive 触发。&lt;/p>
&lt;p>当然还有不受待见的 svn 服务改进。&lt;/p>
&lt;p>对于整个代码托管平台的架构设计也做出了反思。&lt;/p>
&lt;p>&lt;strong>个人的&lt;/strong>&lt;/p>
&lt;p>首先是 &lt;a href="https://github.com/fstudio/clangbuilder">Clangbuilder&lt;/a> 持续不断更新，我需要构建 llvm 时，点击如下图中的 Building 就不管了。&lt;/p>
&lt;p>&lt;img src="https://github.com/fstudio/clangbuilder/raw/master/docs/images/cbui.png" alt="ClangbuilderUI">&lt;/p>
&lt;p>然后是一些小工具：&lt;/p>
&lt;p>比如 MSI 解压工具 &lt;a href="https://github.com/fcharlie/Krycekium">Krycekium Installer&lt;/a>，喜欢免安装的同学可以使用。&lt;/p>
&lt;p>&lt;img src="https://github.com/fcharlie/Krycekium/raw/master/docs/images/running.png" alt="running">&lt;/p>
&lt;p>Krycekium 还有纯 GDI 版本 &lt;a href="https://github.com/fcharlie/DiegoInstaller">DiegoInstaller&lt;/a>&lt;/p>
&lt;p>各种 Win32 下载功能实现 &lt;a href="https://github.com/fcharlie/wget">windowsget&lt;/a>&lt;/p>
&lt;p>长路径删除工具 &lt;a href="https://github.com/fcharlie/remove-utility">File Remove Utility&lt;/a>&lt;/p>
&lt;p>PE 文件简易分析工具 &lt;a href="https://github.com/fcharlie/PEAnalyzer">PE Analyzer utility tool&lt;/a>&lt;/p>
&lt;p>AppLoader 工具 &lt;a href="https://github.com/fcharlie/AppLoader">App Loader Native&lt;/a>&lt;/p>
&lt;p>还有 MSYS launcher ，Sublime launcher 等启动器。&lt;/p>
- https://forcemz.net/posts/2016/2016-12-31-total/ - Copyright (c) 2009-2024 J23</description></item><item><title>码云分布式之 Brzo 服务器</title><link>https://forcemz.net/posts/2016/2016-11-05-brzo/</link><pubDate>Sat, 05 Nov 2016 20:00:00 +0800</pubDate><guid>https://forcemz.net/posts/2016/2016-11-05-brzo/</guid><description>Charlie's Rethinking https://forcemz.net/posts/2016/2016-11-05-brzo/ -&lt;h1 id="前言">前言&lt;/h1>
&lt;p>码云是国内最大的代码托管平台之一。码云基于 Gitlab 5.5 开发，经过几年的开发已经和官方的 Gitlab 有了很大的不同。
为了支撑更大的用户规模，码云也在不断的改进，而本文也主要分享码云分布式 Brzo GIT HTTP 服务器的开发经验。&lt;/p>
&lt;h1 id="码云分布式概述">码云分布式概述&lt;/h1>
&lt;p>自码云研发分布式以来，其分布式方案也发生了几次演。在 2014 年，码云(当时的 GIT@OSC ) 出现了高速的增长，
用户和项目越来越多，在旧的方案中，多个机器通过 NFS 挂载在前端服务器上，用户对仓库的读写和网页浏览最终都是在前端服务器上被处理，
这样的机制容易带来严重的性能问题，第一是 IO 与计算 过于集中，第二是 NFS 带来了巨大的内网流量。&lt;/p>
&lt;p>团队决定使用 Ceph FS，当服务最终迁移到 Ceph 上时，迁移成功一天之后就出现了严重的宕机事故，经过研究发现，
Git 存储库具有海量的小文件，海量小文件一直是分布式文件系统的难题，并且当时 Ceph 也并未完善，我们不得不回退到旧的 NFS 方案。
码云的分布式由此被提出到议程。&lt;/p>
&lt;p>码云分布式研发之初，最先被提出的方案是也就是直接使用分布式 RPC， 然而开发团队并未对 Git 版本控制软件的基础特性有深入的研究，
并且团队也缺乏基础服务开发人员，基于 RPC 的分布式方案也就只限于我的 demo 之中。&lt;/p>
&lt;p>后来有团队成员提出了使用 NGINX 动态代理，通过解析请求的 URL，将与存储相关的请求代理到存储服务器上，然后，
存储服务器上的 Gitlab 对请求进行解析。这样一来， 浏览器访问，以及 Git 的 HTTP 协议 clone 都能够分发到各个存储服务器上。
这个时候剩下的就是如何实现 NGINX 动态代理了，由于我实现 git 的 svn 接入时有过 NGINX 模块开发经验，所以就被安排到 NGINX 动态代理模块的开发，
以及路由模块的开发。路由策略一开始直接使用Gitlab 的 Magic Path 策略，即取用户的前两个字符 (A&lt;del>Z|a&lt;/del>z|0&lt;del>9|-_) 等，
不同的 Magic Path 对应不同的内网 IP。后来改为在 MySQL 中存储用户的仓库所在的机器内网 IP，并将 IP 缓存到 Redis 中，独立存储。
路由模块自主的向 Redis&lt;/del>MySQL 读取路由，当从 MySQL 中也找不到存储机器时，才返回错误。对于存储库无关的 URL 请求，
随机分发到不同的存储服务器上。先后有 zouqilin 和 lowkey2046 参与开发。&lt;/p>
&lt;p>NGINX 的动态代理方案中，其模块开发也经历了基于 NDK 旧版路由，NDK 新版路由，以及 Upstream 新版路由的演进。
目前已经稳定运行，其中不乏企业用户的私有化部署。&lt;/p>
&lt;p>对于 SSH 协议方案的分布式支持，最初采用的是 zouqilin 的意见: 使用端口转发。 gitlab-shell 只需要少量修改就能支持了 SSH 端口转发。
这个时候，唯一没有分布式支持的就是 svn 协议，作为 svn 兼容实现的开发者，我在接受 svn 分布式任务后，使用 Boost.Asio 开发实现了
svnsrv 动态代理服务器，经过一些波折，svnsrv 服务器也逐渐稳定下来。&lt;/p>
&lt;p>在今年初，我研究 Git 协议后，开发了 git-srv 服务器，这个服务器接受一些参数，然后启动 git 传输命令
(这些命令有 git-upload-pack git-receive-pack git-upload-archive) ，将接收的网络数据写到命令的标准输入，将命令的标准输出，
标准错误通过网络发送给客户端。基于 git-srv ，实现了 hook 的 git-upload-pack，git-receive-pack，git-upload-archive。 在这些命令启动时，
会加载 CratosMini 路由库，自动连接到对应的存储服务器上的 git-srv， Git 的 Git 协议和 HTTP 协议以及 SSH 协议 操作都可以通过这些命令支持分布式。
然而这个方案需要频繁的启动进程，并不是非常高效。后来便开始开发 Miracle(SSHD)，Mixture，Hover 这些项目。当然 SSH 方案也有新的 SSHD 取代。&lt;/p>
&lt;p>Sshd (ssh://) 基于 libssh 开发，减少了 ssh 连接过程的进程创建次数，直接与 git-srv 通信。 而 Github 实际上也是使用 libssh 开发的服务器。
Mixture (git-daemon git://) 基于 Boost.Asio 开发，是 git 协议分布式动态服务器，直接与 git-srv 通信。
Hover (Brzo http://) 基于 Boost.Asio 开发，是 HTTP 协议服务器，直接与 git-srv 通信。
Aton 基于 Crow 开发，是监听服务器，将机器上的服务信息以及机器信息输出成 JSON 格式，返回给管理员。&lt;/p>
&lt;p>这些服务的实现，使得码云整个架构变得清晰起来。也能够支撑更大的用户规模，更好的横向扩展。&lt;/p>
&lt;h1 id="brzo-架构与实现">Brzo 架构与实现&lt;/h1>
&lt;p>Brzo 是码云分布式架构的重要组件，它实现了 Git HTTP 协议的分布式。用户通过 git 客户端访问码云服务器，其中 HTTP(HTTPS) 比重最大。
在码云团队实现 git 的 SSH， GIT 协议的分布式，和存储机器上的分布式基础服务 (git-srv) 后， Git HTTP 分布式的改造也提上日程。&lt;/p>
&lt;p>Git 的 HTTP 协议可以分为哑协议和智能协议，哑协议就是通过 GET 获取到存储库中的引用和包文件。这个不需要在服务器上安装 git 就可以访问，
可以简单的理解这个时候就是静态页面一样，类似于下载站。目前，包括码云在内的代码托管平台基本上都不支持哑协议。
另一类协议是智能协议，使用 HTTP 请求，方式描述如下:&lt;/p>
&lt;p>Git clone 或者 fetch 操作:&lt;/p>
&lt;ol>
&lt;li>GET /pathto/repo.git/info/refs?service=git-upload-pack&lt;/li>
&lt;li>POST /pathto/repo.git/git-upload-pack&lt;/li>
&lt;/ol>
&lt;p>Git push 操作:&lt;/p>
&lt;ol>
&lt;li>GET /pathto/repo.git/info/refs/service=git-receive-pack&lt;/li>
&lt;li>POST /pathto/repo.git/git-receive-pack&lt;/li>
&lt;/ol>
&lt;p>GET 拿到的是服务器的引用列表和能力列表， POST 在 clone 时 推送需要的引用，返回远程库打包的对象文件，POST 在 push 时，
推送本地仓库与服务器引用差异的打包，返回服务器解包的结果，这些都是 git 对应命令动态输出到标准输出的。 了解 GIT 的 HTTP 协议原理，
才能更好的实现 GIT 的 HTTP 协议分布式服务器。&lt;/p>
&lt;p>在项目初期，我曾经使用 .Net Core 实现过 Brzo 同等功能的服务器，在 Linux 上正常运行，由于团队其他开发者没有 C# 使用经验，
可能导致项目无法维护，老板不同意， C# 版也就没有继续开发了，仅仅只是一个实验性项目。&lt;/p>
&lt;p>码云的基础服务主要是使用 C++开发，在使用 C++ 的过程中，虽然 C++ 标准库中没有网络库，但是有许多第三网络库可以被开发者使用，
操作系统提供的 API 也能直接被 C++ 项目使用( 比如在 Windows 系统，如果开发 HTTP 服务器，可以直接使用HTTP.sys 提供的 API，
这个是经过内核优化，再使用 RIO 优化 ，效率一骑绝尘)。&lt;/p>
&lt;p>在选择第三方库时，却苦于这些第三方 HTTP 库并不一定适合码云的服务场景，比如 Microsoft 开源的 cpprestsdk，基于 HTTP.sys ( Linux 是 Boost.Asio )，
支持 Linux，还专门实现了 &lt;strong>Parallel Patterns Library&lt;/strong>，使用体验和 C# await 类似， 其主 HTTPListner 的要定位是 Restful Server，而不是 git 服务器这样的服务，
Brzo 需要动态代理到存储服务器，并且需要针对 Git 的特殊场景进行优化。 Brzo 需要支持 Git 的 智能协议，并且与 git-srv 通讯，cpprestsdk 在实现这些功能时显得麻烦并且低效，
后来我还使用过 boost.http 库，发现也不是很适合。鉴于 HTTP 1.1协议比较简单，我在使用 CURL(WinHTTP) 实现 HttpRequest 时，
已经做过一些简单解析，实现 HTTP 协议也就没有什么难度了。于是我干脆直接基于 Boost.Asio 实现 HTTP 协议服务器 Brzo。 Brzo 被设计为一个针对 GIT HTTP 协议优化的服务器，
需要支持 HTTP 1.1， 支持 Chunked Encoding，支持 GZip 解析(可以不支持 GZip 响应); 由于 Brzo 可能与 NGINX 一同运行在同一前端机器，
支持 Unix domain socket 能够优化反向代理效率，故而 Brzo 添加了 Unix domain socket 支持。&lt;/p>
&lt;h2 id="http-协议解析">HTTP 协议解析&lt;/h2>
&lt;p>要获取 HTTP 协议全文，可以访问: &lt;a href="https://tools.ietf.org/html/rfc7230">RFC7230&lt;/a>， &lt;a href="https://tools.ietf.org/html/rfc7231">RFC7231&lt;/a> ，&lt;a href="https://tools.ietf.org/html/rfc7232">RFC7232&lt;/a>
&lt;a href="https://tools.ietf.org/html/rfc7233">RFC7233&lt;/a>， &lt;a href="https://tools.ietf.org/html/rfc7234">RFC7234&lt;/a>， &lt;a href="https://tools.ietf.org/html/rfc7237">RFC7235&lt;/a>，
&lt;a href="https://tools.ietf.org/html/rfc7236">RFC7236&lt;/a>， &lt;a href="https://tools.ietf.org/html/rfc7237">RFC7237&lt;/a>。&lt;/p>
&lt;p>除此之外，还可以阅读 《HTTP 权威指南》。&lt;/p>
&lt;p>Git 的 HTTP 协议是 HTTP 协议的真子集，当 GIT 使用哑协议访问远程仓库时，就是纯粹的 GET 请求，请求的资源都是静态的存在在远程服务器上，
面对这种请求， NGINX 开启 sendfile 就能很好的支持。 当 GIT 使用智能协议访问远程仓库时，情况变得稍微复杂，请求分为 GET 和 POST，
然后头部的一些字段的属性需要符合 GIT 的规范，比如 Content-Type。并且请求体也可能是动态生成的，这个时候就是 chunked 编码了。&lt;/p>
&lt;p>了解了 GIT 的 HTTP 协议，如果要针对 GIT 实现 HTTP 服务器，首先要解析头部，然后请求体解析需要支持解析 gzip，以及 chunked 编码，
由于 git 不会同时使用chunked+gzip 编码，所以这一点可以忽略。然后就是生成 chunked 编码。 HTTP 1.1协议要支持 KeepAlive，
所以 Brzo 还要支持 KeepAlive。&lt;/p>
&lt;h2 id="http-keepalive-策略">HTTP KeepAlive 策略&lt;/h2>
&lt;p>KeepAlive 的实现简单来说就是打开 socket 后，处理完流程后，服务端 socket 并不主动断开，而是设置超时，超时时间内，有新的连接就继续处理，
重设定时器。如果超时时间过后仍然没有新的连接，就关闭 socket。&lt;/p>
&lt;p>如果使用 Session 来描述整个 HTTP 处理流程， 处理完成后重置 Session，继续等待请求即可。如图:&lt;/p>
&lt;p>&lt;img src="https://github.com/fcharlie/pagesimage/raw/master/images/httpkeepaliveflowserver.png" alt="Server Flow">&lt;/p>
&lt;p>如果是客户端如下图:&lt;/p>
&lt;p>&lt;img src="https://cdn.wp.nginx.com/wp-content/uploads/2014/03/basictcp2.png" alt="TCP Flow">&lt;/p>
&lt;p>&lt;img src="https://cdn.wp.nginx.com/wp-content/uploads/2014/03/tcpka.png" alt="KeepAlive Client Flow">&lt;/p>
&lt;p>图片来自于 &lt;a href="https://www.nginx.com/blog/http-keepalives-and-web-performance/">HTTP Keepalive Connections and Web Performance&lt;/a>&lt;/p>
&lt;h2 id="chunked-编码">Chunked 编码&lt;/h2>
&lt;p>在网络的世界里，有些资源是静态的，大小可期的，使用 HTTP 请求获取文件时，Content-Length 就能够拿到大小，从而按照大小将数据全部读取，
然而，还有很多资源是动态生成的，而 GIT 的 HTTP 协议，Push 的 POST 操作的请求体是 send-pack 的标准输出， 这个大小只能边读取边计算。
所以这个时候的请求体就是 chunked 编码。在服务器上，无论是 fetch 还是 push 操作，都是 git-upload-pack (git-receive-pack) 的标准输出，
这个时候响应体也是 chunked 编码。&lt;/p>
&lt;p>Chunked 编码的 BNF 格式描述如下:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-BNF" data-lang="BNF">&lt;span style="display:flex;">&lt;span> Chunked-Body = *chunk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> last-chunk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> trailer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CRLF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chunk = chunk-size [ chunk-extension ] CRLF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chunk-data CRLF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chunk-size = 1*HEX
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> last-chunk = 1*(&amp;#34;0&amp;#34;) [ chunk-extension ] CRLF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chunk-extension= *( &amp;#34;;&amp;#34; chunk-ext-name [ &amp;#34;=&amp;#34; chunk-ext-val ] )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chunk-ext-name = token
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chunk-ext-val = token | quoted-string
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chunk-data = chunk-size(OCTET)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> trailer = *(entity-header CRLF)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在使用 Boost.Asio 实现 HTTP 协议时，遇到 Chunked 编码的第一选择是使用 boost::asio::streambuf 配合 boost::asio::async_read_until
先读取 chunk-size 然后读取 chunk-data，cpprestsdk 正是使用 streambuf 解析 chunked-encoding， async_read_until 先读取一定长度的数据，
如果存在 CRLF 就返回，不存在就继续度， async_read_until 内部使用 boost::regex 实现。 出于内存分配和读取效率上的考量，
Brzo 使用固定长度缓冲区，并且封装了一个 chunked 解析状态机:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">static&lt;/span> &lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#ff636f">int8_t&lt;/span> &lt;span style="color:#58a1dd">unhex&lt;/span>[&lt;span style="color:#a6be9d">256&lt;/span>] &lt;span style="color:#ff636f">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#a6be9d">2&lt;/span>, &lt;span style="color:#a6be9d">3&lt;/span>, &lt;span style="color:#a6be9d">4&lt;/span>, &lt;span style="color:#a6be9d">5&lt;/span>, &lt;span style="color:#a6be9d">6&lt;/span>, &lt;span style="color:#a6be9d">7&lt;/span>, &lt;span style="color:#a6be9d">8&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6be9d">9&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#a6be9d">10&lt;/span>, &lt;span style="color:#a6be9d">11&lt;/span>, &lt;span style="color:#a6be9d">12&lt;/span>, &lt;span style="color:#a6be9d">13&lt;/span>, &lt;span style="color:#a6be9d">14&lt;/span>, &lt;span style="color:#a6be9d">15&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#a6be9d">10&lt;/span>, &lt;span style="color:#a6be9d">11&lt;/span>, &lt;span style="color:#a6be9d">12&lt;/span>, &lt;span style="color:#a6be9d">13&lt;/span>, &lt;span style="color:#a6be9d">14&lt;/span>, &lt;span style="color:#a6be9d">15&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">class&lt;/span> &lt;span style="color:#58a1dd">ChunkedsizeImpl&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">public&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">enum&lt;/span> &lt;span style="color:#58a1dd">State&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">StatusClear&lt;/span>, &lt;span style="color:#828b96;font-style:italic">////
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">RequireInput&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ChunkedLengthOK&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">void&lt;/span> &lt;span style="color:#58a1dd">Reset&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">state_&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">StatusClear&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">offset_&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">chklen_&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">ChunkedsizeEx&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">data&lt;/span>, &lt;span style="color:#58a1dd">size_t&lt;/span> &lt;span style="color:#58a1dd">datalen&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">switch&lt;/span> (&lt;span style="color:#58a1dd">state_&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#58a1dd">StatusClear&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#58a1dd">RequireInput&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">offset_&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#58a1dd">ChunkedLengthOK&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">offset_&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">chklen_&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">state_&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">RequireInput&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">for&lt;/span> (&lt;span style="color:#58a1dd">size_t&lt;/span> &lt;span style="color:#58a1dd">i&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>; &lt;span style="color:#58a1dd">i&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">datalen&lt;/span>; &lt;span style="color:#58a1dd">i&lt;/span>&lt;span style="color:#ff636f">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">uint8_t&lt;/span> &lt;span style="color:#58a1dd">c&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">static_cast&lt;/span>&lt;span style="color:#ff636f">&amp;lt;&lt;/span>&lt;span style="color:#ff636f">uint8_t&lt;/span>&lt;span style="color:#ff636f">&amp;gt;&lt;/span>(&lt;span style="color:#58a1dd">data&lt;/span>[&lt;span style="color:#58a1dd">i&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">switch&lt;/span> (&lt;span style="color:#58a1dd">c&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#a6be9d">&amp;#39;\r&amp;#39;&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#a6be9d">&amp;#39;\n&amp;#39;&lt;/span>&lt;span style="color:#ff636f">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">offset_&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">offset_&lt;/span> &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#58a1dd">i&lt;/span> &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">state_&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">ChunkedLengthOK&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">default&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">int8_t&lt;/span> &lt;span style="color:#58a1dd">c2&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">unhex&lt;/span>[&lt;span style="color:#58a1dd">c&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">c2&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">chklen_&lt;/span> &lt;span style="color:#ff636f">*=&lt;/span> &lt;span style="color:#a6be9d">16&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">chklen_&lt;/span> &lt;span style="color:#ff636f">+=&lt;/span> &lt;span style="color:#58a1dd">c2&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">size_t&lt;/span> &lt;span style="color:#58a1dd">Chklen&lt;/span>() &lt;span style="color:#ff636f">const&lt;/span> { &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">chklen_&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">size_t&lt;/span> &lt;span style="color:#58a1dd">Offset&lt;/span>() &lt;span style="color:#ff636f">const&lt;/span> { &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">offset_&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">private&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">State&lt;/span> &lt;span style="color:#58a1dd">state_&lt;/span>{&lt;span style="color:#58a1dd">StatusClear&lt;/span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">size_t&lt;/span> &lt;span style="color:#58a1dd">offset_&lt;/span>{&lt;span style="color:#a6be9d">0&lt;/span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">size_t&lt;/span> &lt;span style="color:#58a1dd">chklen_&lt;/span>{&lt;span style="color:#a6be9d">0&lt;/span>}; &lt;span style="color:#828b96;font-style:italic">//// FM
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>ChunkedsizeEx 负责解析，根据返回值的不同，Session 将决定写 chunk 到后端还是继续读取。这样虽然使编码变得复杂，当减少内存分配，
降低拷贝。这对于长期运行的服务器来说，是非常重要的。&lt;/p>
&lt;p>生成 chunked 编码时，使用 async_read_some 读取一定大小的数据，准备的缓冲区预留前8个字节，后2字节，共计10字节，读取到数据后，
将数据长度按照 chunk 规定格式写入前8个字节，8字节与缓冲区大小有关，尾部写入 &amp;ldquo;\r\n&amp;rdquo;。与存储服务器连接断开时(或者进程关闭输出)，
写入 chunk-end 即 &amp;ldquo;0\r\n\r\n&amp;rdquo;&lt;/p>
&lt;p>这种 chunk 策略，能够减少内存拷贝，降低服务器资源占用。Brzo 的 clone 速度和 GIT 协议服务器 Mixture (git-daemon) 接近。&lt;/p>
&lt;h2 id="gzip-编码">GZip 编码&lt;/h2>
&lt;p>Git 客户端在 fetch 的 POST 请求时，发送给客户端的需要的引用列表一般使用 gzip 编码，此时 Content-Encoding 对应的编码是 gzip。&lt;/p>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Gzip">gzip&lt;/a> 使用的是 Deflate 算法，要解析 gzip，通常的办法是使用 zlib 来实现。在 我开发 Exile 时，
就使用过 zlib 解析 gzip
&lt;a href="https://github.com/fstudio/Exile/blob/659294de0fa81b2f04c409afe23657f7d3a91f31/Exile/GZipStream.cpp">GZipStream.cpp&lt;/a>
当然， GZipStream.cpp 解析的是已知 gzip 编码大小，一次性解析完毕就行，Brzo 解析则是读取多少解析多少，
所以这里使用了类似与 ChunkedsizeImpl 的策略。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">class&lt;/span> &lt;span style="color:#58a1dd">GZipExchange&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">public&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">GZipExchange&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">~&lt;/span>&lt;span style="color:#58a1dd">GZipExchange&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">Initialize&lt;/span>(&lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">refbuf&lt;/span>, &lt;span style="color:#58a1dd">size_t&lt;/span> &lt;span style="color:#58a1dd">bufsize&lt;/span>); &lt;span style="color:#828b96;font-style:italic">////
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">IsEmpty&lt;/span>() &lt;span style="color:#ff636f">const&lt;/span> { &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">stream_&lt;/span>.&lt;span style="color:#58a1dd">avail_out&lt;/span> &lt;span style="color:#ff636f">!=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">AvailableJoin&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">buf&lt;/span>, &lt;span style="color:#58a1dd">size_t&lt;/span> &lt;span style="color:#58a1dd">len&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ssize_t&lt;/span> &lt;span style="color:#58a1dd">Decompress&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">private&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">z_stream&lt;/span> &lt;span style="color:#58a1dd">stream_&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">uint8_t&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">out_&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">size_t&lt;/span> &lt;span style="color:#58a1dd">chunksize_&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">initialized_&lt;/span>{&lt;span style="color:#58a1dd">false&lt;/span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中 Initialize 将缓冲区绑定到 GitZipExchange， 然后 AvailableJoin 就是待解析的 gzip 缓存区， Decompress 就是不断解析，直至 IsEmpty 为真。
在 Session 中， GitZipExchange 变量使用 shared_ptr 包装， KeepAlive 重置时， reset 即可。&lt;/p>
&lt;h2 id="unix-domain-socket-支持">Unix domain socket 支持&lt;/h2>
&lt;p>Brzo 核心版运行在 Linux 上，用户在使用 NGINX， Apache 之类的 HTTP 服务器作为负载均衡服务器时，
可以通过 Unix domain socket 与 Brzo 通信，
Brzo 基于 Boost.Asio 开发，在实现对 Unix domain socket 的支持时也就考虑到使用 Boost.Asio 的方案。&lt;/p>
&lt;p>Boost.Asio 支持 Unix domain socket 可以使用:
&lt;a href="http://www.boost.org/doc/libs/1_62_0/doc/html/boost_asio/reference/local__stream_protocol/socket.html">boost::asio::local::stream_protocol::socket&lt;/a>&lt;/p>
&lt;p>而普通的 TCP 使用 boost::asio::ip::tcp::socket， 两个类都拥有相同的读写函数，可以直接使用模板包装一下，就可以支持两种 socket 了。
更多的细节可以查看开源版本源码。&lt;/p>
&lt;h2 id="超时">超时&lt;/h2>
&lt;p>与普通的 HTTP 服务器不同的是，GIT HTTP 服务器的超时需要特殊设置。比如，当使用 &amp;ndash;depth 参数克隆远程仓库时，
虽然传输包大小会更小一些，但是程序在接受数据前将等待更长的时间，还有执行钩子也将花费更多的时间，
所以在 Brzo 的源码里，读取后端服务器时会将超时时间额外的延长。&lt;/p>
&lt;h1 id="brzo-开源版本">Brzo 开源版本&lt;/h1>
&lt;p>Brzo 开源版本移除了验证和分布式功能，而 ProcessAsync 取代了后端的 socket。&lt;/p>
&lt;h2 id="进程的包装">进程的包装&lt;/h2>
&lt;p>ProcessAsync 就是进程的包装，将输入输出与对于平台的&lt;strong>流&lt;/strong> 绑定到一起。然后实现 async_read_some async_write_some 这样的函数。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#ifndef PROCESS_HPP
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#define PROCESS_HPP
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;boost/asio.hpp&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#ifdef _WIN32
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;boost/asio/windows/stream_handle.hpp&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>&lt;span style="color:#ff636f">typedef&lt;/span> &lt;span style="color:#58a1dd">boost&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">asio&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">windows&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">stream_handle&lt;/span> &lt;span style="color:#58a1dd">stdiostream&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">typedef&lt;/span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">ProcessId&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#else
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;boost/asio/posix/stream_descriptor.hpp&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>&lt;span style="color:#ff636f">typedef&lt;/span> &lt;span style="color:#58a1dd">boost&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">asio&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">posix&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">stream_descriptor&lt;/span> &lt;span style="color:#58a1dd">stdiostream&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">typedef&lt;/span> &lt;span style="color:#58a1dd">pid_t&lt;/span> &lt;span style="color:#58a1dd">ProcessId&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">class&lt;/span> &lt;span style="color:#58a1dd">ProcessAsync&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">public&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ProcessAsync&lt;/span>(&lt;span style="color:#58a1dd">boost&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">asio&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">io_service&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">ios&lt;/span>) &lt;span style="color:#ff636f">:&lt;/span> &lt;span style="color:#58a1dd">input_&lt;/span>(&lt;span style="color:#58a1dd">ios&lt;/span>), &lt;span style="color:#58a1dd">output_&lt;/span>(&lt;span style="color:#58a1dd">ios&lt;/span>) {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">~&lt;/span>&lt;span style="color:#58a1dd">ProcessAsync&lt;/span>() { &lt;span style="color:#58a1dd">ProcessClean&lt;/span>(); }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">Execute&lt;/span>(&lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">Argc&lt;/span>, &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">**&lt;/span>&lt;span style="color:#58a1dd">Argv&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">void&lt;/span> &lt;span style="color:#58a1dd">ProcessClean&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">boost&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">asio&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">io_service&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">get_io_service&lt;/span>() { &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">input_&lt;/span>。&lt;span style="color:#58a1dd">get_io_service&lt;/span>(); }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/// Write
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">template&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&lt;/span>&lt;span style="color:#ff636f">typename&lt;/span> &lt;span style="color:#58a1dd">ConstBufferSequence&lt;/span>, &lt;span style="color:#ff636f">typename&lt;/span> &lt;span style="color:#58a1dd">WriteHandler&lt;/span>&lt;span style="color:#ff636f">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">void&lt;/span> &lt;span style="color:#58a1dd">async_write_some&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">ConstBufferSequence&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">buffers&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WriteHandler&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">handler&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">input_&lt;/span>.&lt;span style="color:#58a1dd">async_write_some&lt;/span>(&lt;span style="color:#58a1dd">buffers&lt;/span>, &lt;span style="color:#58a1dd">handler&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">//// Read
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">template&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&lt;/span>&lt;span style="color:#ff636f">typename&lt;/span> &lt;span style="color:#58a1dd">MutableBufferSequence&lt;/span>, &lt;span style="color:#ff636f">typename&lt;/span> &lt;span style="color:#58a1dd">ReadHandler&lt;/span>&lt;span style="color:#ff636f">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">void&lt;/span> &lt;span style="color:#58a1dd">async_read_some&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">MutableBufferSequence&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">buffers&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ReadHandler&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">handler&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">output_&lt;/span>.&lt;span style="color:#58a1dd">async_read_some&lt;/span>(&lt;span style="color:#58a1dd">buffers&lt;/span>, &lt;span style="color:#58a1dd">handler&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">////
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">template&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&lt;/span>&lt;span style="color:#ff636f">typename&lt;/span> &lt;span style="color:#58a1dd">ConstBufferSequence&lt;/span>, &lt;span style="color:#ff636f">typename&lt;/span> &lt;span style="color:#58a1dd">WriteHandler&lt;/span>&lt;span style="color:#ff636f">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">void&lt;/span> &lt;span style="color:#58a1dd">async_write&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">ConstBufferSequence&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">buffers&lt;/span>, &lt;span style="color:#58a1dd">WriteHandler&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">handler&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">boost&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">asio&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">async_write&lt;/span>(&lt;span style="color:#58a1dd">input_&lt;/span>, &lt;span style="color:#58a1dd">buffers&lt;/span>, &lt;span style="color:#58a1dd">handler&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/////
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">template&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&lt;/span>&lt;span style="color:#ff636f">typename&lt;/span> &lt;span style="color:#58a1dd">MutableBufferSequence&lt;/span>, &lt;span style="color:#ff636f">typename&lt;/span> &lt;span style="color:#58a1dd">ReadHandler&lt;/span>&lt;span style="color:#ff636f">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">void&lt;/span> &lt;span style="color:#58a1dd">async_read&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">MutableBufferSequence&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">buffers&lt;/span>, &lt;span style="color:#58a1dd">ReadHandler&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">handler&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">boost&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">asio&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">async_read&lt;/span>(&lt;span style="color:#58a1dd">output_&lt;/span>, &lt;span style="color:#58a1dd">buffers&lt;/span>, &lt;span style="color:#58a1dd">handler&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">void&lt;/span> &lt;span style="color:#58a1dd">cancel&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">input_&lt;/span>.&lt;span style="color:#58a1dd">cancel&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">output_&lt;/span>.&lt;span style="color:#58a1dd">cancel&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">void&lt;/span> &lt;span style="color:#58a1dd">cancel&lt;/span>(&lt;span style="color:#58a1dd">boost&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">system&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">error_code&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">ec&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">input_&lt;/span>.&lt;span style="color:#58a1dd">cancel&lt;/span>(&lt;span style="color:#58a1dd">ec&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">output_&lt;/span>.&lt;span style="color:#58a1dd">cancel&lt;/span>(&lt;span style="color:#58a1dd">ec&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">private&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">stdiostream&lt;/span> &lt;span style="color:#58a1dd">input_&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">stdiostream&lt;/span> &lt;span style="color:#58a1dd">output_&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ProcessId&lt;/span> &lt;span style="color:#58a1dd">id_&lt;/span>{&lt;span style="color:#a6be9d">0&lt;/span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>对于不同平台，Execute 函数是重中之重，启动进程，修改输入输出等等。&lt;/p>
&lt;h2 id="windows-命名管道">Windows 命名管道&lt;/h2>
&lt;p>在 Windows 中，匿名管道不支持端口完成，而对于 boost stream_handle 而言，不支持端口完成意味着不能异步读写，
所以我们需要改造新的管道，实际上匿名管道是命名管道的一种特殊实现，同样的，我们也可以使用命名管道实现支持端口完成的等价匿名管道。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">BOOL&lt;/span> &lt;span style="color:#58a1dd">WINAPI&lt;/span> &lt;span style="color:#58a1dd">MzCreatePipeEx&lt;/span>(&lt;span style="color:#58a1dd">OUT&lt;/span> &lt;span style="color:#58a1dd">LPHANDLE&lt;/span> &lt;span style="color:#58a1dd">lpReadPipe&lt;/span>, &lt;span style="color:#58a1dd">OUT&lt;/span> &lt;span style="color:#58a1dd">LPHANDLE&lt;/span> &lt;span style="color:#58a1dd">lpWritePipe&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">IN&lt;/span> &lt;span style="color:#58a1dd">LPSECURITY_ATTRIBUTES&lt;/span> &lt;span style="color:#58a1dd">lpPipeAttributes&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">HANDLE&lt;/span> &lt;span style="color:#58a1dd">ReadPipeHandle&lt;/span>, &lt;span style="color:#58a1dd">WritePipeHandle&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">dwError&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WCHAR&lt;/span> &lt;span style="color:#58a1dd">PipeNameBuffer&lt;/span>[&lt;span style="color:#58a1dd">MAX_PATH&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#828b96;font-style:italic">// Only one valid OpenMode flag - FILE_FLAG_OVERLAPPED
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#828b96;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">PipeId&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">InterlockedIncrement&lt;/span>(&lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">ProcessPipeId_&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">StringCchPrintfW&lt;/span>(&lt;span style="color:#58a1dd">PipeNameBuffer&lt;/span>, &lt;span style="color:#58a1dd">MAX_PATH&lt;/span>, &lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>&lt;span style="color:#a6be9d">\\\\&lt;/span>&lt;span style="color:#a6be9d">.&lt;/span>&lt;span style="color:#a6be9d">\\&lt;/span>&lt;span style="color:#a6be9d">Pipe&lt;/span>&lt;span style="color:#a6be9d">\\&lt;/span>&lt;span style="color:#a6be9d">Brzo.%08x.%08x&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">GetCurrentProcessId&lt;/span>(), &lt;span style="color:#58a1dd">PipeId&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ReadPipeHandle&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">CreateNamedPipeW&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">PipeNameBuffer&lt;/span>, &lt;span style="color:#58a1dd">PIPE_ACCESS_INBOUND&lt;/span> &lt;span style="color:#ff636f">|&lt;/span> &lt;span style="color:#58a1dd">FILE_FLAG_OVERLAPPED&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">PIPE_TYPE_BYTE&lt;/span> &lt;span style="color:#ff636f">|&lt;/span> &lt;span style="color:#58a1dd">PIPE_READMODE_BYTE&lt;/span> &lt;span style="color:#ff636f">|&lt;/span> &lt;span style="color:#58a1dd">PIPE_WAIT&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#828b96;font-style:italic">// Number of pipes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#a6be9d">65536&lt;/span>, &lt;span style="color:#828b96;font-style:italic">// Out buffer size
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#a6be9d">65536&lt;/span>, &lt;span style="color:#828b96;font-style:italic">// In buffer size
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#828b96;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">lpPipeAttributes&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">ReadPipeHandle&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">FALSE&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WritePipeHandle&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">CreateFileW&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">PipeNameBuffer&lt;/span>, &lt;span style="color:#58a1dd">GENERIC_WRITE&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#828b96;font-style:italic">// No sharing
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">lpPipeAttributes&lt;/span>, &lt;span style="color:#58a1dd">OPEN_EXISTING&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">FILE_ATTRIBUTE_NORMAL&lt;/span> &lt;span style="color:#ff636f">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">FILE_FLAG_OVERLAPPED&lt;/span>, &lt;span style="color:#828b96;font-style:italic">/// child process input output is wait
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">NULL&lt;/span> &lt;span style="color:#828b96;font-style:italic">// Template file
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">INVALID_HANDLE_VALUE&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#58a1dd">WritePipeHandle&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">dwError&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">GetLastError&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">CloseHandle&lt;/span>(&lt;span style="color:#58a1dd">ReadPipeHandle&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">SetLastError&lt;/span>(&lt;span style="color:#58a1dd">dwError&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">FALSE&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">lpReadPipe&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">ReadPipeHandle&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">lpWritePipe&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">WritePipeHandle&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">TRUE&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="最后">最后&lt;/h1>
&lt;p>Brzo 与之前码云使用的 grack 相比，具备了和 git-srv 服务集成的能力，由于完全异步的设计，不会阻塞的等待而导致服务失去响应。
Grack 在操作大仓库时，可能会导致服务器内存占用居高不下，而在 brzo 中，这个问题并不存在，并发很高时，内存和 CPU 也处于较低水平。&lt;/p>
&lt;p>值得一提的是，gitlab 也使用 go 实现了 gitlab-workhorse 用以取代 grack。&lt;/p>
&lt;p>在实现 Brzo 的过程中，遇到诸多难题，在解决这些难题的过程中也收获很多经验。关于 Brzo 的开源版，我们也将适时发布。&lt;/p>
&lt;h1 id="备注">备注&lt;/h1>
&lt;ol>
&lt;li>此处 NDK 是 ngx_devel_kit， nginx development kit&lt;/li>
&lt;li>RIO - &lt;a href="https://msdn.microsoft.com/en-us/library/hh997032.aspx">Registered Input/Output (RIO) API Extensions&lt;/a>&lt;/li>
&lt;/ol>
- https://forcemz.net/posts/2016/2016-11-05-brzo/ - Copyright (c) 2009-2024 J23</description></item><item><title>Windows 下载功能的实现 - C++ 篇</title><link>https://forcemz.net/posts/2016/2016-11-03-win32-download-feature/</link><pubDate>Thu, 03 Nov 2016 20:00:00 +0800</pubDate><guid>https://forcemz.net/posts/2016/2016-11-03-win32-download-feature/</guid><description>Charlie's Rethinking https://forcemz.net/posts/2016/2016-11-03-win32-download-feature/ -&lt;h1 id="前言">前言&lt;/h1>
&lt;p>笔者计划开发一个自用的包管理工具，需要支持下载功能，笔者尝试了多种 Windows 下载 API，这里分享出来。&lt;/p>
&lt;h2 id="urldownloadtofile">URLDownloadToFile&lt;/h2>
&lt;p>自 Internet Explorer 3.0 开始，Urlmon.dll 中开始提供 URLDownloadToFile，支持从远程服务器上下载文件到本地。
URLDownloadToFile 会先将文件下载到 IE 缓存目录，然后再复制到设置的输出目录，如果第二次下载，就省去了下载时间。
Urlmon 还提供了下载到缓存目录的函数 URLDownloadToCacheFile，正因为 URLDownloadToFile 先下载到缓存目录，
就会出现缓存问题，可以使用 Wininet 中的 DeleteUrlCacheEntry 删除缓存。&lt;/p>
&lt;p>使用 URLDownloadToFile 下载文件，下面有个简单的例子：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;#34;stdafx.h&amp;#34;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;string&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;Urlmon.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;functional&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#pragma comment(lib,&amp;#34;Urlmon&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">class&lt;/span> &lt;span style="color:#58a1dd">DownloadStatus&lt;/span> &lt;span style="color:#ff636f">:&lt;/span>&lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#58a1dd">IBindStatusCallback&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">public&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ULONG&lt;/span> &lt;span style="color:#58a1dd">presize&lt;/span>{ &lt;span style="color:#a6be9d">0&lt;/span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">STDMETHOD&lt;/span>(&lt;span style="color:#58a1dd">OnStartBinding&lt;/span>)(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/* [in] */&lt;/span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">dwReserved&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/* [in] */&lt;/span> &lt;span style="color:#58a1dd">IBinding&lt;/span> &lt;span style="color:#58a1dd">__RPC_FAR&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">pib&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">E_NOTIMPL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">STDMETHOD&lt;/span>(&lt;span style="color:#58a1dd">GetPriority&lt;/span>)(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/* [out] */&lt;/span> &lt;span style="color:#58a1dd">LONG&lt;/span> &lt;span style="color:#58a1dd">__RPC_FAR&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">pnPriority&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">E_NOTIMPL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">STDMETHOD&lt;/span>(&lt;span style="color:#58a1dd">OnLowResource&lt;/span>)(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/* [in] */&lt;/span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">reserved&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">E_NOTIMPL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">STDMETHOD&lt;/span>(&lt;span style="color:#58a1dd">OnProgress&lt;/span>)(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/* [in] */&lt;/span> &lt;span style="color:#58a1dd">ULONG&lt;/span> &lt;span style="color:#58a1dd">ulProgress&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/* [in] */&lt;/span> &lt;span style="color:#58a1dd">ULONG&lt;/span> &lt;span style="color:#58a1dd">ulProgressMax&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/* [in] */&lt;/span> &lt;span style="color:#58a1dd">ULONG&lt;/span> &lt;span style="color:#58a1dd">ulStatusCode&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/* [in] */&lt;/span> &lt;span style="color:#58a1dd">LPCWSTR&lt;/span> &lt;span style="color:#58a1dd">wszStatusText&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">STDMETHOD&lt;/span>(&lt;span style="color:#58a1dd">OnStopBinding&lt;/span>)(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/* [in] */&lt;/span> &lt;span style="color:#58a1dd">HRESULT&lt;/span> &lt;span style="color:#58a1dd">hresult&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/* [unique][in] */&lt;/span> &lt;span style="color:#58a1dd">LPCWSTR&lt;/span> &lt;span style="color:#58a1dd">szError&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">E_NOTIMPL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">STDMETHOD&lt;/span>(&lt;span style="color:#58a1dd">GetBindInfo&lt;/span>)(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/* [out] */&lt;/span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">__RPC_FAR&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">grfBINDF&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/* [unique][out][in] */&lt;/span> &lt;span style="color:#58a1dd">BINDINFO&lt;/span> &lt;span style="color:#58a1dd">__RPC_FAR&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">pbindinfo&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">E_NOTIMPL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">STDMETHOD&lt;/span>(&lt;span style="color:#58a1dd">OnDataAvailable&lt;/span>)(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/* [in] */&lt;/span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">grfBSCF&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/* [in] */&lt;/span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">dwSize&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/* [in] */&lt;/span> &lt;span style="color:#58a1dd">FORMATETC&lt;/span> &lt;span style="color:#58a1dd">__RPC_FAR&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">pformatetc&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/* [in] */&lt;/span> &lt;span style="color:#58a1dd">STGMEDIUM&lt;/span> &lt;span style="color:#58a1dd">__RPC_FAR&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">pstgmed&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">E_NOTIMPL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">STDMETHOD&lt;/span>(&lt;span style="color:#58a1dd">OnObjectAvailable&lt;/span>)(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/* [in] */&lt;/span> &lt;span style="color:#58a1dd">REFIID&lt;/span> &lt;span style="color:#58a1dd">riid&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/* [iid_is][in] */&lt;/span> &lt;span style="color:#58a1dd">IUnknown&lt;/span> &lt;span style="color:#58a1dd">__RPC_FAR&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">punk&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">E_NOTIMPL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// IUnknown methods. Note that IE never calls any of these methods, since
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#828b96;font-style:italic">// the caller owns the IBindStatusCallback interface, so the methods all
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#828b96;font-style:italic">// return zero/E_NOTIMPL.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">STDMETHOD_&lt;/span>(&lt;span style="color:#58a1dd">ULONG&lt;/span>, &lt;span style="color:#58a1dd">AddRef&lt;/span>)()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">STDMETHOD_&lt;/span>(&lt;span style="color:#58a1dd">ULONG&lt;/span>, &lt;span style="color:#58a1dd">Release&lt;/span>)()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">STDMETHOD&lt;/span>(&lt;span style="color:#58a1dd">QueryInterface&lt;/span>)(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/* [in] */&lt;/span> &lt;span style="color:#58a1dd">REFIID&lt;/span> &lt;span style="color:#58a1dd">riid&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/* [iid_is][out] */&lt;/span> &lt;span style="color:#ff636f">void&lt;/span> &lt;span style="color:#58a1dd">__RPC_FAR&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">__RPC_FAR&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">ppvObject&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">E_NOTIMPL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">HRESULT&lt;/span> &lt;span style="color:#58a1dd">DownloadStatus&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">OnProgress&lt;/span>(&lt;span style="color:#58a1dd">ULONG&lt;/span> &lt;span style="color:#58a1dd">ulProgress&lt;/span>, &lt;span style="color:#58a1dd">ULONG&lt;/span> &lt;span style="color:#58a1dd">ulProgressMax&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ULONG&lt;/span> &lt;span style="color:#58a1dd">ulStatusCode&lt;/span>, &lt;span style="color:#58a1dd">LPCWSTR&lt;/span> &lt;span style="color:#58a1dd">wszStatusText&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">float&lt;/span> &lt;span style="color:#58a1dd">ps&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">ulProgressMax&lt;/span> &lt;span style="color:#ff636f">!=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ps&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> (&lt;span style="color:#ff636f">float&lt;/span>)&lt;span style="color:#58a1dd">ulProgress&lt;/span> &lt;span style="color:#ff636f">*&lt;/span> &lt;span style="color:#a6be9d">100&lt;/span> &lt;span style="color:#ff636f">/&lt;/span> &lt;span style="color:#58a1dd">ulProgressMax&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">fprintf&lt;/span>(&lt;span style="color:#58a1dd">stderr&lt;/span>, &lt;span style="color:#a6be9d">&amp;#34;&lt;/span>&lt;span style="color:#a6be9d">\r&lt;/span>&lt;span style="color:#a6be9d">Download %2.2f%%&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">ps&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">S_OK&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">DownloadFileWarp&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">remoteFile&lt;/span>, &lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">localFile&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DownloadStatus&lt;/span> &lt;span style="color:#58a1dd">ds&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">URLDownloadToFileW&lt;/span>(&lt;span style="color:#ff636f">nullptr&lt;/span>, &lt;span style="color:#58a1dd">remoteFile&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>(), &lt;span style="color:#58a1dd">localFile&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>(), &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">ds&lt;/span>) &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#58a1dd">S_OK&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在 ReactOS 中，URLDownloadToFile 是使用 WinINet 实现&lt;/p>
&lt;h2 id="httpclient">HttpClient&lt;/h2>
&lt;p>自 Windows 8 开始，微软推出了 Windows Runtime,Windows Runtime 基于 COM 实现，可以使用 C++/CX,C#,VB.Net,JavaScript 等，
拥有存储，网络，设备，UI，媒体等等。但是如果要使用现代的标准 C++，还是有一些麻烦。&lt;/p>
&lt;p>著名 MSDN 专栏作家，Microsoft MVP，Kenny Kerr 近一两年致力于 WinRT 对现代 C++ 的支持,先推出了
&lt;a href="https://github.com/kennykerr/modern">Modern C++ for the Windows Runtime&lt;/a>,最近又以微软官方的名义推出了
&lt;a href="https://github.com/microsoft/cppwinrt">cppwinrt&lt;/a>. 这些项目都是致力于现代 C++ 使用 Windows Runtime API。&lt;/p>
&lt;p>在下载文件的时候，我们可以使用 HttpClient 下载文件，下面是一个简单的实例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;#34;stdafx.h&amp;#34;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;Shlwapi.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;winrt/base.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;winrt/Windows.Web.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;winrt/Windows.Web.Http.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;winrt/Windows.Web.Http.Filters.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;winrt/Windows.Storage.Streams.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#pragma comment(lib, &amp;#34;windowsapp&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#pragma comment(lib,&amp;#34;Shlwapi&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#ff636f">namespace&lt;/span> &lt;span style="color:#58a1dd">winrt&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#ff636f">namespace&lt;/span> &lt;span style="color:#58a1dd">Windows&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">Foundation&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#ff636f">namespace&lt;/span> &lt;span style="color:#58a1dd">Windows&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">Web&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">Http&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#ff636f">namespace&lt;/span> &lt;span style="color:#58a1dd">Windows&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">Web&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">Http&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">Filters&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#ff636f">namespace&lt;/span> &lt;span style="color:#58a1dd">Windows&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">Storage&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#ff636f">namespace&lt;/span> &lt;span style="color:#58a1dd">Windows&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">Storage&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">Streams&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">//https://msdn.microsoft.com/en-us/library/windows/apps/xaml/windows.web.http.httpclient.aspx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">IAsyncAction&lt;/span> &lt;span style="color:#58a1dd">DownloadFileInternal&lt;/span>(&lt;span style="color:#58a1dd">hstring_ref&lt;/span> &lt;span style="color:#58a1dd">remoteFile&lt;/span>,&lt;span style="color:#58a1dd">hstring_ref&lt;/span> &lt;span style="color:#58a1dd">localFile&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Uri&lt;/span> &lt;span style="color:#58a1dd">uri&lt;/span>(&lt;span style="color:#58a1dd">remoteFile&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">HttpBaseProtocolFilter&lt;/span> &lt;span style="color:#58a1dd">baseFilter&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">baseFilter&lt;/span>.&lt;span style="color:#58a1dd">AllowAutoRedirect&lt;/span>(&lt;span style="color:#58a1dd">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">HttpClient&lt;/span> &lt;span style="color:#58a1dd">client&lt;/span>(&lt;span style="color:#58a1dd">baseFilter&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">StorageFolder&lt;/span> &lt;span style="color:#58a1dd">folder&lt;/span>&lt;span style="color:#ff636f">=&lt;/span>&lt;span style="color:#58a1dd">KnownFolders&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">DocumentsLibrary&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">file&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">co_await&lt;/span> &lt;span style="color:#58a1dd">folder&lt;/span>.&lt;span style="color:#58a1dd">CreateFileAsync&lt;/span>(&lt;span style="color:#58a1dd">localFile&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">stream&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">co_await&lt;/span> &lt;span style="color:#58a1dd">file&lt;/span>.&lt;span style="color:#58a1dd">OpenAsync&lt;/span>(&lt;span style="color:#58a1dd">FileAccessMode&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">ReadWrite&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">result&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">co_await&lt;/span> &lt;span style="color:#58a1dd">client&lt;/span>.&lt;span style="color:#58a1dd">GetAsync&lt;/span>(&lt;span style="color:#58a1dd">uri&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">content&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">co_await&lt;/span> &lt;span style="color:#58a1dd">result&lt;/span>.&lt;span style="color:#58a1dd">Content&lt;/span>().&lt;span style="color:#58a1dd">WriteToStreamAsync&lt;/span>(&lt;span style="color:#58a1dd">stream&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">class&lt;/span> &lt;span style="color:#58a1dd">RoInitializeWarp&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">public&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">RoInitializeWarp&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">initialize&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">~&lt;/span>&lt;span style="color:#58a1dd">RoInitializeWarp&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">uninitialize&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">WinRTDownloadFile&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">remoteFile&lt;/span>, &lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">localFile&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">initialize&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DownloadFileInternal&lt;/span>(&lt;span style="color:#58a1dd">remoteFile&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>(), &lt;span style="color:#58a1dd">localFile&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>()).&lt;span style="color:#58a1dd">get&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">catch&lt;/span> (&lt;span style="color:#58a1dd">hresult_error&lt;/span> &lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">printf&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;Error: %ls&lt;/span>&lt;span style="color:#a6be9d">\n&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">e&lt;/span>.&lt;span style="color:#58a1dd">message&lt;/span>().&lt;span style="color:#58a1dd">c_str&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">uninitialize&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">catch&lt;/span> (...) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">uninitialize&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>完全使用 cppwinrt 还是有一些问题，比如，StorageFolder 的目录权限问题，然后就是重定向，如果要解决重定向，
还要添加一些复杂的代码，比如 npm.taobao.org 使用 HTTPS 下载重定向 HTTP 就会触发异常，然后异常捕获还是有点麻烦。&lt;/p>
&lt;p>当然我是非常期待 cppwinrt 的进一步改进。&lt;/p>
&lt;p>Kenny Kerr 在 &lt;a href="https://msdn.microsoft.com/magazine/mt149362?author=Kenny%20Kerr">MSDN&lt;/a> 上发布了很多优秀的文章，
Windows 平台上原生程序开发人员可以去查看此链接。&lt;/p>
&lt;h2 id="background-intelligent-transfer-service">Background Intelligent Transfer Service&lt;/h2>
&lt;p>&lt;a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa362708(v=vs.85).aspx">BITS&lt;/a> - Background Intelligent Transfer Service
(后台智能传输服务) 是 Windows 的一个重要功能.&lt;/p>
&lt;p>笔者在开发 &lt;a href="https://github.com/fstudio/clangbuilder">Clangbuilder&lt;/a> 时,需要使用 PowerShell 下载软件使用的 cmdlet 是 Start-BitsTransfer,
Start-BitsTransfer 实际上使用的是 Windows 的 BITS 服务,而 Windows 更新功能也是使用的 BITS, Chrome 同步扩展也是使用的 BITS.&lt;/p>
&lt;p>IBackgroundCopyJob&lt;/p>
&lt;h2 id="winhttp">WinHTTP&lt;/h2>
&lt;p>WinHTTP 实现下载功能还算比较简单，通常就是发送 HTTP GET 请求，然后创建一个空文件，从 HTTP 响应中读取返回包体，
写入到文件中，直至读取完毕。如果要下载超过 4GB 的文件，那么在获取 HTTP 头部 Content-Length 时需要获取字符串，而不是整数。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;#34;stdafx.h&amp;#34;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;Shlwapi.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;windows.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;winhttp.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;string&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;algorithm&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;unordered_map&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;#34;console.h&amp;#34;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#pragma comment(lib,&amp;#34;WinHTTP&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#define MinWarp(a,b) ((b&amp;lt;a)?b:a)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">struct&lt;/span> &lt;span style="color:#58a1dd">RequestURL&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">nPort&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">nScheme&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#58a1dd">scheme&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#58a1dd">host&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#58a1dd">path&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#58a1dd">username&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#58a1dd">password&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#58a1dd">extrainfo&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">Parse&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">url&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">URL_COMPONENTS&lt;/span> &lt;span style="color:#58a1dd">urlComp&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">dwUrlLen&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ZeroMemory&lt;/span>(&lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">urlComp&lt;/span>, &lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#58a1dd">urlComp&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">dwStructSize&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#58a1dd">urlComp&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">dwSchemeLength&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> (&lt;span style="color:#58a1dd">DWORD&lt;/span>)&lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">dwHostNameLength&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> (&lt;span style="color:#58a1dd">DWORD&lt;/span>)&lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">dwUrlPathLength&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> (&lt;span style="color:#58a1dd">DWORD&lt;/span>)&lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">dwExtraInfoLength&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> (&lt;span style="color:#58a1dd">DWORD&lt;/span>)&lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">WinHttpCrackUrl&lt;/span>(&lt;span style="color:#58a1dd">url&lt;/span>.&lt;span style="color:#58a1dd">data&lt;/span>(), &lt;span style="color:#58a1dd">dwUrlLen&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">urlComp&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">scheme&lt;/span>.&lt;span style="color:#58a1dd">assign&lt;/span>(&lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">lpszScheme&lt;/span>, &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">dwSchemeLength&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">host&lt;/span>.&lt;span style="color:#58a1dd">assign&lt;/span>(&lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">lpszHostName&lt;/span>, &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">dwHostNameLength&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">path&lt;/span>.&lt;span style="color:#58a1dd">assign&lt;/span>(&lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">lpszUrlPath&lt;/span>, &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">dwUrlPathLength&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">nPort&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">nPort&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">nScheme&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">nScheme&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">lpszUserName&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">username&lt;/span>.&lt;span style="color:#58a1dd">assign&lt;/span>(&lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">lpszUserName&lt;/span>, &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">dwUserNameLength&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">lpszPassword&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">password&lt;/span>.&lt;span style="color:#58a1dd">assign&lt;/span>(&lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">lpszPassword&lt;/span>, &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">dwPasswordLength&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">lpszExtraInfo&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">extrainfo&lt;/span>.&lt;span style="color:#58a1dd">assign&lt;/span>(&lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">lpszExtraInfo&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">dwExtraInfoLength&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#define DEFAULT_USERAGENT L&amp;#34;WindowsGet/1.0&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">class&lt;/span> &lt;span style="color:#58a1dd">InternetObject&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">public&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">InternetObject&lt;/span>(&lt;span style="color:#58a1dd">HINTERNET&lt;/span> &lt;span style="color:#58a1dd">hInternet&lt;/span>)&lt;span style="color:#ff636f">:&lt;/span>&lt;span style="color:#58a1dd">hInternet_&lt;/span>(&lt;span style="color:#58a1dd">hInternet&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">operator&lt;/span> &lt;span style="color:#58a1dd">HINTERNET&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">hInternet_&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">operator&lt;/span> &lt;span style="color:#58a1dd">bool&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">hInternet_&lt;/span> &lt;span style="color:#ff636f">!=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">InternetObject&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">hInternet_&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WinHttpCloseHandle&lt;/span>(&lt;span style="color:#58a1dd">hInternet_&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">private&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">HINTERNET&lt;/span> &lt;span style="color:#58a1dd">hInternet_&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">DownloadFileUseWinHTTP&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">url&lt;/span>, &lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">localFile&lt;/span>,&lt;span style="color:#58a1dd">ProgressCallback&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">callback&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">RequestURL&lt;/span> &lt;span style="color:#58a1dd">zurl&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">zurl&lt;/span>.&lt;span style="color:#58a1dd">Parse&lt;/span>(&lt;span style="color:#58a1dd">url&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BaseErrorMessagePrint&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;Wrong URL: %s&lt;/span>&lt;span style="color:#a6be9d">\n&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>,&lt;span style="color:#58a1dd">url&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">InternetObject&lt;/span> &lt;span style="color:#58a1dd">hInternet&lt;/span> &lt;span style="color:#ff636f">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WinHttpOpen&lt;/span>(&lt;span style="color:#58a1dd">DEFAULT_USERAGENT&lt;/span>, &lt;span style="color:#58a1dd">WINHTTP_ACCESS_TYPE_DEFAULT_PROXY&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WINHTTP_NO_PROXY_NAME&lt;/span>, &lt;span style="color:#58a1dd">WINHTTP_NO_PROXY_BYPASS&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">hInternet&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ErrorMessage&lt;/span> &lt;span style="color:#58a1dd">err&lt;/span>(&lt;span style="color:#58a1dd">GetLastError&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BaseErrorMessagePrint&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;WinHttpOpen(): %s&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">err&lt;/span>.&lt;span style="color:#58a1dd">message&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// WinHttpSetOption(hInternet, WINHTTP_OPTION_REDIRECT_POLICY, &amp;amp;dwOption,sizeof(DWORD));
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#828b96;font-style:italic">/// https://msdn.microsoft.com/en-us/library/windows/desktop/aa384066(v=vs.85).aspx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#828b96;font-style:italic">/// WINHTTP_PROTOCOL_FLAG_HTTP2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">dwOption&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">WINHTTP_OPTION_REDIRECT_POLICY_ALWAYS&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">WinHttpSetOption&lt;/span>(&lt;span style="color:#58a1dd">hInternet&lt;/span>, &lt;span style="color:#58a1dd">WINHTTP_OPTION_REDIRECT_POLICY&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">dwOption&lt;/span>, &lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#58a1dd">DWORD&lt;/span>))) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ErrorMessage&lt;/span> &lt;span style="color:#58a1dd">err&lt;/span>(&lt;span style="color:#58a1dd">GetLastError&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BaseErrorMessagePrint&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;WINHTTP_OPTION_REDIRECT_POLICY: %s&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">err&lt;/span>.&lt;span style="color:#58a1dd">message&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">dwOption&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">WINHTTP_PROTOCOL_FLAG_HTTP2&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">WinHttpSetOption&lt;/span>(&lt;span style="color:#58a1dd">hInternet&lt;/span>, &lt;span style="color:#58a1dd">WINHTTP_OPTION_ENABLE_HTTP_PROTOCOL&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">dwOption&lt;/span>, &lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#58a1dd">dwOption&lt;/span>))) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ErrorMessage&lt;/span> &lt;span style="color:#58a1dd">err&lt;/span>(&lt;span style="color:#58a1dd">GetLastError&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BaseErrorMessagePrint&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;WINHTTP_OPTION_ENABLE_HTTP_PROTOCOL: %s&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">err&lt;/span>.&lt;span style="color:#58a1dd">message&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">InternetObject&lt;/span> &lt;span style="color:#58a1dd">hConnect&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">WinHttpConnect&lt;/span>(&lt;span style="color:#58a1dd">hInternet&lt;/span>, &lt;span style="color:#58a1dd">zurl&lt;/span>.&lt;span style="color:#58a1dd">host&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>(),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#58a1dd">INTERNET_PORT&lt;/span>)&lt;span style="color:#58a1dd">zurl&lt;/span>.&lt;span style="color:#58a1dd">nPort&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">hConnect&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BaseErrorMessagePrint&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;Server unable to connect: %s&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">zurl&lt;/span>.&lt;span style="color:#58a1dd">host&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">dwOpenRequestFlag&lt;/span> &lt;span style="color:#ff636f">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#58a1dd">zurl&lt;/span>.&lt;span style="color:#58a1dd">nScheme&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#58a1dd">INTERNET_SCHEME_HTTPS&lt;/span>) &lt;span style="color:#ff636f">?&lt;/span> &lt;span style="color:#58a1dd">WINHTTP_FLAG_SECURE&lt;/span> : &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">InternetObject&lt;/span> &lt;span style="color:#58a1dd">hRequest&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">WinHttpOpenRequest&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">hConnect&lt;/span>, &lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;GET&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">zurl&lt;/span>.&lt;span style="color:#58a1dd">path&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>(), &lt;span style="color:#ff636f">nullptr&lt;/span>, &lt;span style="color:#58a1dd">WINHTTP_NO_REFERER&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WINHTTP_DEFAULT_ACCEPT_TYPES&lt;/span>, &lt;span style="color:#58a1dd">dwOpenRequestFlag&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">hRequest&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ErrorMessage&lt;/span> &lt;span style="color:#58a1dd">err&lt;/span>(&lt;span style="color:#58a1dd">GetLastError&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BaseErrorMessagePrint&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;Open Request failed: %s&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">err&lt;/span>.&lt;span style="color:#58a1dd">message&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">WinHttpSendRequest&lt;/span>(&lt;span style="color:#58a1dd">hRequest&lt;/span>, &lt;span style="color:#58a1dd">WINHTTP_NO_ADDITIONAL_HEADERS&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WINHTTP_NO_REQUEST_DATA&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>) &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#58a1dd">FALSE&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ErrorMessage&lt;/span> &lt;span style="color:#58a1dd">err&lt;/span>(&lt;span style="color:#58a1dd">GetLastError&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BaseErrorMessagePrint&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;Send Request failed: %s&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">err&lt;/span>.&lt;span style="color:#58a1dd">message&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">WinHttpReceiveResponse&lt;/span>(&lt;span style="color:#58a1dd">hRequest&lt;/span>, &lt;span style="color:#58a1dd">NULL&lt;/span>) &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#58a1dd">FALSE&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ErrorMessage&lt;/span> &lt;span style="color:#58a1dd">err&lt;/span>(&lt;span style="color:#58a1dd">GetLastError&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BaseErrorMessagePrint&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;Receive Response failed: %s&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">err&lt;/span>.&lt;span style="color:#58a1dd">message&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">dwStatusCode&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">dwXsize&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#58a1dd">dwStatusCode&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">WinHttpQueryHeaders&lt;/span>(&lt;span style="color:#58a1dd">hRequest&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WINHTTP_QUERY_STATUS_CODE&lt;/span> &lt;span style="color:#ff636f">|&lt;/span> &lt;span style="color:#58a1dd">WINHTTP_QUERY_FLAG_NUMBER&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WINHTTP_HEADER_NAME_BY_INDEX&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">dwStatusCode&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">dwXsize&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WINHTTP_NO_HEADER_INDEX&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ErrorMessage&lt;/span> &lt;span style="color:#58a1dd">err&lt;/span>(&lt;span style="color:#58a1dd">GetLastError&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BaseErrorMessagePrint&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;WinHttpQueryHeaders failed: %s&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">err&lt;/span>.&lt;span style="color:#58a1dd">message&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">dwStatusCode&lt;/span> &lt;span style="color:#ff636f">!=&lt;/span> &lt;span style="color:#a6be9d">200&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#58a1dd">dwStatusCode&lt;/span> &lt;span style="color:#ff636f">!=&lt;/span> &lt;span style="color:#a6be9d">201&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BaseErrorMessagePrint&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;Reponse status code: %d&lt;/span>&lt;span style="color:#a6be9d">\n&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>,&lt;span style="color:#58a1dd">dwStatusCode&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">uint64_t&lt;/span> &lt;span style="color:#58a1dd">dwContentLength&lt;/span>&lt;span style="color:#ff636f">=&lt;/span>&lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">wchar_t&lt;/span> &lt;span style="color:#58a1dd">conlen&lt;/span>[&lt;span style="color:#a6be9d">36&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">dwXsize&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#58a1dd">conlen&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">WinHttpQueryHeaders&lt;/span>(&lt;span style="color:#58a1dd">hRequest&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WINHTTP_QUERY_CONTENT_LENGTH&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WINHTTP_HEADER_NAME_BY_INDEX&lt;/span>,&lt;span style="color:#58a1dd">conlen&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">dwXsize&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WINHTTP_NO_HEADER_INDEX&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">wchar_t&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">cx&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">dwContentLength&lt;/span>&lt;span style="color:#ff636f">=&lt;/span>&lt;span style="color:#58a1dd">wcstoull&lt;/span>(&lt;span style="color:#58a1dd">conlen&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">cx&lt;/span>, &lt;span style="color:#a6be9d">10&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">wprintf&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;File size: %lld&lt;/span>&lt;span style="color:#a6be9d">\n&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">dwContentLength&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#58a1dd">tmp&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">localFile&lt;/span> &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;.part&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">HANDLE&lt;/span> &lt;span style="color:#58a1dd">hFile&lt;/span> &lt;span style="color:#ff636f">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">CreateFileW&lt;/span>(&lt;span style="color:#58a1dd">tmp&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>(), &lt;span style="color:#58a1dd">GENERIC_READ&lt;/span> &lt;span style="color:#ff636f">|&lt;/span> &lt;span style="color:#58a1dd">GENERIC_WRITE&lt;/span>, &lt;span style="color:#58a1dd">FILE_SHARE_READ&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">NULL&lt;/span>, &lt;span style="color:#58a1dd">OPEN_ALWAYS&lt;/span>, &lt;span style="color:#58a1dd">FILE_ATTRIBUTE_NORMAL&lt;/span>, &lt;span style="color:#58a1dd">NULL&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">///
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">uint64_t&lt;/span> &lt;span style="color:#58a1dd">total&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">dwSize&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#58a1dd">fixedsizebuf&lt;/span>[&lt;span style="color:#a6be9d">16384&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">///
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">callback&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">callback&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">impl&lt;/span>(&lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#58a1dd">callback&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">userdata&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">do&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// Check for available data.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">WinHttpQueryDataAvailable&lt;/span>(&lt;span style="color:#58a1dd">hRequest&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">dwSize&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">total&lt;/span> &lt;span style="color:#ff636f">+=&lt;/span> &lt;span style="color:#58a1dd">dwSize&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">dwContentLength&lt;/span> &lt;span style="color:#ff636f">&amp;gt;&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">callback&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">callback&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">impl&lt;/span>(&lt;span style="color:#58a1dd">total&lt;/span> &lt;span style="color:#ff636f">*&lt;/span> &lt;span style="color:#a6be9d">100&lt;/span> &lt;span style="color:#ff636f">/&lt;/span> &lt;span style="color:#58a1dd">dwContentLength&lt;/span>, &lt;span style="color:#58a1dd">callback&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">userdata&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">dwSizeN&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">dwSize&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">while&lt;/span> (&lt;span style="color:#58a1dd">dwSizeN&lt;/span> &lt;span style="color:#ff636f">&amp;gt;&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">dwDownloaded&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">WinHttpReadData&lt;/span>(&lt;span style="color:#58a1dd">hRequest&lt;/span>, (&lt;span style="color:#58a1dd">LPVOID&lt;/span>)&lt;span style="color:#58a1dd">fixedsizebuf&lt;/span>, &lt;span style="color:#58a1dd">MinWarp&lt;/span>(&lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#58a1dd">fixedsizebuf&lt;/span>), &lt;span style="color:#58a1dd">dwSizeN&lt;/span>), &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">dwDownloaded&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">dwSizeN&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">dwSizeN&lt;/span> &lt;span style="color:#ff636f">-&lt;/span> &lt;span style="color:#58a1dd">dwDownloaded&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">wmWritten&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WriteFile&lt;/span>(&lt;span style="color:#58a1dd">hFile&lt;/span>, &lt;span style="color:#58a1dd">fixedsizebuf&lt;/span>, &lt;span style="color:#58a1dd">dwSize&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">wmWritten&lt;/span>, &lt;span style="color:#58a1dd">NULL&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#ff636f">while&lt;/span> (&lt;span style="color:#58a1dd">dwSize&lt;/span> &lt;span style="color:#ff636f">&amp;gt;&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">callback&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">callback&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">impl&lt;/span>(&lt;span style="color:#a6be9d">100&lt;/span>, &lt;span style="color:#58a1dd">callback&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">userdata&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#58a1dd">npath&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">localFile&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">i&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">while&lt;/span> (&lt;span style="color:#58a1dd">PathFileExistsW&lt;/span>(&lt;span style="color:#58a1dd">npath&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>())) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">n&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">localFile&lt;/span>.&lt;span style="color:#58a1dd">find_last_of&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;.&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">n&lt;/span> &lt;span style="color:#ff636f">!=&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">npos&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">npath&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">localFile&lt;/span>.&lt;span style="color:#58a1dd">substr&lt;/span>(&lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#58a1dd">n&lt;/span>) &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;(&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">npath&lt;/span> &lt;span style="color:#ff636f">+=&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">to_wstring&lt;/span>(&lt;span style="color:#58a1dd">i&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">npath&lt;/span> &lt;span style="color:#ff636f">+=&lt;/span> &lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;)&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">npath&lt;/span> &lt;span style="color:#ff636f">+=&lt;/span> &lt;span style="color:#58a1dd">localFile&lt;/span>.&lt;span style="color:#58a1dd">substr&lt;/span>(&lt;span style="color:#58a1dd">n&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">npath&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">localFile&lt;/span> &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;(&amp;#34;&lt;/span> &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">to_wstring&lt;/span>(&lt;span style="color:#58a1dd">i&lt;/span>) &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;)&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">i&lt;/span>&lt;span style="color:#ff636f">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">CloseHandle&lt;/span>(&lt;span style="color:#58a1dd">hFile&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">MoveFileExW&lt;/span>(&lt;span style="color:#58a1dd">tmp&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>(), &lt;span style="color:#58a1dd">npath&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>(), &lt;span style="color:#58a1dd">MOVEFILE_COPY_ALLOWED&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="http2-支持">HTTP2 支持&lt;/h3>
&lt;p>自 Windows 10 1607 起，WinHTTP 允许开发者通过 WinHttpSetOption 开启 HTTP2 支持。
上述源码中就有关于 HTTP2.0 的设置。&lt;/p>
&lt;h2 id="wininet">Wininet&lt;/h2>
&lt;p>Wininet 流程和 WinHTTP 类似，下面是实现代码：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;#34;stdafx.h&amp;#34;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;Windows.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;WinInet.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;Shlwapi.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;#34;console.h&amp;#34;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#pragma comment(lib, &amp;#34;WinInet.lib&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>&lt;span style="color:#828b96;font-style:italic">//https://msdn.microsoft.com/en-us/library/windows/desktop/aa385328(v=vs.85).aspx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">//INTERNET_OPTION_ENABLE_HTTP_PROTOCOL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">//HTTP_PROTOCOL_FLAG_HTTP2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>&lt;span style="color:#ff636f">struct&lt;/span> &lt;span style="color:#58a1dd">WinINetRequestURL&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">nPort&lt;/span>&lt;span style="color:#ff636f">=&lt;/span>&lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">nScheme&lt;/span>&lt;span style="color:#ff636f">=&lt;/span>&lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#58a1dd">scheme&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#58a1dd">host&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#58a1dd">path&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#58a1dd">username&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#58a1dd">password&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#58a1dd">extrainfo&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">Parse&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">url&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">URL_COMPONENTS&lt;/span> &lt;span style="color:#58a1dd">urlComp&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">dwUrlLen&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ZeroMemory&lt;/span>(&lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">urlComp&lt;/span>, &lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#58a1dd">urlComp&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">dwStructSize&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#58a1dd">urlComp&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">dwSchemeLength&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> (&lt;span style="color:#58a1dd">DWORD&lt;/span>)&lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">dwHostNameLength&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> (&lt;span style="color:#58a1dd">DWORD&lt;/span>)&lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">dwUrlPathLength&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> (&lt;span style="color:#58a1dd">DWORD&lt;/span>)&lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">dwExtraInfoLength&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> (&lt;span style="color:#58a1dd">DWORD&lt;/span>)&lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">InternetCrackUrlW&lt;/span>(&lt;span style="color:#58a1dd">url&lt;/span>.&lt;span style="color:#58a1dd">data&lt;/span>(), &lt;span style="color:#58a1dd">dwUrlLen&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">urlComp&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">scheme&lt;/span>.&lt;span style="color:#58a1dd">assign&lt;/span>(&lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">lpszScheme&lt;/span>, &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">dwSchemeLength&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">host&lt;/span>.&lt;span style="color:#58a1dd">assign&lt;/span>(&lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">lpszHostName&lt;/span>, &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">dwHostNameLength&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">path&lt;/span>.&lt;span style="color:#58a1dd">assign&lt;/span>(&lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">lpszUrlPath&lt;/span>, &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">dwUrlPathLength&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">nPort&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">nPort&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">nScheme&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">nScheme&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">lpszUserName&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">username&lt;/span>.&lt;span style="color:#58a1dd">assign&lt;/span>(&lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">lpszUserName&lt;/span>, &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">dwUserNameLength&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">lpszPassword&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">password&lt;/span>.&lt;span style="color:#58a1dd">assign&lt;/span>(&lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">lpszPassword&lt;/span>, &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">dwPasswordLength&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">lpszExtraInfo&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">extrainfo&lt;/span>.&lt;span style="color:#58a1dd">assign&lt;/span>(&lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">lpszExtraInfo&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">urlComp&lt;/span>.&lt;span style="color:#58a1dd">dwExtraInfoLength&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">class&lt;/span> &lt;span style="color:#58a1dd">WinINetObject&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">public&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WinINetObject&lt;/span>(&lt;span style="color:#58a1dd">HINTERNET&lt;/span> &lt;span style="color:#58a1dd">hInternet&lt;/span>) &lt;span style="color:#ff636f">:&lt;/span>&lt;span style="color:#58a1dd">hInternet_&lt;/span>(&lt;span style="color:#58a1dd">hInternet&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">operator&lt;/span> &lt;span style="color:#58a1dd">HINTERNET&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">hInternet_&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">operator&lt;/span> &lt;span style="color:#58a1dd">bool&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">hInternet_&lt;/span> &lt;span style="color:#ff636f">!=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WinINetObject&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">hInternet_&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">InternetCloseHandle&lt;/span>(&lt;span style="color:#58a1dd">hInternet_&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">private&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">HINTERNET&lt;/span> &lt;span style="color:#58a1dd">hInternet_&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">DownloadFileUseWininet&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">url&lt;/span>, &lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">localFile&lt;/span>, &lt;span style="color:#58a1dd">ProgressCallback&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">callback&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WinINetRequestURL&lt;/span> &lt;span style="color:#58a1dd">zurl&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">zurl&lt;/span>.&lt;span style="color:#58a1dd">Parse&lt;/span>(&lt;span style="color:#58a1dd">url&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BaseErrorMessagePrint&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;Wrong URL: %s&lt;/span>&lt;span style="color:#a6be9d">\n&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">url&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DeleteUrlCacheEntryW&lt;/span>(&lt;span style="color:#58a1dd">url&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WinINetObject&lt;/span> &lt;span style="color:#58a1dd">hInet&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">InternetOpenW&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;WindowsGet&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">INTERNET_OPEN_TYPE_PRECONFIG&lt;/span>, &lt;span style="color:#ff636f">nullptr&lt;/span>, &lt;span style="color:#ff636f">nullptr&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">hInet&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ErrorMessage&lt;/span> &lt;span style="color:#58a1dd">err&lt;/span>(&lt;span style="color:#58a1dd">GetLastError&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BaseErrorMessagePrint&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;InternetOpenW(): %s&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">err&lt;/span>.&lt;span style="color:#58a1dd">message&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">dwOption&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">HTTP_PROTOCOL_FLAG_HTTP2&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">InternetSetOptionW&lt;/span>(&lt;span style="color:#58a1dd">hInet&lt;/span>, &lt;span style="color:#58a1dd">INTERNET_OPTION_ENABLE_HTTP_PROTOCOL&lt;/span>,&lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">dwOption&lt;/span>,&lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#58a1dd">dwOption&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WinINetObject&lt;/span> &lt;span style="color:#58a1dd">hConnect&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">InternetConnectW&lt;/span>(&lt;span style="color:#58a1dd">hInet&lt;/span>, &lt;span style="color:#58a1dd">zurl&lt;/span>.&lt;span style="color:#58a1dd">host&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>(),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#58a1dd">INTERNET_PORT&lt;/span>)&lt;span style="color:#58a1dd">zurl&lt;/span>.&lt;span style="color:#58a1dd">nPort&lt;/span>, &lt;span style="color:#ff636f">nullptr&lt;/span>, &lt;span style="color:#ff636f">nullptr&lt;/span>, &lt;span style="color:#58a1dd">INTERNET_SERVICE_HTTP&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#58a1dd">NULL&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">hConnect&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ErrorMessage&lt;/span> &lt;span style="color:#58a1dd">err&lt;/span>(&lt;span style="color:#58a1dd">GetLastError&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BaseErrorMessagePrint&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;InternetConnectW(): %s&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">err&lt;/span>.&lt;span style="color:#58a1dd">message&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">dwOpenRequestFlags&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">INTERNET_FLAG_IGNORE_REDIRECT_TO_HTTP&lt;/span> &lt;span style="color:#ff636f">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">INTERNET_FLAG_KEEP_CONNECTION&lt;/span> &lt;span style="color:#ff636f">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">INTERNET_FLAG_NO_AUTH&lt;/span> &lt;span style="color:#ff636f">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">INTERNET_FLAG_NO_COOKIES&lt;/span> &lt;span style="color:#ff636f">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">INTERNET_FLAG_NO_UI&lt;/span> &lt;span style="color:#ff636f">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">INTERNET_FLAG_SECURE&lt;/span> &lt;span style="color:#ff636f">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">INTERNET_FLAG_IGNORE_CERT_CN_INVALID&lt;/span> &lt;span style="color:#ff636f">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">INTERNET_FLAG_RELOAD&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DWORD64&lt;/span> &lt;span style="color:#58a1dd">dwContentLength&lt;/span>&lt;span style="color:#ff636f">=&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WinINetObject&lt;/span> &lt;span style="color:#58a1dd">hRequest&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">InternetOpenUrlW&lt;/span>(&lt;span style="color:#58a1dd">hInet&lt;/span>, &lt;span style="color:#58a1dd">url&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>(), &lt;span style="color:#ff636f">nullptr&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">dwOpenRequestFlags&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">zurl&lt;/span>.&lt;span style="color:#58a1dd">nScheme&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#58a1dd">INTERNET_SCHEME_HTTP&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">||&lt;/span> &lt;span style="color:#58a1dd">zurl&lt;/span>.&lt;span style="color:#58a1dd">nScheme&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#58a1dd">INTERNET_SCHEME_HTTPS&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">dwStatusCode&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">dwSizeLength&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#58a1dd">dwStatusCode&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">HttpQueryInfoW&lt;/span>(&lt;span style="color:#58a1dd">hRequest&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">HTTP_QUERY_FLAG_NUMBER&lt;/span> &lt;span style="color:#ff636f">|&lt;/span> &lt;span style="color:#58a1dd">HTTP_QUERY_STATUS_CODE&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">dwStatusCode&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">dwSizeLength&lt;/span>, &lt;span style="color:#ff636f">nullptr&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">wchar_t&lt;/span> &lt;span style="color:#58a1dd">szbuf&lt;/span>[&lt;span style="color:#a6be9d">20&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">dwSizeLength&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#58a1dd">szbuf&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">HttpQueryInfoW&lt;/span>(&lt;span style="color:#58a1dd">hRequest&lt;/span>,&lt;span style="color:#58a1dd">HTTP_QUERY_CONTENT_LENGTH&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">szbuf&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">dwSizeLength&lt;/span>, &lt;span style="color:#ff636f">nullptr&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">wchar_t&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">cx&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">dwContentLength&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">wcstoull&lt;/span>(&lt;span style="color:#58a1dd">szbuf&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">cx&lt;/span>, &lt;span style="color:#a6be9d">10&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">fprintf&lt;/span>(&lt;span style="color:#58a1dd">stderr&lt;/span>, &lt;span style="color:#a6be9d">&amp;#34;Content-Length: %llu&lt;/span>&lt;span style="color:#a6be9d">\n&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">dwContentLength&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">else&lt;/span> &lt;span style="color:#ff636f">if&lt;/span>(&lt;span style="color:#58a1dd">zurl&lt;/span>.&lt;span style="color:#58a1dd">nScheme&lt;/span>&lt;span style="color:#ff636f">==&lt;/span>&lt;span style="color:#58a1dd">URL_SCHEME_FTP&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">highSize&lt;/span>&lt;span style="color:#ff636f">=&lt;/span>&lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">loSize&lt;/span>&lt;span style="color:#ff636f">=&lt;/span>&lt;span style="color:#58a1dd">FtpGetFileSize&lt;/span>(&lt;span style="color:#58a1dd">hRequest&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">highSize&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">dwContentLength&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> ((&lt;span style="color:#58a1dd">DWORD64&lt;/span>)&lt;span style="color:#58a1dd">highSize&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#a6be9d">32&lt;/span>)&lt;span style="color:#ff636f">+&lt;/span>&lt;span style="color:#58a1dd">loSize&lt;/span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">//InternetQueryDataAvailable
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">hRequest&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ErrorMessage&lt;/span> &lt;span style="color:#58a1dd">err&lt;/span>(&lt;span style="color:#58a1dd">GetLastError&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BaseErrorMessagePrint&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;InternetOpenUrlW(): %s&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">err&lt;/span>.&lt;span style="color:#58a1dd">message&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// lpszVersion -&amp;gt;nullptr ,use config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#58a1dd">tmp&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">localFile&lt;/span> &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;.part&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">HANDLE&lt;/span> &lt;span style="color:#58a1dd">hFile&lt;/span> &lt;span style="color:#ff636f">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">CreateFileW&lt;/span>(&lt;span style="color:#58a1dd">tmp&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>(), &lt;span style="color:#58a1dd">GENERIC_READ&lt;/span> &lt;span style="color:#ff636f">|&lt;/span> &lt;span style="color:#58a1dd">GENERIC_WRITE&lt;/span>, &lt;span style="color:#58a1dd">FILE_SHARE_READ&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">NULL&lt;/span>, &lt;span style="color:#58a1dd">OPEN_ALWAYS&lt;/span>, &lt;span style="color:#58a1dd">FILE_ATTRIBUTE_NORMAL&lt;/span>, &lt;span style="color:#58a1dd">NULL&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">///
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">BYTE&lt;/span> &lt;span style="color:#58a1dd">fixedsizebuf&lt;/span>[&lt;span style="color:#a6be9d">16384&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">//DWORD64 rdsize = 0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">dwReadSize&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">dwWriteSize&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">uint64_t&lt;/span> &lt;span style="color:#58a1dd">rdsize&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">callback&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">callback&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">impl&lt;/span>(&lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#58a1dd">callback&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">userdata&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BOOL&lt;/span> &lt;span style="color:#58a1dd">result&lt;/span>&lt;span style="color:#ff636f">=&lt;/span>&lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">do&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">result&lt;/span>&lt;span style="color:#ff636f">=&lt;/span>&lt;span style="color:#58a1dd">InternetReadFile&lt;/span>(&lt;span style="color:#58a1dd">hRequest&lt;/span>, &lt;span style="color:#58a1dd">fixedsizebuf&lt;/span>, &lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#58a1dd">fixedsizebuf&lt;/span>), &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">dwReadSize&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">result&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ErrorMessage&lt;/span> &lt;span style="color:#58a1dd">err&lt;/span>(&lt;span style="color:#58a1dd">GetLastError&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BaseErrorMessagePrint&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;HttpOpenRequestW(): %s&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">err&lt;/span>.&lt;span style="color:#58a1dd">message&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WriteFile&lt;/span>(&lt;span style="color:#58a1dd">hFile&lt;/span>, &lt;span style="color:#58a1dd">fixedsizebuf&lt;/span>, &lt;span style="color:#58a1dd">dwReadSize&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">dwWriteSize&lt;/span>, &lt;span style="color:#ff636f">nullptr&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">rdsize&lt;/span> &lt;span style="color:#ff636f">+=&lt;/span> &lt;span style="color:#58a1dd">dwReadSize&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">callback&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">callback&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">impl&lt;/span>(&lt;span style="color:#58a1dd">rdsize&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#a6be9d">100&lt;/span>&lt;span style="color:#ff636f">/&lt;/span> &lt;span style="color:#58a1dd">dwContentLength&lt;/span>, &lt;span style="color:#58a1dd">callback&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">userdata&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#ff636f">while&lt;/span> (&lt;span style="color:#58a1dd">result&lt;/span>&lt;span style="color:#ff636f">&amp;amp;&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">dwReadSize&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">callback&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">callback&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">impl&lt;/span>(&lt;span style="color:#a6be9d">100&lt;/span>, &lt;span style="color:#58a1dd">callback&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">userdata&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#58a1dd">npath&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">localFile&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">i&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">while&lt;/span> (&lt;span style="color:#58a1dd">PathFileExistsW&lt;/span>(&lt;span style="color:#58a1dd">npath&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>())) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">n&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">localFile&lt;/span>.&lt;span style="color:#58a1dd">find_last_of&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;.&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">n&lt;/span> &lt;span style="color:#ff636f">!=&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">npos&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">npath&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">localFile&lt;/span>.&lt;span style="color:#58a1dd">substr&lt;/span>(&lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#58a1dd">n&lt;/span>) &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;(&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">npath&lt;/span> &lt;span style="color:#ff636f">+=&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">to_wstring&lt;/span>(&lt;span style="color:#58a1dd">i&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">npath&lt;/span> &lt;span style="color:#ff636f">+=&lt;/span> &lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;)&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">npath&lt;/span> &lt;span style="color:#ff636f">+=&lt;/span> &lt;span style="color:#58a1dd">localFile&lt;/span>.&lt;span style="color:#58a1dd">substr&lt;/span>(&lt;span style="color:#58a1dd">n&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">npath&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">localFile&lt;/span> &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;(&amp;#34;&lt;/span> &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">to_wstring&lt;/span>(&lt;span style="color:#58a1dd">i&lt;/span>) &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;)&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">i&lt;/span>&lt;span style="color:#ff636f">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">CloseHandle&lt;/span>(&lt;span style="color:#58a1dd">hFile&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">MoveFileExW&lt;/span>(&lt;span style="color:#58a1dd">tmp&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>(), &lt;span style="color:#58a1dd">npath&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>(), &lt;span style="color:#58a1dd">MOVEFILE_COPY_ALLOWED&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="http2-支持-1">HTTP2 支持&lt;/h3>
&lt;p>自 Windows 10 1507 起， Wininet 便允许开发者通过设置参数开启 HTTP2 支持&lt;/p>
&lt;h1 id="如何选择">如何选择&lt;/h1>
&lt;p>除了以上的解决方案外，在 Windows 系统中实现下载功能还有很多其他的选择，比如试用 libcurl，Poco Net，cpp-netlib，
cpprestsdk，QNetworkRequest 等等。就 HTTP URL 的下载来说，如果不想使用现成的 HTTP 库实现下载，还可以自己实现
HTTP 库，可以使用原生的 socket，也可以使用 Boost.Asio，libuv，libev，ACE 来实现 HTTP 客户端。&lt;/p>
- https://forcemz.net/posts/2016/2016-11-03-win32-download-feature/ - Copyright (c) 2009-2024 J23</description></item><item><title>Git Analyze 工具实现与原理</title><link>https://forcemz.net/posts/2016/2016-08-12-git-analyze/</link><pubDate>Thu, 11 Aug 2016 20:00:00 +0800</pubDate><guid>https://forcemz.net/posts/2016/2016-08-12-git-analyze/</guid><description>Charlie's Rethinking https://forcemz.net/posts/2016/2016-08-12-git-analyze/ -&lt;h1 id="前言">前言&lt;/h1>
&lt;p>作为一个提供免费私有仓库的代码托管平台，码云要考虑利用现有的硬件资源支持更多的用户，一些用户占用较多的硬件资源实际上是对其他用户用户体验的一种损害，因此码云对用户的存储库大小有一定的限制。&lt;/p>
&lt;p>码云对 git 仓库的大小限制为 1GB，用户在本地可以使用如下命令查看存储库的大小。&lt;/p>
&lt;blockquote>
&lt;p>du -sh .git/objects&lt;/p>
&lt;/blockquote>
&lt;p>这个命令在 Git for Windows 中可以找到，也可以使用 &lt;a href="https://www.sysinternals.com">www.sysinternals.com&lt;/a> 提供的 du （Directory disk usage reporter）工具。&lt;/p>
&lt;p>码云上单文件大小的限制为 100 MB，一旦超过 50 MB 会发出警告。&lt;/p>
&lt;p>一部分用户可能没有注意到将生成的二进制文件添加到版本控制之中，一旦将存储库推送到码云上时就被拒绝推送了。对于这些用户而言，如何去发现是从什么时候将大文件添加到存储库中的，这是一件比较困难的事情。笔者开发 git-analyze 的目的也就是为了解决这些用户的烦恼。&lt;/p>
&lt;h2 id="analyze">Analyze&lt;/h2>
&lt;p>git-analyze 此工具的设计上是根据用户的输入，扫描存储库特定分支从哪次提交引入了体积超出限制的文件。&lt;/p>
&lt;p>git 有多种实现，比如 Linus 的 git（官方 git），libgit2，jgit 等等，官方 git 是一个由多个子命令组成的程序集合。
但是，如果要新增一个工具到 git 官方还是比较麻烦，定制的 git 也容易带来兼容性问题，不利于用户体验。
JGIT 是 Java 实现的 git 类库，如果要实现这些工具，还要用户安装 JRE 或者携带 JRE，并且 Java 也不擅长做跨平台命令。
libgit2 是 C 实现的一个跨平台 git 协议实现库，并且提供多种语言的 banding，所以用 libgit2 再合适不过。&lt;/p>
&lt;p>git-analyze 支持参数：&lt;/p>
&lt;ul>
&lt;li>&amp;ndash;limitsize 设置超限大小，可选，单位 MB,默认为 100，例如 &amp;ndash;limitsize=72 或者 &amp;ndash;limitsize 72。&lt;/li>
&lt;li>&amp;ndash;warnsize 设置警告大小，可选，单位 MB,默认为 50。&lt;/li>
&lt;li>&amp;ndash;timeout 设置超时大小，可选，默认未开启。&lt;/li>
&lt;li>&amp;ndash;all 检查所有分支&lt;/li>
&lt;li>&amp;ndash;who 显示超限文件提交信息和提交者&lt;/li>
&lt;/ul>
&lt;p>git-analyze 仓库参数为:&lt;/p>
&lt;blockquote>
&lt;p>git-analyze /path/to/repo master # 也可以是 引用全名，二者的相对顺序必须是先路径后引用，标签参数不做要求。&lt;/p>
&lt;/blockquote>
&lt;p>git-analyze 在用户输入参数后，使用 libgit2 打开存储库。目前只支持工作目录的根目录和 .git 目录。&lt;/p>
&lt;p>git 的每一次提交都是文件快照，并不像 Subversion 一样每一个文件都有版本号。如果要知道是否有新的文件被添加或者是被修改，
则需要与上一个提交进行比较，通常就是当前的 commit 与 parent commit 比较，在 libgit2 中，并不能直接比较，
需要比较 commit 的根 tree。使用 git_commit_tree 得到 tree 对象，git_diff_tree_to_tree 比较 tree，git_diff_foreach
去遍历 diff 的内容，这里由于我们只需要查看文件修改，所以，git_diff_foreach binary_cb hunk_cb line_cb callback 设置 为空即可，
git_diff_foreach 的 API 在下面：&lt;/p>
&lt;p>&lt;a href="https://libgit2.github.com/libgit2/#HEAD/group/diff/git_diff_foreach">libgit2 API git_diff_foreach&lt;/a>&lt;/p>
&lt;p>我们在 回调函数中，只响应 diff 类型为新增和修改的文件类型。&lt;/p>
&lt;p>当出现合并时，我们的策略是，只比较第一个 parent commit，大文件引入行为归咎与合并者。&lt;/p>
&lt;p>当遍历到初始提交时，parent commit 也就不存在了，所以，我们要使用 treewalk 遍历所有的文件，检测引入的大文件。&lt;/p>
&lt;p>当使用 &amp;ndash;all 参数时，git-analyze 会忽略引用参数，直接遍历所有本地分支对应的引用，然后逐一检测。&lt;/p>
&lt;h3 id="cmake">CMake&lt;/h3>
&lt;p>libgit2 使用 CMake 作为构建文件，CMake 能够根据不同的平台生成不同类型的项目文件，如 Visual Studio 的 msbuild
项目文件，Makefile 文件 等，然后支持自动打包，例如下面的一些代码就可以支持生成 Windows 安装程序，Ubuntu DEB 包&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cmake" data-lang="cmake">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">set&lt;/span>(&lt;span style="color:#a6be9d">CMAKE_INSTALL_RPATH&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;${CMAKE_INSTALL_PREFIX}/lib&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">set&lt;/span>(&lt;span style="color:#a6be9d">CPACK_PACKAGE_NAME&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;git-analyze&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">set&lt;/span>(&lt;span style="color:#a6be9d">CPACK_PACKAGE_VENDOR&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;OSChina.NET&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">set&lt;/span>(&lt;span style="color:#a6be9d">CPACK_PACKAGE_DESCRIPTION&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;This is git analyze tools&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">set&lt;/span>(&lt;span style="color:#a6be9d">CPACK_PACKAGE_DESCRIPTION_SUMMARY&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;GIT Analyze&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">set&lt;/span>(&lt;span style="color:#a6be9d">CPACK_PACKAGE_INSTALL_DIRECTORY&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;git-analyze&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">set&lt;/span>(&lt;span style="color:#a6be9d">CPACK_PACKAGE_VERSION_MAJOR&lt;/span> &lt;span style="color:#ff636f">${&lt;/span>&lt;span style="color:#58a1dd">GITANALYZE_VERSION_MAJOR&lt;/span>&lt;span style="color:#ff636f">}&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">set&lt;/span>(&lt;span style="color:#a6be9d">CPACK_PACKAGE_VERSION_MINOR&lt;/span> &lt;span style="color:#ff636f">${&lt;/span>&lt;span style="color:#58a1dd">GITANALYZE_VERSION_MINOR&lt;/span>&lt;span style="color:#ff636f">}&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">set&lt;/span>(&lt;span style="color:#a6be9d">CPACK_PACKAGE_VERSION_PATCH&lt;/span> &lt;span style="color:#ff636f">${&lt;/span>&lt;span style="color:#58a1dd">GITANALYZE_VERSION_PATCH&lt;/span>&lt;span style="color:#ff636f">}&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">set&lt;/span>(&lt;span style="color:#a6be9d">CPACK_PACKAGE_VERSION&lt;/span> &lt;span style="color:#ff636f">${&lt;/span>&lt;span style="color:#58a1dd">PACKAGE_VERSION&lt;/span>&lt;span style="color:#ff636f">}&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">set&lt;/span>(&lt;span style="color:#a6be9d">CPACK_RESOURCE_FILE_LICENSE&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;${CMAKE_CURRENT_SOURCE_DIR}/LICENSE&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">set&lt;/span>(&lt;span style="color:#a6be9d">CPACK_PACKAGE_DESCRIPTION&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;Git Analyze&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">set&lt;/span>(&lt;span style="color:#a6be9d">CPACK_DEBIAN_PACKAGE_DEPENDS&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;libc6 (&amp;gt;= 2.3.1-6)&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">set&lt;/span>(&lt;span style="color:#a6be9d">CPACK_PACKAGE_CONTACT&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;admin@oschina.cn&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">set&lt;/span>(&lt;span style="color:#a6be9d">CPACK_DEBIAN_PACKAGE_SECTION&lt;/span> &lt;span style="color:#a6be9d">T&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">if&lt;/span>(&lt;span style="color:#a6be9d">WIN32&lt;/span> &lt;span style="color:#a6be9d">AND&lt;/span> &lt;span style="color:#a6be9d">NOT&lt;/span> &lt;span style="color:#a6be9d">UNIX&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">set&lt;/span>(&lt;span style="color:#a6be9d">CPACK_PACKAGE_INSTALL_REGISTRY_KEY&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;GitAnalyze&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">set&lt;/span>(&lt;span style="color:#a6be9d">CPACK_NSIS_MUI_ICON&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;${CMAKE_CURRENT_SOURCE_DIR}\\\\cmake\\\\git.ico&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">set&lt;/span>(&lt;span style="color:#a6be9d">CPACK_NSIS_MUI_UNIICON&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;${CMAKE_CURRENT_SOURCE_DIR}\\\\cmake\\\\git.ico&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">set&lt;/span>(&lt;span style="color:#a6be9d">CPACK_NSIS_MODIFY_PATH&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;ON&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">set&lt;/span>(&lt;span style="color:#a6be9d">CPACK_NSIS_ENABLE_UNINSTALL_BEFORE_INSTALL&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;ON&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">if&lt;/span>( &lt;span style="color:#a6be9d">CMAKE_CL_64&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">set&lt;/span>(&lt;span style="color:#a6be9d">CPACK_NSIS_INSTALL_ROOT&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;$PROGRAMFILES64&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">endif&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">endif&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">include&lt;/span>(&lt;span style="color:#a6be9d">CPack&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">if&lt;/span>(&lt;span style="color:#a6be9d">WIN32&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">include&lt;/span>(&lt;span style="color:#a6be9d">InstallRequiredSystemLibraries&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">endif&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">install&lt;/span>(&lt;span style="color:#a6be9d">TARGETS&lt;/span> &lt;span style="color:#a6be9d">git-analyze&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6be9d">DESTINATION&lt;/span> &lt;span style="color:#a6be9d">bin&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>CMake 也能自动识别程序资源源文件 (.rc 文件),程序清单 (.manifest) 。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cmake" data-lang="cmake">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#C++ Based hook command
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">if&lt;/span>(&lt;span style="color:#a6be9d">WIN32&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">add_executable&lt;/span>(&lt;span style="color:#a6be9d">git-analyze&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6be9d">driver.cc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6be9d">analyze.cc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6be9d">environment.cc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6be9d">git-analyze.rc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6be9d">git-analyze.manifest&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">else&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">add_executable&lt;/span>(&lt;span style="color:#a6be9d">git-analyze&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6be9d">driver.cc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6be9d">analyze.cc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6be9d">environment.cc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">endif&lt;/span>()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将 libgit2 作为一个依赖加入项目中，只需要在 CMakeLists.txt 中添加 &lt;strong>add_subdirectory(vendor/libgit2)&lt;/strong> 可。&lt;/p>
&lt;h3 id="timer">Timer&lt;/h3>
&lt;p>UNIX® 系统支持信号 SIGALRM ，注册信号后, 然后可以使用 alarm 激活定时器，git-analyze 在非 Windows 平台
是同 alarm 实现定时器，不过 alarm 精度不高，如果要使用更高精度的可以使用 ualarm 。&lt;/p>
&lt;p>WINDOW­S ® 系统的定时器有 CreateWaitableTimer timeSetEvent CreateTimerQueueTimer 等，分别应对不同的场景。
比如 timeSetEvent 实际上是使用 Windows Event 对象实现，内部还是开了线程，git-analyze 实现的 Timer 功能是启动一个新的线程，
然后 Sleep 后，运行 exit 退出进程，调用 exit 后会调用 ExitProcess 所以进程会退出，然后主进程结束时也会调用 ExitProcess 退出。&lt;/p>
&lt;h2 id="rollback">Rollback&lt;/h2>
&lt;p>在 Git 中， 有 revert 和 reset 命令，而 git-rollback 实现 git 特定分支的回滚， 只是一个直观简单的替代。
需要使用高级功能可以使用 git reset 或者 revert。&lt;/p>
&lt;p>支持参数：&lt;/p>
&lt;ul>
&lt;li>&amp;ndash;git-dir&lt;/li>
&lt;li>&amp;ndash;backid&lt;/li>
&lt;li>&amp;ndash;backrev&lt;/li>
&lt;li>&amp;ndash;refname&lt;/li>
&lt;li>&amp;ndash;force&lt;/li>
&lt;/ul>
&lt;p>使用 &amp;ndash;backid 参数时，git-rollback 先需要回溯检测 commit 是否在分支上，存在的时候会设置 refname (这个支持分支名和引用全名) 的
commit 为 &amp;ndash;backid 的值，然后运行 git gc ，当添加 &amp;ndash;force 时会清理掉那些悬空对象。&lt;/p>
&lt;p>使用 &amp;ndash;backrev 时， git-rollback 会回溯 commit，然后当回溯次数与 &amp;ndash;backrev 值一致时，将当前 commit 的 oid 设置到引用上，与
&amp;ndash;backid 的策略一致即可。&lt;/p>
&lt;p>由于 libgit2 暂时并未提供 GC 功能，我们调用的是原生命令，在 UNIX 类系统中，我们先获得环境变量 PATH,然后遍历这些目录是否存在 git ，
存在后，使用 fork-execvp-wait 一系列 API 运行 git GC。&lt;/p>
&lt;p>在 Windows 中，我们从 git-rollback 的当前目录，以及 git-rollback 进程所在目录，以及 PATH 中查找 git，如果没有找到，
则从注册表中查找 Git for Windows 的安装路径。部分的代码如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">class&lt;/span> &lt;span style="color:#58a1dd">WCharacters&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">private&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">wchar_t&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">wstr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">public&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WCharacters&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">str&lt;/span>) &lt;span style="color:#ff636f">:&lt;/span> &lt;span style="color:#58a1dd">wstr&lt;/span>(&lt;span style="color:#ff636f">nullptr&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">str&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">unicodeLen&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">MultiByteToWideChar&lt;/span>(&lt;span style="color:#58a1dd">CP_UTF8&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#58a1dd">str&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#58a1dd">NULL&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">unicodeLen&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">wstr&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">new&lt;/span> &lt;span style="color:#ff636f">wchar_t&lt;/span>[&lt;span style="color:#58a1dd">unicodeLen&lt;/span> &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#a6be9d">1&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">wstr&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">wstr&lt;/span>[&lt;span style="color:#58a1dd">unicodeLen&lt;/span>] &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">MultiByteToWideChar&lt;/span>(&lt;span style="color:#58a1dd">CP_UTF8&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#58a1dd">str&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, (&lt;span style="color:#58a1dd">LPWSTR&lt;/span>)&lt;span style="color:#58a1dd">wstr&lt;/span>, &lt;span style="color:#58a1dd">unicodeLen&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#ff636f">wchar_t&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">Get&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">wstr&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#ff636f">const_cast&lt;/span>&lt;span style="color:#ff636f">&amp;lt;&lt;/span>&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#ff636f">wchar_t&lt;/span> &lt;span style="color:#ff636f">*&amp;gt;&lt;/span>(&lt;span style="color:#58a1dd">wstr&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">~&lt;/span>&lt;span style="color:#58a1dd">WCharacters&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">wstr&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">delete&lt;/span>[] &lt;span style="color:#58a1dd">wstr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">inline&lt;/span> &lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">PathFileIsExistsU&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">path&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">i&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">GetFileAttributesW&lt;/span>(&lt;span style="color:#58a1dd">path&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">INVALID_FILE_ATTRIBUTES&lt;/span> &lt;span style="color:#ff636f">!=&lt;/span> &lt;span style="color:#58a1dd">i&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">inline&lt;/span> &lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">PathRemoveFileSpecU&lt;/span>(&lt;span style="color:#ff636f">wchar_t&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">begin&lt;/span>, &lt;span style="color:#ff636f">wchar_t&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">end&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">for&lt;/span> (; &lt;span style="color:#58a1dd">end&lt;/span> &lt;span style="color:#ff636f">&amp;gt;&lt;/span> &lt;span style="color:#58a1dd">begin&lt;/span>; &lt;span style="color:#58a1dd">end&lt;/span>&lt;span style="color:#ff636f">--&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">end&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#a6be9d">&amp;#39;/&amp;#39;&lt;/span> &lt;span style="color:#ff636f">||&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">end&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#a6be9d">&amp;#39;\\&amp;#39;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">end&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">typedef&lt;/span> &lt;span style="color:#58a1dd">BOOL&lt;/span>(&lt;span style="color:#58a1dd">WINAPI&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">LPFN_ISWOW64PROCESS&lt;/span>)(&lt;span style="color:#58a1dd">HANDLE&lt;/span>, &lt;span style="color:#58a1dd">PBOOL&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">BOOL&lt;/span> &lt;span style="color:#58a1dd">IsRunOnWin64&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BOOL&lt;/span> &lt;span style="color:#58a1dd">bIsWow64&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">FALSE&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">LPFN_ISWOW64PROCESS&lt;/span> &lt;span style="color:#58a1dd">fnIsWow64Process&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> (&lt;span style="color:#58a1dd">LPFN_ISWOW64PROCESS&lt;/span>)&lt;span style="color:#58a1dd">GetProcAddress&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">GetModuleHandleW&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;kernel32&amp;#34;&lt;/span>), &lt;span style="color:#a6be9d">&amp;#34;IsWow64Process&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">NULL&lt;/span> &lt;span style="color:#ff636f">!=&lt;/span> &lt;span style="color:#58a1dd">fnIsWow64Process&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">fnIsWow64Process&lt;/span>(&lt;span style="color:#58a1dd">GetCurrentProcess&lt;/span>(), &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">bIsWow64&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// handle error
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">bIsWow64&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">BOOL&lt;/span> &lt;span style="color:#58a1dd">WINAPI&lt;/span> &lt;span style="color:#58a1dd">FindGitInstallationLocation&lt;/span>(&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">location&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Git_is1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#828b96;font-style:italic">// InstallLocation
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">HKEY&lt;/span> &lt;span style="color:#58a1dd">hInst&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">LSTATUS&lt;/span> &lt;span style="color:#58a1dd">result&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">ERROR_SUCCESS&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#ff636f">wchar_t&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">git4win&lt;/span> &lt;span style="color:#ff636f">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">LR&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;(SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Git_is1)&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#ff636f">wchar_t&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">installKey&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;InstallLocation&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WCHAR&lt;/span> &lt;span style="color:#58a1dd">buffer&lt;/span>[&lt;span style="color:#a6be9d">4096&lt;/span>] &lt;span style="color:#ff636f">=&lt;/span> {&lt;span style="color:#a6be9d">0&lt;/span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#if defined(_M_X64)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">RegOpenKeyExW&lt;/span>(&lt;span style="color:#58a1dd">HKEY_LOCAL_MACHINE&lt;/span>, &lt;span style="color:#58a1dd">git4win&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#58a1dd">KEY_READ&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">hInst&lt;/span>) &lt;span style="color:#ff636f">!=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ERROR_SUCCESS&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">RegOpenKeyExW&lt;/span>(&lt;span style="color:#58a1dd">HKEY_LOCAL_MACHINE&lt;/span>, &lt;span style="color:#58a1dd">git4win&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">KEY_READ&lt;/span> &lt;span style="color:#ff636f">|&lt;/span> &lt;span style="color:#58a1dd">KEY_WOW64_32KEY&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">hInst&lt;/span>) &lt;span style="color:#ff636f">!=&lt;/span> &lt;span style="color:#58a1dd">ERROR_SUCCESS&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// Cannot found msysgit or Git for Windows install
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">FALSE&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#else
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">IsRunOnWin64&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">RegOpenKeyExW&lt;/span>(&lt;span style="color:#58a1dd">HKEY_LOCAL_MACHINE&lt;/span>, &lt;span style="color:#58a1dd">git4win&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">KEY_READ&lt;/span> &lt;span style="color:#ff636f">|&lt;/span> &lt;span style="color:#58a1dd">KEY_WOW64_64KEY&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">hInst&lt;/span>) &lt;span style="color:#ff636f">!=&lt;/span> &lt;span style="color:#58a1dd">ERROR_SUCCESS&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">RegOpenKeyExW&lt;/span>(&lt;span style="color:#58a1dd">HKEY_LOCAL_MACHINE&lt;/span>, &lt;span style="color:#58a1dd">git4win&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#58a1dd">KEY_READ&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">hInst&lt;/span>) &lt;span style="color:#ff636f">!=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ERROR_SUCCESS&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// Cannot found msysgit or Git for Windows install
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">FALSE&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#ff636f">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">RegOpenKeyExW&lt;/span>(&lt;span style="color:#58a1dd">HKEY_LOCAL_MACHINE&lt;/span>, &lt;span style="color:#58a1dd">git4win&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#58a1dd">KEY_READ&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">hInst&lt;/span>) &lt;span style="color:#ff636f">!=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ERROR_SUCCESS&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">FALSE&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">type&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">dwSize&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">4096&lt;/span> &lt;span style="color:#ff636f">*&lt;/span> &lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#ff636f">wchar_t&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">result&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">RegGetValueW&lt;/span>(&lt;span style="color:#58a1dd">hInst&lt;/span>, &lt;span style="color:#ff636f">nullptr&lt;/span>, &lt;span style="color:#58a1dd">installKey&lt;/span>, &lt;span style="color:#58a1dd">RRF_RT_REG_SZ&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">type&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">buffer&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">dwSize&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">result&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#58a1dd">ERROR_SUCCESS&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">location&lt;/span>.&lt;span style="color:#58a1dd">assign&lt;/span>(&lt;span style="color:#58a1dd">buffer&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">RegCloseKey&lt;/span>(&lt;span style="color:#58a1dd">hInst&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">result&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#58a1dd">ERROR_SUCCESS&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">////
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">// ////
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">// bool search_git_from_path(std::wstring &amp;amp;gitbin) {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">// ///
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">// WCHAR buffer[4096] = {0};
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">// DWORD dwLength = 0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">// ////
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">// if ((dwLength =
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">// SearchPathW(nullptr, L&amp;#34;git&amp;#34;, L&amp;#34;.exe&amp;#34;, 4096, buffer, nullptr)) &amp;gt; 0)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">// {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">// gitbin.assign(buffer, dwLength);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">// return true;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">// }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">// return false;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">// }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">SearchGitForWindowsInstall&lt;/span>(&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">gitbin&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">FindGitInstallationLocation&lt;/span>(&lt;span style="color:#58a1dd">gitbin&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">gitbin&lt;/span>.&lt;span style="color:#58a1dd">push_back&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#39;\\&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">gitbin&lt;/span>.&lt;span style="color:#58a1dd">append&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;git.exe&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">PathFileIsExistsU&lt;/span>(&lt;span style="color:#58a1dd">gitbin&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>&lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">GitExecutePathSearchAuto&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#ff636f">wchar_t&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">cmd&lt;/span>, &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">gitbin&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">//// Self , Path Env,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">PathFileIsExistsU&lt;/span>(&lt;span style="color:#58a1dd">cmd&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">gitbin&lt;/span>.&lt;span style="color:#58a1dd">assign&lt;/span>(&lt;span style="color:#58a1dd">cmd&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#58a1dd">Path&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Path&lt;/span>.&lt;span style="color:#58a1dd">reserve&lt;/span>(&lt;span style="color:#a6be9d">0x8000&lt;/span>); &lt;span style="color:#828b96;font-style:italic">/// 32767
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#828b96;font-style:italic">///
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">len&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">GetModuleFileNameW&lt;/span>(&lt;span style="color:#ff636f">nullptr&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">Path&lt;/span>[&lt;span style="color:#a6be9d">0&lt;/span>], &lt;span style="color:#a6be9d">32767&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">len&lt;/span> &lt;span style="color:#ff636f">&amp;gt;&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">end&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">Path&lt;/span>[&lt;span style="color:#a6be9d">0&lt;/span>] &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#58a1dd">len&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">PathRemoveFileSpecU&lt;/span>(&lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">Path&lt;/span>[&lt;span style="color:#a6be9d">0&lt;/span>], &lt;span style="color:#58a1dd">end&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">gitbin&lt;/span>.&lt;span style="color:#58a1dd">assign&lt;/span>(&lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">Path&lt;/span>[&lt;span style="color:#a6be9d">0&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">gitbin&lt;/span>.&lt;span style="color:#58a1dd">push_back&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#39;\\&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">gitbin&lt;/span>.&lt;span style="color:#58a1dd">append&lt;/span>(&lt;span style="color:#58a1dd">cmd&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">PathFileIsExistsU&lt;/span>(&lt;span style="color:#58a1dd">gitbin&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">gitbin&lt;/span>.&lt;span style="color:#58a1dd">clear&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">///
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">GetEnvironmentVariableW&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;PATH&amp;#34;&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">Path&lt;/span>[&lt;span style="color:#a6be9d">0&lt;/span>], &lt;span style="color:#a6be9d">32767&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">iter&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">Path&lt;/span>[&lt;span style="color:#a6be9d">0&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">for&lt;/span> (; &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">iter&lt;/span>; &lt;span style="color:#58a1dd">iter&lt;/span>&lt;span style="color:#ff636f">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">iter&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#a6be9d">&amp;#39;;&amp;#39;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">gitbin&lt;/span>.&lt;span style="color:#58a1dd">push_back&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#39;\\&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">gitbin&lt;/span>.&lt;span style="color:#58a1dd">append&lt;/span>(&lt;span style="color:#58a1dd">cmd&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">PathFileIsExistsU&lt;/span>(&lt;span style="color:#58a1dd">gitbin&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">gitbin&lt;/span>.&lt;span style="color:#58a1dd">clear&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#ff636f">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">gitbin&lt;/span>.&lt;span style="color:#58a1dd">push_back&lt;/span>(&lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">iter&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">/// First search git from path.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>&lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">GitGCInvoke&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">dir&lt;/span>, &lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">forced&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">///
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">WCharacters&lt;/span> &lt;span style="color:#58a1dd">wstr&lt;/span>(&lt;span style="color:#58a1dd">dir&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>()); &lt;span style="color:#828b96;font-style:italic">/// convert to UTF16
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#58a1dd">gitbin&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">GitExecutePathSearchAuto&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;git.exe&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">gitbin&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">SearchGitForWindowsInstall&lt;/span>(&lt;span style="color:#58a1dd">gitbin&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BaseErrorMessagePrint&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6be9d">&amp;#34;Not Found git in your PATH environemnt variable and Registry !&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/////////////////////////////////////////////////////////
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#58a1dd">cmdline&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">cmdline&lt;/span>.&lt;span style="color:#58a1dd">reserve&lt;/span>(&lt;span style="color:#a6be9d">0x8000&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">_snwprintf_s&lt;/span>(&lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">cmdline&lt;/span>[&lt;span style="color:#a6be9d">0&lt;/span>], &lt;span style="color:#a6be9d">32767&lt;/span>, &lt;span style="color:#a6be9d">32767&lt;/span>, &lt;span style="color:#58a1dd">LR&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;(&amp;#34;&lt;/span>&lt;span style="color:#ff636f">%&lt;/span>&lt;span style="color:#58a1dd">s&lt;/span>&lt;span style="color:#a6be9d">&amp;#34; gc )&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">gitbin&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">forced&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">wcscat_s&lt;/span>(&lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">cmdline&lt;/span>[&lt;span style="color:#a6be9d">0&lt;/span>], &lt;span style="color:#a6be9d">32767&lt;/span>, &lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;--prune=now --force&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">STARTUPINFOW&lt;/span> &lt;span style="color:#58a1dd">si&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">PROCESS_INFORMATION&lt;/span> &lt;span style="color:#58a1dd">pi&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ZeroMemory&lt;/span>(&lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">si&lt;/span>, &lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#58a1dd">si&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ZeroMemory&lt;/span>(&lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">pi&lt;/span>, &lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#58a1dd">pi&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">si&lt;/span>.&lt;span style="color:#58a1dd">cb&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#58a1dd">si&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">CreateProcessW&lt;/span>(&lt;span style="color:#ff636f">nullptr&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">cmdline&lt;/span>[&lt;span style="color:#a6be9d">0&lt;/span>], &lt;span style="color:#ff636f">nullptr&lt;/span>, &lt;span style="color:#ff636f">nullptr&lt;/span>, &lt;span style="color:#58a1dd">FALSE&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#ff636f">nullptr&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">wstr&lt;/span>.&lt;span style="color:#58a1dd">Get&lt;/span>(), &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">si&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">pi&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">result&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">WaitForSingleObject&lt;/span>(&lt;span style="color:#58a1dd">pi&lt;/span>.&lt;span style="color:#58a1dd">hProcess&lt;/span>, &lt;span style="color:#58a1dd">INFINITE&lt;/span>) &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#58a1dd">WAIT_OBJECT_0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">dwExit&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">GetExitCodeProcess&lt;/span>(&lt;span style="color:#58a1dd">pi&lt;/span>.&lt;span style="color:#58a1dd">hProcess&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">dwExit&lt;/span>) &lt;span style="color:#ff636f">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#58a1dd">dwExit&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">result&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">CloseHandle&lt;/span>(&lt;span style="color:#58a1dd">pi&lt;/span>.&lt;span style="color:#58a1dd">hThread&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">CloseHandle&lt;/span>(&lt;span style="color:#58a1dd">pi&lt;/span>.&lt;span style="color:#58a1dd">hProcess&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">result&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="compatibility">Compatibility&lt;/h2>
&lt;p>libgit2 使用的是 UTF-8 编码,在 Windows 中转变为 UTF16 编码,使用 Windows API 完成一系列操作.&lt;/p>
&lt;p>如果按照默认的 main 传递命令行参数,那么可能会发生错误,在 Windows 中, 创建进程是通过 CreateProcess 这样的 API 实现的,
NT 内核将命令行参数写入的进程的 PEB 中, CRT 初始化时,根据启动函数类型执行不同的策略 (WinMain wWinMain main wmain) ,
比如 main , CRT 通过 GetCommandLineA 获得命令行参数,然后将 LPCSTR 转变成 char * Argv[] 的形式.
GetCommandLineA 获得的命令行参数也是由 PEB 的命令行参数转换编码过来的. main 命令行参数的编码即当前代码页的编码,也就是 CP_ACP ,
比如 Windows 下常见的 936 GBK。&lt;/p>
&lt;p>这样一来,libgit2 传入非 西文字符 就会操作失败, 为了支持 Windows 平台,笔者使用 wmain ,然后将命令行参数依次转变为 UTF-8,
这样就可以解决不支持非西文字符的问题。然后 POSIX 平台依然使用 main。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#if defined(_WIN32) &amp;amp;&amp;amp; !defined(__CYGWIN__)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;Windows.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>&lt;span style="color:#828b96;font-style:italic">//// To convert Utf8
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>&lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">CopyToUtf8&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#ff636f">wchar_t&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">wstr&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">l&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">WideCharToMultiByte&lt;/span>(&lt;span style="color:#58a1dd">CP_UTF8&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#58a1dd">wstr&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#58a1dd">NULL&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#58a1dd">NULL&lt;/span>, &lt;span style="color:#58a1dd">NULL&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">buf&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> (&lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>)&lt;span style="color:#58a1dd">malloc&lt;/span>(&lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#ff636f">char&lt;/span>) &lt;span style="color:#ff636f">*&lt;/span> &lt;span style="color:#58a1dd">l&lt;/span> &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#a6be9d">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">buf&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">throw&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">runtime_error&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;Out of Memory &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WideCharToMultiByte&lt;/span>(&lt;span style="color:#58a1dd">CP_UTF8&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#58a1dd">wstr&lt;/span>, &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#58a1dd">buf&lt;/span>, &lt;span style="color:#58a1dd">l&lt;/span>, &lt;span style="color:#58a1dd">NULL&lt;/span>, &lt;span style="color:#58a1dd">NULL&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">buf&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">wmain&lt;/span>(&lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">argc&lt;/span>, &lt;span style="color:#ff636f">wchar_t&lt;/span> &lt;span style="color:#ff636f">**&lt;/span>&lt;span style="color:#58a1dd">argv&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">vector&lt;/span>&lt;span style="color:#ff636f">&amp;lt;&lt;/span>&lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&amp;gt;&lt;/span> &lt;span style="color:#58a1dd">Argv_&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">Release&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> [&lt;span style="color:#ff636f">&amp;amp;&lt;/span>]() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">for&lt;/span> (&lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">a&lt;/span> : &lt;span style="color:#58a1dd">Argv_&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">free&lt;/span>(&lt;span style="color:#58a1dd">a&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">for&lt;/span> (&lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">i&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>; &lt;span style="color:#58a1dd">i&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">argc&lt;/span>; &lt;span style="color:#58a1dd">i&lt;/span>&lt;span style="color:#ff636f">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Argv_&lt;/span>.&lt;span style="color:#58a1dd">push_back&lt;/span>(&lt;span style="color:#58a1dd">CopyToUtf8&lt;/span>(&lt;span style="color:#58a1dd">argv&lt;/span>[&lt;span style="color:#58a1dd">i&lt;/span>]));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#ff636f">catch&lt;/span> (&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">exception&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BaseErrorMessagePrint&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;Exception: %s&lt;/span>&lt;span style="color:#a6be9d">\n&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">e&lt;/span>.&lt;span style="color:#58a1dd">what&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Release&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">AnalyzeArgs&lt;/span> &lt;span style="color:#58a1dd">analyzeArgs&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ProcessArgv&lt;/span>((&lt;span style="color:#ff636f">int&lt;/span>)&lt;span style="color:#58a1dd">Argv_&lt;/span>.&lt;span style="color:#58a1dd">size&lt;/span>(), &lt;span style="color:#58a1dd">Argv_&lt;/span>.&lt;span style="color:#58a1dd">data&lt;/span>(), &lt;span style="color:#58a1dd">analyzeArgs&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">ProcessAnalyzeTask&lt;/span>(&lt;span style="color:#58a1dd">analyzeArgs&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BaseConsoleWrite&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;git-analyze: Operation completed !&lt;/span>&lt;span style="color:#a6be9d">\n&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#ff636f">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BaseErrorMessagePrint&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;git-analyze: Operation aborted !&lt;/span>&lt;span style="color:#a6be9d">\n&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Release&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#else
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">main&lt;/span>(&lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">argc&lt;/span>, &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">**&lt;/span>&lt;span style="color:#58a1dd">argv&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">AnalyzeArgs&lt;/span> &lt;span style="color:#58a1dd">analyzeArgs&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ProcessArgv&lt;/span>(&lt;span style="color:#58a1dd">argc&lt;/span>, &lt;span style="color:#58a1dd">argv&lt;/span>, &lt;span style="color:#58a1dd">analyzeArgs&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">ProcessAnalyzeTask&lt;/span>(&lt;span style="color:#58a1dd">analyzeArgs&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BaseConsoleWrite&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;git-analyze: Operation completed !&lt;/span>&lt;span style="color:#a6be9d">\n&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#ff636f">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BaseErrorMessagePrint&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;git-analyze: Operation aborted !&lt;/span>&lt;span style="color:#a6be9d">\n&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>另外一个问题，由于参数和 libgit2 都是使用的 UTF8 编码，默认情况下，Windows 控制台的代码页在输出 UTF8 编码
字符的情况下可能会乱码，libgit2 并没有去调整，而控制台的代码页如果手动调整，可能会导致其他程序乱码。
当然可以调用 SetConsoleOutputCP 去修改代码页，笔者并未测试，笔者采用的是和 git 官方一样的策略，
检测程序当前的标准输出标准错误是否是字符设备，这个可以使用 _isatty 来检测，当然也可以使用下面的代码来实现检测：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">IsUnderConhost&lt;/span>(&lt;span style="color:#58a1dd">FILE&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">fp&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">HANDLE&lt;/span> &lt;span style="color:#58a1dd">hStderr&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">reinterpret_cast&lt;/span>&lt;span style="color:#ff636f">&amp;lt;&lt;/span>&lt;span style="color:#58a1dd">HANDLE&lt;/span>&lt;span style="color:#ff636f">&amp;gt;&lt;/span>(&lt;span style="color:#58a1dd">_get_osfhandle&lt;/span>(&lt;span style="color:#58a1dd">_fileno&lt;/span>(&lt;span style="color:#58a1dd">fp&lt;/span>)));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">GetFileType&lt;/span>(&lt;span style="color:#58a1dd">hStderr&lt;/span>) &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#58a1dd">FILE_TYPE_CHAR&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>但是，重要的一点，MSYS2 的终端模拟器 Mintty 编码是 UTF8 ，_isatty 并不会将 Mintty 识别为字符设备，这是由于
MSYS2 或者 Cygwin 中，使用的是管道的方式读取程序的输出渲染到 Mintty，不过 MSYS2 的环境变量中会存在 TERM
这样的变量，就可以用下面的代码去识别：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">IsWindowsTTY&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">GetEnvironmentVariableW&lt;/span>(&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;TERM&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">NULL&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>) &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">GetLastError&lt;/span>() &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#58a1dd">ERROR_ENVVAR_NOT_FOUND&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在输出错误的时候，我们可以修改输出颜色，在控制台中，可以使用 SetConsoleTextAttribute，使用 GetConsoleScreenBufferInfo
获得控制台的颜色，控制台是 256 色的，其中高 4位是背景色，低四位是前景色，所以可以使用下面的代码实现色彩输出：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">BaseErrorWriteConhost&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">buf&lt;/span>, &lt;span style="color:#58a1dd">size_t&lt;/span> &lt;span style="color:#58a1dd">len&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// TO set Foreground color
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">HANDLE&lt;/span> &lt;span style="color:#58a1dd">hConsole&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">GetStdHandle&lt;/span>(&lt;span style="color:#58a1dd">STD_ERROR_HANDLE&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">CONSOLE_SCREEN_BUFFER_INFO&lt;/span> &lt;span style="color:#58a1dd">csbi&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">GetConsoleScreenBufferInfo&lt;/span>(&lt;span style="color:#58a1dd">hConsole&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">csbi&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WORD&lt;/span> &lt;span style="color:#58a1dd">oldColor&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">csbi&lt;/span>.&lt;span style="color:#58a1dd">wAttributes&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WORD&lt;/span> &lt;span style="color:#58a1dd">newColor&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> (&lt;span style="color:#58a1dd">oldColor&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span> &lt;span style="color:#a6be9d">0xF0&lt;/span>) &lt;span style="color:#ff636f">|&lt;/span> &lt;span style="color:#58a1dd">FOREGROUND_INTENSITY&lt;/span> &lt;span style="color:#ff636f">|&lt;/span> &lt;span style="color:#58a1dd">FOREGROUND_RED&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">SetConsoleTextAttribute&lt;/span>(&lt;span style="color:#58a1dd">hConsole&lt;/span>, &lt;span style="color:#58a1dd">newColor&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">dwWrite&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WCharacters&lt;/span> &lt;span style="color:#58a1dd">wstr&lt;/span>(&lt;span style="color:#58a1dd">buf&lt;/span>, &lt;span style="color:#58a1dd">len&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WriteConsoleW&lt;/span>(&lt;span style="color:#58a1dd">hConsole&lt;/span>, &lt;span style="color:#58a1dd">wstr&lt;/span>.&lt;span style="color:#58a1dd">Get&lt;/span>(), &lt;span style="color:#58a1dd">wstr&lt;/span>.&lt;span style="color:#58a1dd">Length&lt;/span>(), &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">dwWrite&lt;/span>, &lt;span style="color:#ff636f">nullptr&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">SetConsoleTextAttribute&lt;/span>(&lt;span style="color:#58a1dd">hConsole&lt;/span>, &lt;span style="color:#58a1dd">oldColor&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">dwWrite&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在 Unix 或者 MSYS2 中，可以在输出中加入 &lt;strong>\e[31m&lt;/strong> (GCC) &lt;strong>\33[31m&lt;/strong> (MSVC) 这样的字符控制终端文字颜色。&lt;/p>
&lt;p>更多的代码请查看 &lt;a href="http://git.oschina.net/oscstudio/git-analyze/blob/master/lib/Pal/Console.cc">git-analyze&lt;/a>&lt;/p>
&lt;p>&lt;strong>Update 2016-12-31&lt;/strong>&lt;/p>
&lt;p>目前 git-analyze 增加了一些有意思的工具，比如 pre-commit 这个作为客户端的钩子，能够帮助用户阻止提交超出大小限制的文件。
并且可以在误操作添加了特定后缀名的文件后，检测并组织提交。&lt;/p>
&lt;p>git-cheat 可以在当前分支的最新 commit 上创建一个无历史纪录的提交，对于一些特别的开源项目有一定的帮助。
而 git-complete 工具则能够在制定分支上创建整整一年的提交，当然用户可以决定是否需要重新创建分支。&lt;/p>
- https://forcemz.net/posts/2016/2016-08-12-git-analyze/ - Copyright (c) 2009-2024 J23</description></item><item><title>Git 传输协议实现</title><link>https://forcemz.net/posts/2016/2016-07-16-git-transport-implement/</link><pubDate>Sat, 16 Jul 2016 20:00:00 +0800</pubDate><guid>https://forcemz.net/posts/2016/2016-07-16-git-transport-implement/</guid><description>Charlie's Rethinking https://forcemz.net/posts/2016/2016-07-16-git-transport-implement/ -&lt;h1 id="git-传输协议实现">GIT 传输协议实现&lt;/h1>
&lt;p>在 GIT 的三种主流传输协议 HTTP SSH GIT 中，GIT 协议是最少被使用的协议（也就是 URL 以 &lt;code>git://&lt;/code> 开始的协议）。
这是由于 git 协议的权限控制几乎没有，要么全部可读，要么全部可写，要么全部可读写。所以对于代码托管平台来说，
git 协议的目的仅仅是为了支持 公开项目的只读访问。&lt;/p>
&lt;p>在 git 的各种传输协议中，git 协议无疑是最高效的，HTTP 受限于 HTTP 的特性，传输过程需要构造 HTTP 请求和响应。
如果是 HTTPS 还涉及到加密解密。另外 HTTP 的超时设置，以及包体大小限制都会影响用户体验。&lt;/p>
&lt;p>而 SSH 协议的性能问题主要集中在加密解密上。当然相对于用户的信息安全来说，这些代价都是可以接受。&lt;/p>
&lt;p>git 协议实际上相当于 SSH 无加密无验证，也就无从谈起权限控制，但实际上代码托管平台内部的一些同步服务，如果使用
git 协议实现，将会得到很大的性能提升。&lt;/p>
&lt;h2 id="传输协议规范">传输协议规范&lt;/h2>
&lt;p>git 协议的技术文档可以从 git 源码目录的 &lt;code>Documentation/technical&lt;/code> 找到，即 &lt;a href="https://github.com/git/git/blob/master/Documentation/technical/pack-protocol.txt">Packfile transfer protocols&lt;/a>
创建 TCP 连接后，git 客户端率先发送请求体，请求格式基于 BNF 的描述如下：&lt;/p>
&lt;pre>&lt;code>git-proto-request = request-command SP pathname NUL [ host-parameter NUL ]
request-command = &amp;quot;git-upload-pack&amp;quot; / &amp;quot;git-receive-pack&amp;quot; / &amp;quot;git-upload-archive&amp;quot; ; case sensitive
pathname = *( %x01-ff ) ; exclude NUL
host-parameter = &amp;quot;host=&amp;quot; hostname [ &amp;quot;:&amp;quot; port ]
&lt;/code>&lt;/pre>
&lt;p>一个例子如下：&lt;/p>
&lt;p>&lt;code>0033git-upload-pack /project.git\0host=myserver.com\0&lt;/code>&lt;/p>
&lt;p>在 git 的协议中，pkt-line 是非常有意思的设计，行前 4 个字节表示整个行长，长度包括其前 4 字节，
但是有个特例，&lt;code>0000&lt;/code> 其代表行长为 0，但其自身长度是 4。&lt;/p>
&lt;p>下面是一个关于请求的结构体：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">struct&lt;/span> &lt;span style="color:#58a1dd">GitRequest&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#58a1dd">command&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#58a1dd">path&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#58a1dd">host&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>git 有自带的 git-daemon 实现，这个服务程序监听 9418 端口，在接收到客户端的请求后，先要判断 command 是
否是被允许的，git 协议中有 fetch 和 push 以及 archive 之类的操作，分别对应的服务器上的命令是 git-upload-pack
git-receive-pack git-upload-archive。HTTP 只会支持前两种，SSH 会支持三种，而 代码托管平台的 git 通常支持的是
git-upload-pack git-upload-archive。&lt;/p>
&lt;p>当不允许的命令被接入时需要发送错误信息给客户端，这个信息在不同的 git-daemon 实现中也不一样，大体如下所示。&lt;/p>
&lt;p>&lt;code>001bERR service not enabled&lt;/code>&lt;/p>
&lt;p>git-daemon 将对请求路径进行转换，以期得到在服务器上的绝对路径，同时可以判断路径是否存在，不存在时
可以给客户端发送 &lt;strong>Repository Not Found&lt;/strong>。而 host 可能时域名也可能时 ip 地址，当然也可以包括端口。
服务器可以在这里做进一步的限制，出于安全考虑应当考虑到请求是可以被伪造的。&lt;/p>
&lt;p>客户端发送请求过去后，服务器将启动相应的命令，将命令标准错误和标准输出的内容发送给客户端，
将客户端传输过来的数据写入到命令的标准输入中来。&lt;/p>
&lt;p>在请求体中，命令为 git-upload-pack /project.git 在服务器上运行时，就会类似&lt;/p>
&lt;blockquote>
&lt;p>git-upload-pack ${RepositoriesRoot}/project.git&lt;/p>
&lt;/blockquote>
&lt;p>出于限制连接的目的，一般还会添加 &lt;code>--timeout=60&lt;/code> 这样的参数。timeout 并不是整个操作过程的超时。&lt;/p>
&lt;p>与 HTTP 不同的是，git 协议的命令中没有参数 &lt;code>--stateless-rpc&lt;/code> 和 &lt;code>--advertise-refs&lt;/code> ，在 HTTP 中，两个参数都存在时，
只输出存储库的引用列表与 capabilities，与之对于的是 &lt;code>GET /repository.git/info/refs?service=git-upload(receive)-pack&lt;/code> ，
当只有 &amp;ndash;stateless-rpc 时，等待客户端的数据，然后解析发送数据给客户端,，与之对应的是 &lt;code>POST /repository.git/git-upload(receive)-pack&lt;/code>。&lt;/p>
&lt;h2 id="进程输入输出的读写">进程输入输出的读写&lt;/h2>
&lt;p>在 C 语言中，有 popen 函数，可以创建一个进程,并将进程的标准输出或标准输入创建成一个文件指针，即 &lt;code>FILE*&lt;/code>
其他可以使用 C 函数的语言很多也提供了类似的实现，比如 Ruby，基于 Ruby 的 git HTTP 服务器 grack 正是使用的 popen，
相比与其他语言改造的 popen，C 语言中 popen 存在了一些缺陷，比如无法同时读写，如果要输出标准错误，
需要在命令参数中额外的将标准错误重定向到标准输出。&lt;/p>
&lt;p>在 musl libc 的中，popen 的实现如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">FILE&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">popen&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">cmd&lt;/span>, &lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">mode&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">p&lt;/span>[&lt;span style="color:#a6be9d">2&lt;/span>], &lt;span style="color:#58a1dd">op&lt;/span>, &lt;span style="color:#58a1dd">e&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">pid_t&lt;/span> &lt;span style="color:#58a1dd">pid&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">FILE&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">f&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">posix_spawn_file_actions_t&lt;/span> &lt;span style="color:#58a1dd">fa&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">mode&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#a6be9d">&amp;#39;r&amp;#39;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">op&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#ff636f">else&lt;/span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">mode&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#a6be9d">&amp;#39;w&amp;#39;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">op&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#ff636f">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">errno&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">EINVAL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">pipe2&lt;/span>(&lt;span style="color:#58a1dd">p&lt;/span>, &lt;span style="color:#58a1dd">O_CLOEXEC&lt;/span>)) &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">NULL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">f&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">fdopen&lt;/span>(&lt;span style="color:#58a1dd">p&lt;/span>[&lt;span style="color:#58a1dd">op&lt;/span>], &lt;span style="color:#58a1dd">mode&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">f&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">__syscall&lt;/span>(&lt;span style="color:#58a1dd">SYS_close&lt;/span>, &lt;span style="color:#58a1dd">p&lt;/span>[&lt;span style="color:#a6be9d">0&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">__syscall&lt;/span>(&lt;span style="color:#58a1dd">SYS_close&lt;/span>, &lt;span style="color:#58a1dd">p&lt;/span>[&lt;span style="color:#a6be9d">1&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">NULL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">FLOCK&lt;/span>(&lt;span style="color:#58a1dd">f&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">/* If the child&amp;#39;s end of the pipe happens to already be on the final
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic"> * fd number to which it will be assigned (either 0 or 1), it must
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic"> * be moved to a different fd. Otherwise, there is no safe way to
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic"> * remove the close-on-exec flag in the child without also creating
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic"> * a file descriptor leak race condition in the parent. */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">p&lt;/span>[&lt;span style="color:#a6be9d">1&lt;/span>&lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#58a1dd">op&lt;/span>] &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#a6be9d">1&lt;/span>&lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#58a1dd">op&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">tmp&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">fcntl&lt;/span>(&lt;span style="color:#a6be9d">1&lt;/span>&lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#58a1dd">op&lt;/span>, &lt;span style="color:#58a1dd">F_DUPFD_CLOEXEC&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">tmp&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">e&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">errno&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">goto&lt;/span> &lt;span style="color:#58a1dd">fail&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">__syscall&lt;/span>(&lt;span style="color:#58a1dd">SYS_close&lt;/span>, &lt;span style="color:#58a1dd">p&lt;/span>[&lt;span style="color:#a6be9d">1&lt;/span>&lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#58a1dd">op&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">p&lt;/span>[&lt;span style="color:#a6be9d">1&lt;/span>&lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#58a1dd">op&lt;/span>] &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">tmp&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">e&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">ENOMEM&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">posix_spawn_file_actions_init&lt;/span>(&lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">fa&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">posix_spawn_file_actions_adddup2&lt;/span>(&lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">fa&lt;/span>, &lt;span style="color:#58a1dd">p&lt;/span>[&lt;span style="color:#a6be9d">1&lt;/span>&lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#58a1dd">op&lt;/span>], &lt;span style="color:#a6be9d">1&lt;/span>&lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#58a1dd">op&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>(&lt;span style="color:#58a1dd">e&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">posix_spawn&lt;/span>(&lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">pid&lt;/span>, &lt;span style="color:#a6be9d">&amp;#34;/bin/sh&amp;#34;&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">fa&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>[]){ &lt;span style="color:#a6be9d">&amp;#34;sh&amp;#34;&lt;/span>, &lt;span style="color:#a6be9d">&amp;#34;-c&amp;#34;&lt;/span>, (&lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>)&lt;span style="color:#58a1dd">cmd&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span> }, &lt;span style="color:#58a1dd">__environ&lt;/span>))) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">posix_spawn_file_actions_destroy&lt;/span>(&lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">fa&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">f&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">pipe_pid&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">pid&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">strchr&lt;/span>(&lt;span style="color:#58a1dd">mode&lt;/span>, &lt;span style="color:#a6be9d">&amp;#39;e&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">fcntl&lt;/span>(&lt;span style="color:#58a1dd">p&lt;/span>[&lt;span style="color:#58a1dd">op&lt;/span>], &lt;span style="color:#58a1dd">F_SETFD&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">__syscall&lt;/span>(&lt;span style="color:#58a1dd">SYS_close&lt;/span>, &lt;span style="color:#58a1dd">p&lt;/span>[&lt;span style="color:#a6be9d">1&lt;/span>&lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#58a1dd">op&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">FUNLOCK&lt;/span>(&lt;span style="color:#58a1dd">f&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">f&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">posix_spawn_file_actions_destroy&lt;/span>(&lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">fa&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">fail&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">fclose&lt;/span>(&lt;span style="color:#58a1dd">f&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">__syscall&lt;/span>(&lt;span style="color:#58a1dd">SYS_close&lt;/span>, &lt;span style="color:#58a1dd">p&lt;/span>[&lt;span style="color:#a6be9d">1&lt;/span>&lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#58a1dd">op&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">errno&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">e&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在 Windows Visual C++ 中，popen 源码在 &lt;code>C:\Program Files (x86)\Windows Kits\10\Source\${SDKVersion}\ucrt\conio\popen.cpp&lt;/code> ，
按照 MSDN 文档说明，Windows 32 GUI 程序，即 subsystem 是 Windows 的程序，使用 popen 可能导致程序无限失去响应。&lt;/p>
&lt;p>所以在笔者实现 git-daemon 及其他 git 服务器时，都不会使用 popen 这个函数。&lt;/p>
&lt;p>为了支持跨平台和简化编程，笔者在实现 svn 代理服务器时就使用了 Boost Asio 库，后来也用 Asio 实现过一个 git 远程命令服务，
每一个客户端与服务器连接后，服务器启动程序，需要创建 3 条管道，分别是 子进程的标准输入 输出 错误，即 stdout stdin stderr，
然后注册读写异步事件，将子进程的输出与错误写入到 socket 发送出去，读取 socket 写入到子进程的标准输入中。&lt;/p>
&lt;p>在 POSIX 系统中，boost 有一个文件描述符类 &lt;code>boost::asio::posix::stream_descriptor&lt;/code> 这个类不能是常规文件。&lt;/p>
&lt;p>在 Windows 系统中，boost 有文件句柄类 &lt;code>boost::asio::windows::stream_handle&lt;/code> 此处的文件应当支持随机读取，
比如命名管道（当然在 Windows 系统的，匿名管道实际上也是命名管道的一种特例实现）。&lt;/p>
&lt;p>以上两种类都支持 &lt;code>async_read&lt;/code> &lt;code>async_write&lt;/code> ，所以可以很方便的实现异步的读取。&lt;/p>
&lt;p>上面的做法，&lt;del>唯一的缺陷是性能并不是非常高，&lt;/del> 代码逻辑也比较复杂，当然好处是，错误异常可控一些。&lt;/p>
&lt;p>在 Linux 网络通信中，类似与 git 协议这样读取子进程输入输出的服务程序的传统做法是，将 子进程的 IO 重定向到 socket，
值得注意的是 boost 中 socket 是异步非阻塞的，然而，git 命令的标准输入标准错误标准输出都是同步的，所以在 fork 子进程之前，
需要将 socket 设置为同步阻塞，当 fork 失败时，要设置回来。&lt;/p>
&lt;p>&lt;code>socket_.native_non_blocking(false);&lt;/code>&lt;/p>
&lt;p>另外，为了记录子进程是否异常退出，需要注册信号 SIGCHLD 并且使用 waitpid 函数去等待，boost 就有&lt;code>boost::asio::signal_set::async_wait&lt;/code> 可以异步安全的监听子进程是否退出 。&lt;/p>
&lt;p>一般而言，在 Windows 平台上，进程的输入输出并不能重定向到 socket，但你可以使用将进程的输入输出重定向到管道，然后使用 IOCP 去将管道与 socket 联系起来，性能并不会很差。&lt;/p>
&lt;h2 id="其他">其他&lt;/h2>
&lt;p>对于非代码托管平台的从业者来说，上面的相关内容可能显得无足轻重，不过，网络编程都是殊途同归，最后核心理念都是类似的。关于git-daemon 如果笔者有时间会实现一个跨平台的简易版并开源。&lt;/p>
- https://forcemz.net/posts/2016/2016-07-16-git-transport-implement/ - Copyright (c) 2009-2024 J23</description></item><item><title>Git 存储格式与运用</title><link>https://forcemz.net/posts/2016/2016-07-09-git-storage/</link><pubDate>Sat, 09 Jul 2016 20:00:00 +0800</pubDate><guid>https://forcemz.net/posts/2016/2016-07-09-git-storage/</guid><description>Charlie's Rethinking https://forcemz.net/posts/2016/2016-07-09-git-storage/ -&lt;h1 id="git-存储格式与运用">GIT 存储格式与运用&lt;/h1>
&lt;p>在 GIT 的实现规范中，存储格式是非常简单而且高效的，一个代码托管平台通常需要基于这些特性实现一非常有意思的功能。
在本文中，将介绍基于 GIT 存储库格式实现的仓库体积限制与大文件检查。&lt;/p>
&lt;h2 id="存储库的布局">存储库的布局&lt;/h2>
&lt;p>正常的 GIT 存储库布局应当遵循 GIT 规范 &lt;a href="https://github.com/git/git/blob/master/Documentation/gitrepository-layout.txt">Git Repository Layout&lt;/a>
一个 GIT 仓库包括如下两种风格：&lt;/p>
&lt;ul>
&lt;li>&lt;code>.git&lt;/code> 目录存在于工作目录的根目录中。&lt;/li>
&lt;li>&lt;code>&amp;lt;project&amp;gt;.git&lt;/code> 这种是一个裸仓库，没有工作目录，服务器上存储的就是这种。&lt;/li>
&lt;/ul>
&lt;p>特别注意的是，如果是一个 &lt;strong>子模块 （submodule）&lt;/strong> &lt;code>.git&lt;/code> 会是一个文件，文件内容为 &lt;code>gitdir:/path/to/gitdir&lt;/code>&lt;/p>
&lt;p>下文是一个表格，关于目录结构和描述信息。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>路径&lt;/th>
&lt;th>目录（D）\ 文件 （F）&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>objects&lt;/td>
&lt;td>D&lt;/td>
&lt;td>松散对象和包文件&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>refs&lt;/td>
&lt;td>D&lt;/td>
&lt;td>引用，包括头引用，标签引用，和远程引用&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>packed-refs&lt;/td>
&lt;td>F&lt;/td>
&lt;td>打包的引用，通常运行 &lt;code>git gc&lt;/code> 后产生&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>HEAD&lt;/td>
&lt;td>F&lt;/td>
&lt;td>当前指向的引用或者 oid，例如 &lt;code>ref: refs/heads/master&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>config&lt;/td>
&lt;td>F&lt;/td>
&lt;td>存储库的配置，可以覆盖全局配置&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>branches&lt;/td>
&lt;td>D&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>hooks&lt;/td>
&lt;td>D&lt;/td>
&lt;td>请查看 Documentation/githooks.txt&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>index&lt;/td>
&lt;td>F&lt;/td>
&lt;td>git index file, Documentation/technical/index-format.txt&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sharedindex.&amp;lt;SHA-1&amp;gt;&lt;/code>&lt;/td>
&lt;td>F&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>info&lt;/td>
&lt;td>D&lt;/td>
&lt;td>存储库信息,哑协议依赖 info/refs&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>remotes&lt;/td>
&lt;td>D&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>logs&lt;/td>
&lt;td>D&lt;/td>
&lt;td>运行 git log 可以查看提交记录&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>shallow&lt;/td>
&lt;td>F&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>commondir&lt;/td>
&lt;td>D&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>modules&lt;/td>
&lt;td>D&lt;/td>
&lt;td>子模块的 git 目录&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>worktrees&lt;/td>
&lt;td>D&lt;/td>
&lt;td>工作目录，更新后的文档与 git 多个工作目录有关&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>对于一些实际上使用非常少的路径，我就没有添加说明了。&lt;/p>
&lt;h2 id="松散文件格式">松散文件格式&lt;/h2>
&lt;p>在 objects 目录中，有 00,01,&amp;hellip;ff 这样的目录，目录下存储着文件名长度为38的二进制文件，这些文件就是松散文件，
git 创建提交时，修改的文件，更新的目录树，以及提交内容会被压缩后写入到这些目录中，成为一个个松散文件，
当需要传输或者运行 gc 时，这些文件就会被写入到 pack 文件中。&lt;/p>
&lt;p>对象文件使用的压缩算法是 deflate，增加一个新的对象文件时，先要计算这个文件的 hash 值（原始长度 20，16 进制长度 40 个字符），
这个根据这个值查找文件是否存在这些个目录或者 pack 文件中，不存在则创建前缀目录（hash 值 16 进制字符串前两个），然后、
将原始文件的类型以及长度信息以及内容一起压缩，写入到磁盘，文件名是 hash 值的 16 进制的后 38 个字符。&lt;/p>
&lt;p>通过解压缩可以得到符合下面格式的文件：&lt;/p>
&lt;blockquote>
&lt;p>type SP digest NUL body&lt;/p>
&lt;/blockquote>
&lt;p>其中类型是 commit blob tree 而长度则是 10 进制的数字，以字节为单位。后面的 body 就是各种类型文件的内容。&lt;/p>
&lt;p>commit 内容是纯文本的，有 tree ，这个 tree 也就是根的 tree，然后有 一个 到多个 parent，这与 git merge 方向有关，
还有作者，提交者，以及提交信息。这里的 oid 是 16 进制的。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>tree bbe101c40b962d8b8977b34d0eb8bf12bb9e9679
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>parent 789808fe48670f2fce59da45a82a2a18f489e300
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>author Junio C Hamano &amp;lt;gitster@pobox.com&amp;gt; &lt;span style="color:#a6be9d">1467837778&lt;/span> -0700
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>committer Junio C Hamano &amp;lt;gitster@pobox.com&amp;gt; &lt;span style="color:#a6be9d">1467837778&lt;/span> -0700
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Third batch of topics &lt;span style="color:#ff636f">for&lt;/span> 2.10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Signed-off-by: Junio C Hamano &amp;lt;gitster@pobox.com&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>blob 就是真实的文件。&lt;/p>
&lt;p>而 tree 就是将文件按目录结构和属性组织起来，在 tree 中每一个 tree entry 可能是 blob，
也可能是 tree，也有可能是 commit，在有 submodule 的情况下就有 commit。commit 指向的是一个提交，
仅通过此 commit 并不能获取完整的资源，在工作目录的根下，当项目存在 submodule 时，会有一个 &lt;code>.gitmodules&lt;/code>
git submodule 在先要注册到 git config 中，然后克隆到 &lt;code>.git/modules&lt;/code> 目录，然后 git 依据 tree 中的 commit 检出。
如果是新增的 submodule 将会检出对应仓库的 HEAD 指向的引用。&lt;/p>
&lt;p>这里的 oid 是原始的。可执行的 blob 和普通的 blob 存储时并无大的差别，主要的差别体现在 tree 的 unix 目录项。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6be9d">100644&lt;/span> blob 33d07c06bd90833ce56bc64c13bdc08c1997c3fb .gitattributes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6be9d">100644&lt;/span> blob 6483b21cbfc73601602d628a2c609d3ca84f9e53 .gitignore
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6be9d">100755&lt;/span> blob a88b6824b908d89ee185b84ed92b9c122b0118dd GIT-VERSION-GEN
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6be9d">100644&lt;/span> blob 4f00bdd3d69babe8a58c4989406eaa6fb5f36a50 Makefile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6be9d">100755&lt;/span> blob 4277f30c4116faf2788243af4ec23f1d077698e8 git-gui--askpass
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6be9d">100755&lt;/span> blob 11048c7a0e94f598b168de98d18fda9aea420c7d git-gui.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6be9d">040000&lt;/span> tree 1ead6a96af286100752067ea1849d49b35ce1d35 lib
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6be9d">040000&lt;/span> tree 452280d7fa4a155bd311a7cce7e327964267b792 macosx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6be9d">040000&lt;/span> tree 2294a6a975b861ecdb5b03d091877c14ec696621 po
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6be9d">040000&lt;/span> tree ae99a38593d127e47f956d96abf3d6a40d3aff66 windows
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在 Git-SCM 中，有例图显示了这种结构：&lt;/p>
&lt;p>&lt;img src="https://git-scm.com/book/en/v2/book/10-git-internals/images/data-model-1.png" alt="Data-Model">&lt;/p>
&lt;p>如何解压对象文件？大多数语言都绑定了 zlib，放心去使用即可。&lt;/p>
&lt;p>比如 C# 有 System.IO.Compression 有 System.IO.Compression.DeflateStream 类，就可以拿过来使用。
如果是 C++ 直接使用 zlib 中 z_stream 即可，Linux Unix 都带了，然后 Visual Studio 可以使用 NuGet 安装到项目中，可以使用。&lt;/p>
&lt;p>那么计算 HASH 呢？OpenSSL 提供了 hash 函数，大多数 Linux 和 Unix 都带了，可以使用，在 Windows 中也可以使用 OpenSSL,
当然也可以使用 Windows 自带的加密算法动态库 bcrypt.dll，你也可以在网上找到一个 SHA-1 算法的实现。&lt;/p>
&lt;h2 id="pack-文件格式">Pack 文件格式&lt;/h2>
&lt;p>Pack 文件的设计使得 git 仓库可以更好的节省磁盘空间，有利于服务器之间传输数据。&lt;/p>
&lt;h3 id="pack-文件">Pack 文件&lt;/h3>
&lt;p>文档地址：&lt;a href="https://github.com/git/git/blob/master/Documentation/technical/pack-format.txt">Git pack format&lt;/a>&lt;/p>
&lt;p>pack 文件的第一部分是签名 {&amp;lsquo;P&amp;rsquo;,&amp;lsquo;A&amp;rsquo;,&amp;lsquo;C&amp;rsquo;,&amp;lsquo;K&amp;rsquo;} 4 字节，正如 zip 文件带有 PK 一样。&lt;/p>
&lt;p>第二部分是 4 字节（网络字节序）版本号，这里需要使用 ntohl 来转成本机的，x86\amd64 是小端的。&lt;/p>
&lt;p>第三部分是 4 字节（网络字节序）对象数目。&lt;/p>
&lt;p>然后就是对象条目，3 bit 类型，然后根据类型判断长度字符串的 bit 长度。然后计算长度。
其中类型包括松散对象的所有类型，还包括&lt;/p>
&lt;pre>&lt;code> (undeltified representation)
n-byte type and length (3-bit type, (n-1)*7+4-bit length)
compressed data
(deltified representation)
n-byte type and length (3-bit type, (n-1)*7+4-bit length)
20-byte base object name if OBJ_REF_DELTA or a negative relative
offset from the delta object's position in the pack if this
is an OBJ_OFS_DELTA object
compressed delta data
&lt;/code>&lt;/pre>
&lt;p>最后，是 20-byte SHA-1 校验码。&lt;/p>
&lt;h3 id="idx-文件">Idx 文件&lt;/h3>
&lt;p>如果直接去解析 pack 文件是很麻烦的一件事，而我们只需要将大文件扫描出来，并不需要做其他工作，
所以，我们可以了解 idx 文件格式，然后做出一些取舍。&lt;/p>
&lt;p>idx 文件的格式也在 pack 文件格式文档中。&lt;/p>
&lt;p>idx 文件有两个版本，第一版基本不怎么使用了，所以这里讲的是第二版。&lt;/p>
&lt;p>第一部分是 魔数 \377tOc 4-byte&lt;/p>
&lt;p>第二部分是 版本号 网络字节序，目前是 2。&lt;/p>
&lt;p>第三部分是 256 个扇出表 （fan-out table），这个与版本 1 一致。每一个是 4 byte 网络字节序。
比如第一个代表 前缀 00 的 对象有多少个， 前 255 个都是对应的对象序号有多少个，并没有 ff 对应的有多少个对象，
最后一项表示所有的对象数目。扇出表总共占用 256*4 字节。&lt;/p>
&lt;p>第四部分是 按顺序排列的 20 字节对象 sha-1，每一个 占用 20-byte，共计 total*20-byte。&lt;/p>
&lt;p>第五部分是 按顺序排列的 4 字节 crc 校验马，总共 total*4-byte。&lt;/p>
&lt;p>第六部分是 按顺序排列的 4 字节 pack 偏移（网络字节序），总共 total*4-byte 这就意味着普通的 pack 文件无法存储超过 4 GB 大小的文件。&lt;/p>
&lt;p>第七部分是 8 字节偏移条目，大多数不要参照此文件。&lt;/p>
&lt;p>最后依然是校验码。&lt;/p>
&lt;h2 id="仓库大小限制和文件大小检测">仓库大小限制和文件大小检测&lt;/h2>
&lt;p>首先讲的是仓库大小，对于 git 而言，最重要的数据是 objects 和 refs，只要拥有这些数据，就可以恢复出一个完整的仓库。
而对仓库做大小限制，则只需要检测 objects 目录大小即可。&lt;/p>
&lt;p>通常来说在 linux 中，可以使用 du -sh 查看目录占用磁盘空间大小。在 Windows 中有多种方式，可以使用 Sysinternals 的 du 工具，
运行 du -sh 一样 OK。 （Sysinternals 创始人之一 Mark Russinovich 现是 Microsoft Azure CTO）&lt;/p>
&lt;p>这里值得注意的是在 Linux 中，目录同样占用空间，4096 字节，无论是目录还是文件，占用的的大小一定是块大小的整倍数。
即 S_BLKSIZE，这里是 512。&lt;/p>
&lt;p>下面有两段代码，分别是 unix like 和 Windows 扫描目录大小。&lt;/p>
&lt;p>在 Unix/Linux 或者 Bash On Windows 中，可以使用下面这个例子&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">class&lt;/span> &lt;span style="color:#58a1dd">ScanningFolder&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">public&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">FolderSizeResolve&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">dir__&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DIR&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">dir&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">opendir&lt;/span>(&lt;span style="color:#58a1dd">dir__&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">dir&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">fprintf&lt;/span>(&lt;span style="color:#58a1dd">stderr&lt;/span>, &lt;span style="color:#a6be9d">&amp;#34;opendir: %s&lt;/span>&lt;span style="color:#a6be9d">\n&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">strerror&lt;/span>(&lt;span style="color:#58a1dd">errno&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// folder self
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">size_&lt;/span> &lt;span style="color:#ff636f">+=&lt;/span> &lt;span style="color:#a6be9d">4096&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">dirent&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">dirent_&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">while&lt;/span> ((&lt;span style="color:#58a1dd">dirent_&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">readdir&lt;/span>(&lt;span style="color:#58a1dd">dir&lt;/span>))) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">dirent_&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">d_type&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span> &lt;span style="color:#58a1dd">DT_REG&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#58a1dd">file&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">dir__&lt;/span> &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;/&amp;#34;&lt;/span> &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#58a1dd">dirent_&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">d_name&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">struct&lt;/span> &lt;span style="color:#58a1dd">stat&lt;/span> &lt;span style="color:#58a1dd">stat_&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">stat&lt;/span>(&lt;span style="color:#58a1dd">file&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>(), &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">stat_&lt;/span>) &lt;span style="color:#ff636f">!=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">fprintf&lt;/span>(&lt;span style="color:#58a1dd">stderr&lt;/span>, &lt;span style="color:#a6be9d">&amp;#34;ERROR: %s&lt;/span>&lt;span style="color:#a6be9d">\n&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">strerror&lt;/span>(&lt;span style="color:#58a1dd">errno&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">closedir&lt;/span>(&lt;span style="color:#58a1dd">dir&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#ff636f">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// S_BLKSIZE 512
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">size_&lt;/span> &lt;span style="color:#ff636f">+=&lt;/span> &lt;span style="color:#58a1dd">stat_&lt;/span>.&lt;span style="color:#58a1dd">st_blocks&lt;/span> &lt;span style="color:#ff636f">*&lt;/span> &lt;span style="color:#58a1dd">S_BLKSIZE&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#ff636f">else&lt;/span> &lt;span style="color:#58a1dd">if&lt;/span> (&lt;span style="color:#58a1dd">dirent_&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">d_type&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span> &lt;span style="color:#58a1dd">DT_DIR&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">strcmp&lt;/span>(&lt;span style="color:#58a1dd">dirent_&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">d_name&lt;/span>, &lt;span style="color:#a6be9d">&amp;#34;.&amp;#34;&lt;/span>) &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span> &lt;span style="color:#ff636f">||&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">strcmp&lt;/span>(&lt;span style="color:#58a1dd">dirent_&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">d_name&lt;/span>, &lt;span style="color:#a6be9d">&amp;#34;..&amp;#34;&lt;/span>) &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">continue&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#58a1dd">newdir&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">dir__&lt;/span> &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;/&amp;#34;&lt;/span> &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#58a1dd">dirent_&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">d_name&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">FolderSizeResolve&lt;/span>(&lt;span style="color:#58a1dd">newdir&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">closedir&lt;/span>(&lt;span style="color:#58a1dd">dir&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">closedir&lt;/span>(&lt;span style="color:#58a1dd">dir&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">uint64_t&lt;/span> &lt;span style="color:#58a1dd">Size&lt;/span>() &lt;span style="color:#ff636f">const&lt;/span> { &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#ff636f">this&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">size_&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">private&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">uint64_t&lt;/span> &lt;span style="color:#58a1dd">size_&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当然也可以使用 ftw 这样的函数，不过并不一定高效，比如 libc musl 就是使用 opendir 来
实现的 ftw。这样一来性能反而下降了。&lt;/p>
&lt;p>在 Windows 中，遍历目录可以使用 FindFirstFile/FindNextFile 这个两个 API。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">class&lt;/span> &lt;span style="color:#58a1dd">FolderSize&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">public&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">FolderSize&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">dir&lt;/span>) &lt;span style="color:#ff636f">:&lt;/span> &lt;span style="color:#58a1dd">size_&lt;/span>(&lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>) {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">int64_t&lt;/span> &lt;span style="color:#58a1dd">Size&lt;/span>() &lt;span style="color:#ff636f">const&lt;/span> { &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">size_&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">private&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">TraverseFolder&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">dir&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WIN32_FIND_DATAW&lt;/span> &lt;span style="color:#58a1dd">find_data&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">HANDLE&lt;/span> &lt;span style="color:#58a1dd">hFind&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">FindFirstFileW&lt;/span>(&lt;span style="color:#58a1dd">dir&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>(), &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">find_data&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">hFind&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#58a1dd">INVALID_HANDLE_VALUE&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">while&lt;/span> (&lt;span style="color:#58a1dd">true&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">find_data&lt;/span>.&lt;span style="color:#58a1dd">dwFileAttributes&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span> &lt;span style="color:#58a1dd">FILE_ATTRIBUTE_DIRECTORY&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">wcscmp&lt;/span>(&lt;span style="color:#58a1dd">find_data&lt;/span>.&lt;span style="color:#58a1dd">cFileName&lt;/span>, &lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;.&amp;#34;&lt;/span>) &lt;span style="color:#ff636f">!=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wstring&lt;/span> &lt;span style="color:#58a1dd">xdir&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">dir&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">xdir&lt;/span>.&lt;span style="color:#58a1dd">push_back&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;\\&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">xdir&lt;/span>.&lt;span style="color:#58a1dd">append&lt;/span>(&lt;span style="color:#58a1dd">find_data&lt;/span>.&lt;span style="color:#58a1dd">cFileName&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">TraverseFolder&lt;/span>(&lt;span style="color:#58a1dd">xdir&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#ff636f">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">size_&lt;/span> &lt;span style="color:#ff636f">+=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ((&lt;span style="color:#ff636f">int64_t&lt;/span>)&lt;span style="color:#58a1dd">find_data&lt;/span>.&lt;span style="color:#58a1dd">nFileSizeHigh&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#a6be9d">32&lt;/span> &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#58a1dd">find_data&lt;/span>.&lt;span style="color:#58a1dd">nFileSizeLow&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!::&lt;/span>&lt;span style="color:#58a1dd">FindNextFileW&lt;/span>(&lt;span style="color:#58a1dd">hFind&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">find_data&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">FindClose&lt;/span>(&lt;span style="color:#58a1dd">hFind&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">int64_t&lt;/span> &lt;span style="color:#58a1dd">size_&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后就是文件大小检测，通常有两个指标，一个是压缩前的大小，一个是压缩后的大小。&lt;/p>
&lt;p>对于松散文件，不依赖第三方库，我们可以使用 zlib 去查看松散对象的大小。如果只要检测压缩后的大小，
实际上在遍历目录的时候就可以使用 stat 的 st_size 参数获得实际大小。&lt;/p>
&lt;p>对于 pack 文件中的大小，通常计算起来比较麻烦，由于我们对文件大小的差异容忍度很高，我们实际上可以使用 idx 偏移值去计算。
先取得 pack 文件大小，然后读取 idx 中所有的 sha 值与偏移值。然后对偏移值使用 sort 排序，由大到小，
最后使用 前一个偏移值减去后一个偏移值即可得到近似大小。其中，第一个要使用 (packsize-20) 去减。比如码云限制文件大小，
警告是 50M，错误时 100 M，由于 pack 得到的时压缩后的大小，实际上误差也就可以忽略不计了。如果需要使用原始大小可以使用 libgit2 去实现。&lt;/p>
&lt;p>偏移值计算时，数据结构的使用非常重要，在 fan-out table 的最后一个中，已经得知所有对象的数目，便可以使用 vector 之类的容器，
与 list 相比，笔者在扫描 2 GB 的 FreeBSD 仓库对象，共计 300 W 个对象，其中使用 list 是 7s，而 vector 是 3s，运行环境是 12 年笔记本。
i3 处理器，机械硬盘。Windows（Bash On Windows）。&lt;/p>
&lt;p>关于实际大小和压缩后的大小，zlib 的压缩可大可小，一般而言传输和存储时都是压缩后的文件，所以在实现代码托管业务时，
限制大小的策略应当侧重于压缩后的大小。&lt;/p>
&lt;h2 id="最后">最后&lt;/h2>
&lt;p>关于 GIT 存储的研究是作为 Native-Hook 的一部分，与钩子相关的内容本次就没有写了。&lt;/p>
- https://forcemz.net/posts/2016/2016-07-09-git-storage/ - Copyright (c) 2009-2024 J23</description></item><item><title>Windows 10 原生 SSH 功能探索</title><link>https://forcemz.net/posts/2016/2016-06-04-windows-ssh-server/</link><pubDate>Sat, 04 Jun 2016 20:00:00 +0800</pubDate><guid>https://forcemz.net/posts/2016/2016-06-04-windows-ssh-server/</guid><description>Charlie's Rethinking https://forcemz.net/posts/2016/2016-06-04-windows-ssh-server/ -&lt;h1 id="windows-10-原生-ssh-功能探索">Windows 10 原生 SSH 功能探索&lt;/h1>
&lt;p>在 Windows 10 Insider 14352 中，增加了两个服务 SshBrokerGroup SshProxyGroup，
通过命令&lt;/p>
&lt;p>&lt;code>netstat -aon |findstr &amp;quot;22&amp;quot;&lt;/code>&lt;/p>
&lt;p>即可找到 端口 22 绑定的进程也就是 SshProxyGroup 服务进程，而 22 端口是 SSH 服务器监听的端口，
在 Windows 目录 &lt;em>C:\Windows\System32&lt;/em> 可以发现 几个与 SSH 相关的 dll 和 exe：&lt;/p>
&lt;ul>
&lt;li>SshBroker.dll&lt;/li>
&lt;li>SshProxy.dll&lt;/li>
&lt;li>SshSession.exe&lt;/li>
&lt;li>SshSftp.exe&lt;/li>
&lt;/ul>
&lt;p>实际上 Windows SSH 服务器名称应该是: &lt;strong>Microsoft SSH Server for Windows&lt;/strong>&lt;/p>
&lt;h2 id="insider">Insider&lt;/h2>
&lt;p>在 Windows 注册表中，对 SSH 服务配置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\SshBroker
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\SshProxy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\SharedAccess\Parameters\FirewallPolicy\FirewallRules
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Ssh\Broker
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中在 &lt;code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Ssh\Broker\DevToolsUser&lt;/code> auth-method 中支持 key 和密码两种验证方式&lt;/p>
&lt;p>UA 标识为 &lt;strong>SSH-2.0-MS_1.100&lt;/strong>&lt;/p>
&lt;h3 id="sshsession-insider">SshSession Insider&lt;/h3>
&lt;p>SshSession 基于 C++ 开发，大量使用了 C++11 的特性，尤其是 lambda，加密 API 使用的是 Windows 自身的加密 API。&lt;/p>
&lt;p>通过调试至少可以发现 SshSession 包含以下源码：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>onecore\net\ssh\sshsession\session.cpp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>onecore\net\ssh\channel\channeldirecttcpip.cpp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>onecore\net\ssh\transport\transportimpl.cpp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>onecore\net\ssh\auths\authsmethodpassword.cpp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>onecore\net\ssh\authpublickey\authpublickeybase.cpp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>onecore\net\ssh\kex\kexdiffiehellman.cpp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>onecore\net\ssh\kex\kexgssapi.cpp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>onecore\net\ssh\kex\hexecdh.cpp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>onecore\net\ssh\kex\kexbase.cpp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>onecore\net\ssh\kex\kexdhbase.cpp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>onecore\net\ssh\kexhostkey\kexhostkeybase.cpp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>onecore\net\ssh\mac\macbcrypt.cpp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>onecore\net\ssh\cipher\cipherbcrypt.cpp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>onecore\net\ssh\compression\compressionzlib.cpp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>onecore\net\ssh\random\randomdefault.cpp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>onecore\net\ssh\core\buffer.cpp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>onecore\net\ssh\core\dispatcherport.cpp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>onecore\net\ssh\core\timerimpl.cpp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="如何体验">如何体验&lt;/h2>
&lt;p>开启 SshProxy 和 SshBroker 服务，打开 MSYS2 或者 git for Windows 或者是 Bash on Windows (Bash on Windows 需指定账户名)&lt;/p>
&lt;blockquote>
&lt;p>ssh localhost&lt;/p>
&lt;/blockquote>
&lt;p>输入当前账户密码即可登录。&lt;/p>
&lt;h2 id="关于服务">关于服务&lt;/h2>
&lt;p>在 Windows Insider 14361 中，SSH Proxy ，SSH Broker 服务修改为非默认启动。&lt;/p>
&lt;h2 id="windows-上-ssh--解决方案">Windows 上 SSH 解决方案&lt;/h2>
&lt;p>在 Windows 上，SSH 客户端（服务器）解决方案有很多，包括&lt;/p>
&lt;ul>
&lt;li>putty&lt;/li>
&lt;li>secureCRT&lt;/li>
&lt;li>MobaXterm&lt;/li>
&lt;li>KiTTY&lt;/li>
&lt;li>mRemoteNG&lt;/li>
&lt;li>Xshell 4&lt;/li>
&lt;li>Bitvise SSH Client&lt;/li>
&lt;li>Token2Shell&lt;/li>
&lt;li>Cygwin runtime based OpenSSH&lt;/li>
&lt;/ul>
&lt;p>Windows 10 UWP 应用的 SSH 客户端其中有免费方案 SSH Remote，
收费方案：&lt;a href="http://www.microsoft.com/zh-cn/store/apps/token2shell-md/9nblggh2ncx9">Token2Shell/MD&lt;/a> （Token2Shell 是桌面版）
Token2Shell/MD 对于 DPI 缩放支持较好。&lt;/p>
&lt;p>&lt;img src="https://store-images.s-microsoft.com/image/apps.23934.13510798885708666.95e390d3-4778-4e6b-8dfa-1bd63d467671.e8096d29-4323-464a-a2fe-65a70d4d847c?w=580&amp;amp;h=326&amp;amp;q=60&amp;amp;mode=letterbox&amp;amp;background=black" alt="Token2Shell/MD">&lt;/p>
&lt;p>无论是 MSYS，MSYS2，Cygwin 中的 SSH 都是使用的 OpenSSH 方案，当然三者都是基于 cygwin 的兼容层实现的。&lt;/p>
&lt;h2 id="ssh-库">SSH 库&lt;/h2>
&lt;p>SSH 相应的库有多种实现，这里选择几个比较流行的实现：&lt;/p>
&lt;p>| Name | License | Language | Features | Who uses | WebSite |
|&amp;mdash;&amp;mdash;&amp;ndash;|&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-|&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;|&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-|&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;|
| libssh | LGPL | C C++ | Client Serer, Linux, Windows, Unix,BSD | Github | &lt;a href="https://www.libssh.org/">https://www.libssh.org/&lt;/a> |
| libssh2 | MIT | C | Client , Linux, Windows, Unix,BSD | libgit2 | &lt;a href="https://www.libssh2.org/">https://www.libssh2.org/&lt;/a> |
| ssh.net | Unknown | C# | Client , Windows | Posh-SSH |http://sshnet.codeplex.com |&lt;/p>
&lt;h2 id="关于-win32-openssh">关于 Win32-OpenSSH&lt;/h2>
&lt;p>Windows PowerShell 团队在 Github 上，fork 创建了 Windows 平台原生的 OpenSSH &lt;a href="github.com/PowerShell/Win32-OpenSSH">Win32-OpenSSH&lt;/a>，
在 Win32-OpenSSH 中，PowerShell 团队使用 IOCP， Win32 加密 API 来替代 OpenSSH 加密和网络方面的实现。这样一来，OpenSSH 在 Windows
上可以获得更优异的性能。&lt;/p>
&lt;h2 id="update">Update&lt;/h2>
&lt;p>14383 not found SSH Server Broker and SSH Server Proxy&lt;/p>
&lt;p>14385 Found&lt;/p>
&lt;p>14388 Not Found&lt;/p>
&lt;p>14390 Not Found&lt;/p>
&lt;p>14393 Red Stone Found&lt;/p>
&lt;h2 id="the-end-2018-07-14">The End (2018-07-14)&lt;/h2>
&lt;p>Windows 内置的 SSH 服务器主要用于 IOT(?) 目前已经删除，目前 Windows 可以安装经过微软官方移植的 OpenSSH 客户端。&lt;/p>
- https://forcemz.net/posts/2016/2016-06-04-windows-ssh-server/ - Copyright (c) 2009-2024 J23</description></item><item><title>Windows Containers 与 Project Centennial</title><link>https://forcemz.net/posts/2016/2016-04-23-windows-containers/</link><pubDate>Sat, 23 Apr 2016 18:30:00 +0800</pubDate><guid>https://forcemz.net/posts/2016/2016-04-23-windows-containers/</guid><description>Charlie's Rethinking https://forcemz.net/posts/2016/2016-04-23-windows-containers/ -&lt;h1 id="windows-containers-与-project-centennial">Windows Containers 与 Project Centennial&lt;/h1>
&lt;p>随着 Windows 10 Redstone 和 Windows Server 2016 发布日益临近,一些重要的功能也逐渐披露到公众面前。
最让笔者觉得有意思的是 Containers 功能。笔者曾经写过一篇关于应用程序降权的文章：
&lt;a href="http://forcemz.net/container/2015/06/12/AppContainer/">Windows AppContainer 降权，隔离与安全&lt;/a> ) 提到了
如何降低应用程序进程权限，与 Containers 相比，AppContainer 并未将进程与操作系统完全隔离开来，计算资源并不能自定义限制，
并且很多一部分 Win32 API 都无法在基于 AppContainer 创建的进程中运行。&lt;/p>
&lt;p>Microsoft 为了丰富 Windows Store 应用的数量, 推出了几类 App Convert, 将非 UWP App 移植到 UWP 平台上来，其中有
Win32/COM 的 Project Centennial 即 DesktopAppConveter, DesktopAppConverter 的实现依赖 Windows Containers。&lt;/p>
&lt;h2 id="win32-的窘迫">Win32 的窘迫&lt;/h2>
&lt;p>从 Windows 8 开始，Windows 推出了 Store App, Store App 运行在一个 AppContainer 中， 操作系统通过 AppContainer 技术
实现了进程权限的隔离，由于 UAC 的限制，App 无法访问大多数的文件系统目录，也不能进行一些重要的操作，许多系统对进程 UAC
权限存在依赖的 API 也无法被直接调用。一些系统的 Store App 只得依赖各种 Runtime Broker 通过 LPC 来实现重要的操作。&lt;/p>
&lt;p>对于 Store App 来说，使用全新的 API 和不同以往的安全策略，在 AppContainer 中运行恰到好处，而 Win32 App 同样可以运行在
AppContainer 中 (在以前的文章中，我曾经写过一个如何启动基于 Windows AppConatiner 的传统 Win32 应用程序：
，不过，依赖传统配置和文件系统的应用程序如若使用 AppConatiner ，大量的功能将无法使用，这就使得 Windows 面临
一个困境，经历二十多年的积累，Win32 应用的存量已经非常可观，然而 Win32 应用却无法在 Store 中运行，Store 中 App 稀少。&lt;/p>
&lt;p>对于传统桌面应用来说，使用虚拟机隔离又显得笨重，缓慢，使用 AppContainer 很多功能又无法直接使用，如果使用 Containers 技术，
那么是再好不过的选择了。&lt;/p>
&lt;p>另一方面，Windows 之前并没有一个官方的 Containers 技术，特别是随着 Azure 云服务的推出，微软迫切需要一个 Win32 的 Containers 技术。&lt;/p>
&lt;p>在 Windows 10 Redstone Insider 14316 中，只存在于 Windows Server 2016 TP 的 Containers 作为一个可选的功能被添加到了 企业版镜像中，
在 Windows 10 Redstone Insider 14328 中，Containers 被添加到专业版功能当中。笔者才有幸去了解其中的奥秘。&lt;/p>
&lt;p>在 Windows Containers 被推出之前，有个基于 Windows Job Object 的 Containers 方案是WinDocks。&lt;/p>
&lt;h2 id="containers-之前">Containers 之前&lt;/h2>
&lt;p>Windows 有一个重要的功能，即 Windows Job Object, 即 Windows 作业,作业可以将一组进程当作单个实体来处理，作业能够限制进程的 CPU 时间，
内存大小，以及 CPU 亲和性，在 Windows 平台上，有些沙箱应用就使用了作业，而 Visual Studio 在构建项目时使用了作业，当用户取消构建时，
作业中的进程都被终止，也就是多进程编译可以被终止。&lt;/p>
&lt;p>这其实也是与 Windows NT 的进程模型有关，NT 系统并未维护进程之间的父子关系，这与 POSIX 系统存在比较明显的区别。&lt;/p>
&lt;p>容器隔离的重点是文件系统的隔离，NTFS 是一种分层文件系统，支持符号链接和硬链接，这些是文件系统虚拟化的基石，在 Windows 64 发布之初，
Windows 便支持了文件系统的重定向，即 SysWOW64 ，对于运行在 Windows 64 位系统的 32 位应用程序，如果访问 System32 目录中的文件会被
定向到 SysWOW64 目录下，所以我们可以发现，32位应用在 64位系统打开的 cmd 也是32位的。&lt;/p>
&lt;p>Windows 还可以通过卷挂载，软链接等策略是先文件系统的虚拟化和隔离，为了兼容 XP 以前的应用程序，Windows 创建了 C:\User 的软链接
C:\Documents and Settings 。&lt;/p>
&lt;p>从 Office 2013 起，Office 的安装采用 VFS 机制安装，目录 C:\Program Files\Microsoft Office\root\VFS 目录便是 VFS 的 C:\，
而 DesktopAppConverter 多少是吸收了 Office 的经验的。&lt;/p>
&lt;p>在 Windows 中，注册表的重要性不言而喻，与 Linux containers 一样，配置文件的隔离一样是非常重要的，Windows 注册表内部存储表现为储巢（Hive）,
注册表存储时并不是一个巨大的，单一的文件，而是分布在不同目录的配置文件，操作系统只需要单独挂载特定的注册表数据就可以实现注册表的隔离。&lt;/p>
&lt;p>注册表 Hive List:&lt;/p>
&lt;blockquote>
&lt;p>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\hivelist&lt;/p>
&lt;/blockquote>
&lt;p>重定向 hive&lt;/p>
&lt;blockquote>
&lt;p>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\hiveredirectionlist&lt;/p>
&lt;/blockquote>
&lt;p>关于注册表，运行在64位系统中的32位应用程序访问注册表时，默认情况下会被定位到 WOW6432Node 键下。&lt;/p>
&lt;h2 id="windows-containers-窥视">Windows Containers 窥视&lt;/h2>
&lt;p>Windows 大多数功能通过动态链接库提供，也就是通常说的 dll, 我们可以使用 &lt;a href="http://www.dependencywalker.com/">Dependency Walker&lt;/a> 去了解
这些 dll 的导入导入函数，从而观察到 dll 主要的功能。也可以使用 IDA Pro 之类的专业工具。&lt;/p>
&lt;p>Windows Containers 相关的 dll 有 container.dll container_xml.dll CCG.dll 其中 container.dll 实现了容器的创建，运行，修改，和删除等功能。
从附注中我们可以发现，container 主要是 C++ 实现，然后使用 C 导出 API 函数。&lt;/p>
&lt;p>我们可以推测 WcCreateContainers 的原型&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">BOOL&lt;/span> &lt;span style="color:#58a1dd">WINAPI&lt;/span> &lt;span style="color:#58a1dd">WcCreateContainers&lt;/span>(&lt;span style="color:#58a1dd">LPHANDLE&lt;/span> &lt;span style="color:#58a1dd">lppContainer&lt;/span>,&lt;span style="color:#58a1dd">LPCWSTR&lt;/span> &lt;span style="color:#58a1dd">destName&lt;/span>,&lt;span style="color:#58a1dd">BOOL&lt;/span> &lt;span style="color:#58a1dd">flags&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在 C:\Windows\System32\containers 目录下，有关 Windows Object (通常是 HANDLE) 对象的重定向&lt;/p>
&lt;p>而 CCG.exe CCGLaunchPad.dll 则是 Windows Container Credential Guard Server&lt;/p>
&lt;p>在 WOW64 系统中，同样存在 Container.dll ，说明 Container 技术在 Win32 中是存在的。&lt;/p>
&lt;h2 id="附注">附注&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>/// container.dll Import function
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Address Ordinal Name Library
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>------- ------- ---- -------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A000 FilterConnectCommunicationPort FLTLIB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A004 FilterLoad FLTLIB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A008 FilterSendMessage FLTLIB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A00C FilterDetach FLTLIB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A010 FilterAttach FLTLIB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A018 CreateCompartment IPHLPAPI
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A01C DeleteCompartment IPHLPAPI
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A020 InitializeCompartmentEntry IPHLPAPI
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A024 SetJobCompartmentId IPHLPAPI
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A028 GetJobCompartmentId IPHLPAPI
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A030 UuidToStringW RPCRT4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A034 RpcStringFreeW RPCRT4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A03C IsDebuggerPresent api-ms-win-core-debug-l1-1-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A040 OutputDebugStringW api-ms-win-core-debug-l1-1-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A048 UnhandledExceptionFilter api-ms-win-core-errorhandling-l1-1-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A04C SetUnhandledExceptionFilter api-ms-win-core-errorhandling-l1-1-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A050 SetLastError api-ms-win-core-errorhandling-l1-1-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A054 GetLastError api-ms-win-core-errorhandling-l1-1-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A05C GetVolumePathNameW api-ms-win-core-file-l1-2-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A060 CreateFileW api-ms-win-core-file-l1-2-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A064 GetVolumeNameForVolumeMountPointW api-ms-win-core-file-l1-2-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A06C CloseHandle api-ms-win-core-handle-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A074 HeapAlloc api-ms-win-core-heap-l1-2-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A078 GetProcessHeap api-ms-win-core-heap-l1-2-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A07C HeapFree api-ms-win-core-heap-l1-2-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A084 InitializeSListHead api-ms-win-core-interlocked-l1-2-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A08C DeviceIoControl api-ms-win-core-io-l1-1-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A094 GetModuleFileNameA api-ms-win-core-libraryloader-l1-2-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A098 GetModuleHandleExW api-ms-win-core-libraryloader-l1-2-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A0A0 FormatMessageW api-ms-win-core-localization-l1-2-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A0A8 ExpandEnvironmentStringsW api-ms-win-core-processenvironment-l1-2-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A0B0 GetCurrentThreadId api-ms-win-core-processthreads-l1-1-2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A0B4 ResumeThread api-ms-win-core-processthreads-l1-1-2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A0B8 GetCurrentProcessId api-ms-win-core-processthreads-l1-1-2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A0BC CreateProcessAsUserW api-ms-win-core-processthreads-l1-1-2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A0C0 OpenProcessToken api-ms-win-core-processthreads-l1-1-2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A0C4 TerminateProcess api-ms-win-core-processthreads-l1-1-2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A0C8 IsProcessorFeaturePresent api-ms-win-core-processthreads-l1-1-2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A0CC CreateProcessW api-ms-win-core-processthreads-l1-1-2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A0D0 GetCurrentProcess api-ms-win-core-processthreads-l1-1-2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A0D8 QueryPerformanceCounter api-ms-win-core-profile-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A0E0 RegGetValueW api-ms-win-core-registry-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A0E4 RegCloseKey api-ms-win-core-registry-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A0E8 RegQueryValueExW api-ms-win-core-registry-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A0F0 RegOpenKeyW api-ms-win-core-registry-l2-2-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A0F8 PathFileExistsW api-ms-win-core-shlwapi-legacy-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A100 AcquireSRWLockExclusive api-ms-win-core-synch-l1-2-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A104 ReleaseSRWLockExclusive api-ms-win-core-synch-l1-2-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A10C GetSystemTimeAsFileTime api-ms-win-core-sysinfo-l1-2-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A110 GetWindowsDirectoryW api-ms-win-core-sysinfo-l1-2-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A118 VerQueryValueW api-ms-win-core-version-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A120 GetFileVersionInfoW api-ms-win-core-version-l1-1-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A124 GetFileVersionInfoSizeW api-ms-win-core-version-l1-1-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A12C _o___std_exception_copy api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A130 _o___std_exception_destroy api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A134 _o___std_type_info_destroy_list api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A138 _o___std_type_info_name api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A13C _o___stdio_common_vsnprintf_s api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A140 _o___stdio_common_vswprintf api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A144 _o__callnewh api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A148 _o__cexit api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A14C _o__configure_narrow_argv api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A150 _o__crt_atexit api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A154 _o__errno api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A158 _o__execute_onexit_table api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A15C _o__initialize_narrow_environment api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A160 _o__initialize_onexit_table api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A164 _o__invalid_parameter_noinfo api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A168 _o__invalid_parameter_noinfo_noreturn api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A16C memmove api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A170 _o__purecall api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A174 memcpy api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A178 _o__register_onexit_function api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A17C _o__seh_filter_dll api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A180 _o__wcsicmp api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A184 _o_calloc api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A188 _o_free api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A18C _o_iswalnum api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A190 _o_malloc api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A194 _o_memset api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A198 _o_terminate api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A19C _o_wcscpy_s api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A1A0 _except_handler4_common api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A1A4 _CxxThrowException api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A1A8 __CxxFrameHandler3 api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A1AC __std_terminate api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A1B0 __RTDynamicCast api-ms-win-crt-private-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A1B8 _initterm api-ms-win-crt-runtime-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A1BC _initterm_e api-ms-win-crt-runtime-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A1C4 wcsncmp api-ms-win-crt-string-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A1CC EventActivityIdControl api-ms-win-eventing-provider-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A1D0 EventSetInformation api-ms-win-eventing-provider-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A1D4 EventUnregister api-ms-win-eventing-provider-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A1D8 EventWriteTransfer api-ms-win-eventing-provider-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A1DC EventRegister api-ms-win-eventing-provider-l1-1-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A1E4 SetTokenInformation api-ms-win-security-base-l1-2-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A1E8 DuplicateTokenEx api-ms-win-security-base-l1-2-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A1F0 ?gbump@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IAEXH@Z msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A1F4 ?pbump@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IAEXH@Z msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A1F8 ??0?$basic_ios@GU?$char_traits@G@std@@@std@@IAE@XZ msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A1FC ??0?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@PAV?$basic_streambuf@GU?$char_traits@G@std@@@1@_N@Z msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A200 ?_Osfx@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAEXXZ msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A204 ?flush@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAEAAV12@XZ msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A208 ??1?$basic_ios@GU?$char_traits@G@std@@@std@@UAE@XZ msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A20C ?sputn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QAE_JPBG_J@Z msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A210 ?setstate@?$basic_ios@GU?$char_traits@G@std@@@std@@QAEXH_N@Z msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A214 ?id@?$ctype@G@std@@2V0locale@2@A msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A218 ?_BADOFF@std@@3_JB msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A21C ?uncaught_exception@std@@YA_NXZ msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A220 ?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A224 ??0_Lockit@std@@QAE@H@Z msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A228 ??1_Lockit@std@@QAE@XZ msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A22C ?_Syserror_map@std@@YAPBDH@Z msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A230 ?_Xlength_error@std@@YAXPBD@Z msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A234 ?_Winerror_map@std@@YAHH@Z msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A238 ?_Xbad_function_call@std@@YAXXZ msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A23C ??6?$basic_ostream@GU?$char_traits@G@std@@@std@@QAEAAV01@H@Z msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A240 ??6?$basic_ostream@GU?$char_traits@G@std@@@std@@QAEAAV01@J@Z msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A244 ?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A248 ??Bid@locale@std@@QAEIXZ msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A24C ??0?$basic_streambuf@GU?$char_traits@G@std@@@std@@IAE@XZ msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A250 ?widen@?$ctype@G@std@@QBEGD@Z msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A254 ?_Getcat@?$ctype@G@std@@SAIPAPBVfacet@locale@2@PBV42@@Z msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A258 ?_Xbad_alloc@std@@YAXXZ msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A25C ?getloc@ios_base@std@@QBE?AVlocale@2@XZ msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A260 ??6?$basic_ostream@GU?$char_traits@G@std@@@std@@QAEAAV01@K@Z msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A264 ?_Xout_of_range@std@@YAXPBD@Z msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A268 ?_Winerror_message@std@@YAKKPADK@Z msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A26C ??6?$basic_ostream@GU?$char_traits@G@std@@@std@@QAEAAV01@I@Z msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A270 ??6?$basic_ostream@GU?$char_traits@G@std@@@std@@QAEAAV01@P6AAAVios_base@1@AAV21@@Z@Z msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A274 ??1?$basic_ostream@GU?$char_traits@G@std@@@std@@UAE@XZ msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A278 ?imbue@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEXABVlocale@2@@Z msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A27C ?sync@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEHXZ msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A280 ?setbuf@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEPAV12@PAG_J@Z msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A284 ?xsputn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAE_JPBG_J@Z msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A288 ?xsgetn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAE_JPAG_J@Z msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A28C ?uflow@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEGXZ msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A290 ?showmanyc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAE_JXZ msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A294 ?_Unlock@?$basic_streambuf@GU?$char_traits@G@std@@@std@@UAEXXZ msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A298 ?_Lock@?$basic_streambuf@GU?$char_traits@G@std@@@std@@UAEXXZ msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A29C ?sputc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QAEGG@Z msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A2A0 ??1?$basic_streambuf@GU?$char_traits@G@std@@@std@@UAE@XZ msvcp_win
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A2A8 RtlNtStatusToDosErrorNoTeb ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A2AC NtSetInformationJobObject ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A2B0 NtQueryInformationJobObject ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A2B4 NtAssignProcessToJobObject ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A2B8 NtOpenSymbolicLinkObject ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A2BC NtQuerySymbolicLinkObject ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A2C0 RtlInitUnicodeString ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A2C4 NtCreateFile ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A2C8 NtQuerySecurityObject ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A2CC TpWaitForJobNotification ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A2D0 TpAllocJobNotification ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A2D4 TpReleaseJobNotification ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A2D8 NtSaveKeyEx ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A2DC RtlStringFromGUIDEx ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A2E0 NtSetValueKey ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A2E4 NtCreateKey ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A2E8 NtLoadKeyEx ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A2EC NtUnloadKey2 ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A2F0 NtOpenKey ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A2F4 NtEnumerateKey ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A2F8 NtDeleteKey ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A2FC RtlConnectToSm ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A300 RtlSendMsgToSm ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A304 NtOpenSection ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A308 NtMakeTemporaryObject ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A30C NtCreateSymbolicLinkObject ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A310 NtQueryDirectoryObject ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A314 NtOpenDirectoryObject ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A318 NtSetInformationSymbolicLink ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A31C NtOpenSemaphore ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A320 NtOpenEvent ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A324 NtCreateDirectoryObjectEx ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A328 NtOpenMutant ntdll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>000000001002A32C NtOpenFile ntdll
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>以下是 container.dll 和 containerxml.dll 的导出函数&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>// container.dll from IDA Pro
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Name Address Ordinal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---- ------- ----+++
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::ContainerDescription::ContainerDescription(void) 0000000010006300 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Node::~Node(void) 0000000010011B90 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Filesystem::AccessMask(uint) 0000000010007210 3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry2::AccessMask(uint) 0000000010008280 4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::AccessMask(uint) 0000000010007A20 5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::AddRuntimeVirtualKeysToContainer(void *,ulong,_WC_VKEY_INFO *) 000000001000D590 6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::Alias(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010007A60 7
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::CleanupContainer(void *,ushort const *) 000000001000C2C0 8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::ContainerDescription::Clear(void) 00000000100063C0 9
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::ObjectManager::CloneSd(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010007880 10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::CloneSd(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010007AA0 11
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Setup::CloneSd(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 00000000100085C0 12
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Network::Compartment(void) 0000000010007850 13
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry2::ContainerPath(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 00000000100082C0 14
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::CopyOnWritePolicy(void) 0000000010007BD0 15
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Job::Cpu(void) 00000000100076B0 16
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::CreateContainer(void *,container::ContainerDescription const &amp;amp;,bool) 000000001000C410 17
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::Data(std::vector&amp;lt;uchar,std::allocator&amp;lt;uchar&amp;gt;&amp;gt; const &amp;amp;) 0000000010007B20 18
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::Data(ulong) 0000000010007AE0 19
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::Data(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010007B70 20
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Setup::Data(ulong) 0000000010008600 21
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Setup::Data(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010008640 22
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Filesystem::DeleteSemantics(bool) 0000000010007250 23
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::DeleteSemantics(bool) 0000000010007C00 24
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::ObjectManager::Dir(void) 00000000100078C0 25
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Filesystem::Directives(void) 0000000010007290 26
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::Directives(void) 0000000010007BB0 27
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Filesystem::Directory(void) 00000000100072B0 28
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Filesystem::File(void) 00000000100072D0 29
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry2::FilePath(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010008440 30
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::Flags(uint) 0000000010007C30 31
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::GetComRegistryRoot(void *) 000000001000D480 32
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::GetContainerIdentifierString(void *) 000000001000D7B0 33
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::GetContainerObjectRootPath(void *,std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt; &amp;amp;) 000000001000D8C0 34
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::GetCurrentVolume(void) 000000001000CCD0 35
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::GetRegistryRootPath(void *,std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt; const &amp;amp;,std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt; &amp;amp;) 000000001000D840 36
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry2::Hive(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 00000000100083A0 37
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry2::HiveStack(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010008340 38
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry2::HiveStack(void) 0000000010008380 39
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry2::HostHive(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010008400 40
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry2::HostPath(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010008300 41
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Filesystem2::Identifier(_GUID) 00000000100075C0 42
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry2::Identifier(_GUID) 0000000010008480 43
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::IsContainerQuiescent(void *) 000000001000CC20 44
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Filesystem::Junction(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 00000000100072F0 45
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::Junction(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010007D00 46
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry2::Key(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010008540 47
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::Key(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010007D60 48
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::Key(void) 0000000010007D40 49
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::LaunchApplicationContainer(void *,ushort const *) 000000001000CD20 50
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::LaunchContainer(void *,void *) 000000001000D1C0 51
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Filesystem2::Layer(void) 0000000010007620 52
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry2::Layer(void) 00000000100083E0 53
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Job::Limit(unsigned __int64) 00000000100076E0 54
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::LinkHive(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010007DA0 55
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::Load(void) 0000000010007DE0 56
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::LogException(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt; const &amp;amp;,std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt; const &amp;amp;,ulong,long) 000000001000E2C0 57
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Job::Memory(void) 0000000010007720 58
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Filesystem::Merge(void) 0000000010007330 59
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::Merge(void) 0000000010007E00 60
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Setup::MkDir(void) 00000000100088C0 61
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Setup::MkHiv(void) 00000000100088E0 62
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::MkKey(void) 0000000010007E20 63
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Setup::MkKey(void) 0000000010008900 64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::MkValue(void) 0000000010007E40 65
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Setup::MkValue(void) 0000000010008920 66
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::MultiDelimitedStringData(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010007E60 67
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Setup::MultiDelimitedStringData(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010008720 68
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::MultiStringData(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010008000 69
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Setup::MultiStringData(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010008680 70
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Filesystem::Name(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010007350 71
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::ObjectManager::Name(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 00000000100078F0 72
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::Name(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 00000000100080A0 73
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Setup::Name(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010008940 74
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Filesystem2::Path(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010007650 75
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Filesystem::Path(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010007390 76
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::ObjectManager::Path(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010007930 77
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::Path(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 00000000100080E0 78
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Filesystem::Permit(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 00000000100073D0 79
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::Permit(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010008120 80
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Job::Rate(uint) 0000000010007750 81
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry2::ReadOnly(bool) 00000000100084E0 82
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::ReadOnly(bool) 0000000010008160 83
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry2::RedirectionNode(void) 0000000010008260 84
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::RegisterForContainerTerminationNotification(void *,void (*)(void *,_WC_CONTAINER_TERMINATION_REASON,_WC_CONTAINER_NOTIFICATION *,void *),void *) 000000001001B960 85
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::ReleaseContainerTerminationNotification(_WC_CONTAINER_NOTIFICATION *) 000000001001BA60 86
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::RemoveRuntimeVirtualKeysFromContainer(void *,ulong,_WC_VKEY_INFO *) 000000001000D7A0 87
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::ObjectManager::Scope(container::ObjectManager::SymlinkScope) 00000000100079B0 88
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::SelectChildren(container::Node const &amp;amp;,bool,bool) 0000000010011C20 89
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::SetRegistryFlushState(void *,uchar) 000000001000D340 90
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::ObjectManager::ShadowDirectory(container::ObjectManager::ShadowOption) 0000000010007970 91
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Filesystem::ShortName(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010007410 92
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Filesystem::Suppress(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010007540 93
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::Suppress(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010008190 94
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::ObjectManager::Symlink(void) 00000000100079F0 95
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry2::Symlink(void) 0000000010008520 96
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::Symlink(void) 00000000100081D0 97
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry2::Target(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010008580 98
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::Target(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 00000000100081F0 99
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::ThrowIfBasePackageHostMismatch(_WC_PACKAGE_LAYER *,ulong) 000000001000CAE0 100
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Registry::TransactionsDisabled(bool) 0000000010008230 101
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Visit(container::Node const &amp;amp;,std::function&amp;lt;bool (container::Node const &amp;amp;,int)&amp;gt;,int) 0000000010011CB0 102
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Filesystem::Volume(std::basic_string&amp;lt;ushort,std::char_traits&amp;lt;ushort&amp;gt;,std::allocator&amp;lt;ushort&amp;gt;&amp;gt;) 0000000010007580 103
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::WaitForContainerTerminationNotification(_WC_CONTAINER_NOTIFICATION *) 000000001001BB90 104
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>container::Job::Weight(uint) 00000000100077D0 105
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WcAddRuntimeVirtualKeysToContainer(x,x,x) 000000001000C1D0 106
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WcCleanupContainer(x,x) 000000001000C050 107
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WcCreateContainer(x,x,x) 000000001000C090 108
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WcGetComRegistryRoot(x,x) 000000001000C230 109
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WcIsContainerQuiescent(x,x) 000000001000C0F0 110
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WcLaunchApplicationContainer(x,x,x) 000000001000C140 111
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WcLaunchContainer(x,x) 000000001000C190 112
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WcRegisterForContainerTerminationNotification(x,x,x,x) 000000001001B8D0 113
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WcReleaseContainerTerminationNotification(x) 000000001001B920 114
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WcRemoveRuntimeVirtualKeysFromContainer(x,x,x) 000000001000C220 115
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WcSetRegistryFlushState(x,x) 000000001000C280 116
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WcWaitForContainerTerminationNotification(x) 000000001001B940 117
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DllEntryPoint 000000001001CD60
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>// container_xml.dll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>void container::CreateDescriptionFromXml(void *,unsigned short const * *,unsigned long,bool,class std::basic_string&amp;lt;unsigned short,struct std::char_traits&amp;lt;unsigned short&amp;gt;,class std::allocator&amp;lt;unsigned short&amp;gt; &amp;gt; const &amp;amp;,struct _WC_PACKAGE_LAYER *,unsigned long,class container::ContainerDescription &amp;amp;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>void container::xml::ReadFromXml(class std::basic_string&amp;lt;unsigned short,struct std::char_traits&amp;lt;unsigned short&amp;gt;,class std::allocator&amp;lt;unsigned short&amp;gt; &amp;gt; const &amp;amp;,bool,class container::xml::Listener *)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WcCreateDescriptionFromXml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WcDestroyDescription
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>//CCGLaunchPad.dll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CCGInitialize
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CCGLaunch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CCGTeardown
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>默认情况下， wchar_t 在 Visual C++ 中是一种内置类型，std::wstring CharT 类型为 wchar_t,而在这些导出符号中，则是 unsigned short 。&lt;/p>
&lt;h2 id="resources">Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://windocks.com/blog-2/docker-windows">WinDocks&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://msdn.microsoft.com/en-us/virtualization/windowscontainers/containers_welcome">Windows Containers Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://channel9.msdn.com/Blogs/Regular-IT-Guy/Quick-Nano-Server-PXE-boot-demo/player">Quick Nano Server PXE boot demo&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://research.microsoft.com/pubs/141071/asplos2011-drawbridge.pdf">Library OS PDF&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/oscarlab/graphene">Graphene Library OS - Github&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://azure.microsoft.com/en-us/blog/containers-docker-windows-and-trends/">Containers: Docker, Windows and Trends&lt;/a>&lt;/li>
&lt;/ul>
- https://forcemz.net/posts/2016/2016-04-23-windows-containers/ - Copyright (c) 2009-2024 J23</description></item></channel></rss>