<?xml-stylesheet href="/rss.xsl" type="text/xsl"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Charlie's Rethinking</title><link>https://forcemz.net/</link><description>Recent content on Charlie's Rethinking</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>Copyright (c) 2009-2024 J23</copyright><lastBuildDate>Mon, 01 Apr 2024 20:00:00 +0800</lastBuildDate><atom:link href="https://forcemz.net/index.xml" rel="self" type="application/rss+xml"/><item><title>基于清单的启动器的实现</title><link>https://forcemz.net/posts/2015/2015-11-27-new-launcher/</link><pubDate>Fri, 27 Nov 2015 21:30:16 +0800</pubDate><guid>https://forcemz.net/posts/2015/2015-11-27-new-launcher/</guid><description>Charlie's Rethinking https://forcemz.net/posts/2015/2015-11-27-new-launcher/ -&lt;h1 id="launcher">Launcher&lt;/h1>
&lt;p>Launcher (启动器) 是一类非常有用的工具，这类工具的意义就在于设置好特定的环境以特定的参数启动特定的进程。
很多软件也用到了 launcher, 比如 Chrome，还有 Android Studio, 在 Windows 平台上，可见的是 studio.exe,
事实上，Android Studio 是基于 Intellij IDEA 开发的，IDE 代码是基于 Java 的，所谓的 studio.exe 其实就是个启动器，加载 jvm.dll 罢了。
IDEA WinLauncher 在 Github 上可以看到源码： &lt;a href="https://github.com/JetBrains/intellij-community/tree/master/native/WinLauncher">WinLauncher&lt;/a> &lt;br>
Manifest 清单是一类记录程序运行需求的文件，比如 Chrome 就有启动清单：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">&amp;lt;Application&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;VisualElements&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DisplayName=&lt;/span>&lt;span style="color:#a6be9d">&amp;#39;Google Chrome&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Logo=&lt;/span>&lt;span style="color:#a6be9d">&amp;#39;46.0.2490.80\VisualElements\Logo.png&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">SmallLogo=&lt;/span>&lt;span style="color:#a6be9d">&amp;#39;46.0.2490.80\VisualElements\SmallLogo.png&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ForegroundText=&lt;/span>&lt;span style="color:#a6be9d">&amp;#39;light&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BackgroundColor=&lt;/span>&lt;span style="color:#a6be9d">&amp;#39;#323232&amp;#39;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;DefaultTile&lt;/span> &lt;span style="color:#58a1dd">ShowName=&lt;/span>&lt;span style="color:#a6be9d">&amp;#39;allLogos&amp;#39;&lt;/span>&lt;span style="color:#58a1dd">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;SplashScreen&lt;/span> &lt;span style="color:#58a1dd">Image=&lt;/span>&lt;span style="color:#a6be9d">&amp;#39;46.0.2490.80\VisualElements\splash-620x300.png&amp;#39;&lt;/span>&lt;span style="color:#58a1dd">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/VisualElements&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">&amp;lt;/Application&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Chrome 的清单主要是设置了启动画面以及 Logo 信息。&lt;/p>
&lt;p>从 Windows XP 开启，Windows 引入了 manifest 文件，格式基于 XML,记录了一些 依赖组件，隔离信息等，比如下面的一个清单，
requestedPrivileges 表示运行的权限，asInvoker 表示同父进程一样，如果是 requireAdministrator，如果父进程不是管理员则需触发 UAC 提权。
而 dpiAware 则是 DPI 缩放所需，实际上很多 Windows 应用开发商对这个一无所知。assemblyIdentity 则是一些依赖组件的信息了，
这里要求一些基本的控件，如 MessageBox Button, Edit, Combbox 等需要支持 Vista 以后的风格。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34; standalone=&amp;#34;yes&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">&amp;lt;assembly&lt;/span> &lt;span style="color:#58a1dd">xmlns=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;urn:schemas-microsoft-com:asm.v1&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">manifestVersion=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;1.0&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;noInherit&amp;gt;&amp;lt;/noInherit&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;assemblyIdentity&lt;/span> &lt;span style="color:#58a1dd">processorArchitecture=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;*&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">type=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;win32&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">name=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;Force.Charlie.OSChina.Robot&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">version=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;1.0.0.0&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&amp;lt;/assemblyIdentity&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;description&amp;gt;&lt;/span>Robot&lt;span style="color:#58a1dd">&amp;lt;/description&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;trustInfo&lt;/span> &lt;span style="color:#58a1dd">xmlns=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;urn:schemas-microsoft-com:asm.v3&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;security&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;requestedPrivileges&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;requestedExecutionLevel&lt;/span> &lt;span style="color:#58a1dd">level=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;asInvoker&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">uiAccess=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;false&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&amp;lt;/requestedExecutionLevel&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/requestedPrivileges&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/security&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/trustInfo&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;asmv3:application&lt;/span> &lt;span style="color:#58a1dd">xmlns:asmv3=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;urn:schemas-microsoft-com:asm.v3&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;asmv3:windowsSettings&lt;/span> &lt;span style="color:#58a1dd">xmlns=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;http://schemas.microsoft.com/SMI/2005/WindowsSettings&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;dpiAware&amp;gt;&lt;/span>true&lt;span style="color:#58a1dd">&amp;lt;/dpiAware&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/asmv3:windowsSettings&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/asmv3:application&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;dependency&lt;/span> &lt;span style="color:#58a1dd">optional=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;yes&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;dependentAssembly&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;assemblyIdentity&lt;/span> &lt;span style="color:#58a1dd">type=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;win32&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">name=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;Microsoft.Windows.Common-Controls&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">version=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;6.0.1.0&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">publicKeyToken=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;6595b64144ccf1df&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">language=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;*&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">processorArchitecture=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;*&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&amp;lt;/assemblyIdentity&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/dependentAssembly&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;compatibility&lt;/span> &lt;span style="color:#58a1dd">xmlns=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;urn:schemas-microsoft-com:compatibility.v1&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;application&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;!--The ID below indicates application support for Windows 7 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;supportedOS&lt;/span> &lt;span style="color:#58a1dd">Id=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;{35138b9a-5d96-4fbd-8e2d-a2440225f93a}&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&amp;lt;/supportedOS&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/application&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/compatibility&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">&amp;lt;/assembly&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>还有 .NET 应用程序，常常带有 app.exe.config 这类应该说是混合清单了，.config 文件除了保留了清单功能，（比如这里有指定 .NET 版本）
还支持配置信息，应用程序可以通过 ConfigurationManager 读取配置信息。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&amp;lt;?xml version =&amp;#34;1.0&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">&amp;lt;configuration&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;!--
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic"> Mixed mode assemblies (C++/CLI) will not load into a newer CLR by default. Expression disables this
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic"> so user projects can load when they have mixed mode dependencies that target older frameworks.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic"> --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;startup&lt;/span> &lt;span style="color:#58a1dd">useLegacyV2RuntimeActivationPolicy=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;supportedRuntime&lt;/span> &lt;span style="color:#58a1dd">version=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;v4.0&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">sku=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;.NETFramework,Version=v4.5&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/startup&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;runtime&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;designerNamespaceResolution&lt;/span> &lt;span style="color:#58a1dd">enabled=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;assemblyBinding&lt;/span> &lt;span style="color:#58a1dd">xmlns=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;urn:schemas-microsoft-com:asm.v1&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;probing&lt;/span> &lt;span style="color:#58a1dd">privatePath=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;PublicAssemblies;PrivateAssemblies&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/assemblyBinding&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/runtime&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">&amp;lt;/configuration&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://msdn.microsoft.com/zh-cn/library/system.configuration.configurationmanager">ConfigurationManager&lt;/a> &lt;br>
&lt;a href="http://blogs.msdn.com/b/aspnetue/archive/2008/10/02/system-configuration-configurationmanager-source-c.aspx">Using System.Configuration.ConfigurationManager Example (C#)&lt;/a>&lt;/p>
&lt;h2 id="ld-补全的-launcher">LD 补全的 Launcher&lt;/h2>
&lt;p>一般而言，Linux 进程依赖的 so 文件，如果不是通过 dlopen 动态加载的，都需要放到默认的 library 目录，也就是 /usr/lib, /usr/local/lib,
或者是通过 export 命令设置 LD PATH，然后从 Shell 或 Shell 脚本启动进程。&lt;/p>
&lt;blockquote>
&lt;p>export LD_LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/lib&lt;/p>
&lt;/blockquote>
&lt;p>比如 google chrome , p4merge 等大多是写一个 launcher 脚本。新的启动器基于 C++ 实现，使用 TOML 格式文件作为清单文件。&lt;/p>
&lt;h3 id="toml-格式清单">TOML 格式清单&lt;/h3>
&lt;p>TOML (Tom&amp;rsquo;s Obvious, Minimal Language) 是 Github 联合创始人 Tom Preston-Werner 设计的一种极简的配置文件，格式类似于 ini, 但比 ini 严格，
支持整数，浮点，字符串，数组，布尔值，表格，时间日期。解析起来非常方便。主页 &lt;a href="https://github.com/toml-lang/toml">Github TOML&lt;/a>&lt;/p>
&lt;p>TOML 格式清单如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#launcher.manifest&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic"># OWNERDIR is process image directory&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#58a1dd">Launcher&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">LibraryPath&lt;/span>=&lt;span style="color:#a6be9d">&amp;#34;/opt/boost/lib&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">Path&lt;/span>=&lt;span style="color:#a6be9d">&amp;#34;${OWNERDIR}/../bin&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">Binary&lt;/span>=&lt;span style="color:#a6be9d">&amp;#34;launcher_child&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里只设置了 LibraryPath Path Binary 。&lt;/p>
&lt;h3 id="清单的环境变量解析">清单的环境变量解析&lt;/h3>
&lt;p>在上面的清单中，Path=&amp;quot;${OWNERDIR}/../bin&amp;quot;, 这需要解析，OWNERDIR 代表一个环境变量，这里是内置的，表示程序 launcher 自身的目录。
环境变量的解析如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">**/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;unordered_map&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">GetProcessImageFilePath&lt;/span>(&lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">buffer&lt;/span>, &lt;span style="color:#58a1dd">size_t&lt;/span> &lt;span style="color:#58a1dd">bufSize&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">sz&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">readlink&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;/proc/self/exe&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">buffer&lt;/span>, &lt;span style="color:#58a1dd">bufSize&lt;/span> &lt;span style="color:#ff636f">-&lt;/span> &lt;span style="color:#a6be9d">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">sz&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">buffer&lt;/span>[&lt;span style="color:#58a1dd">sz&lt;/span>] &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">GetProcessImageFileFolder&lt;/span>(&lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">buffer&lt;/span>, &lt;span style="color:#58a1dd">size_t&lt;/span> &lt;span style="color:#58a1dd">bufSize&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">sz&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">readlink&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;/proc/self/exe&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">buffer&lt;/span>, &lt;span style="color:#58a1dd">bufSize&lt;/span> &lt;span style="color:#ff636f">-&lt;/span> &lt;span style="color:#a6be9d">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">sz&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">buffer&lt;/span>[&lt;span style="color:#58a1dd">sz&lt;/span>] &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">while&lt;/span> (&lt;span style="color:#ff636f">--&lt;/span>&lt;span style="color:#58a1dd">sz&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">buffer&lt;/span>[&lt;span style="color:#58a1dd">sz&lt;/span>] &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#a6be9d">&amp;#39;/&amp;#39;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">sz&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">buffer&lt;/span>[&lt;span style="color:#a6be9d">1&lt;/span>] &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">buffer&lt;/span>[&lt;span style="color:#58a1dd">sz&lt;/span>] &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">buffer&lt;/span>[&lt;span style="color:#a6be9d">1&lt;/span>] &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">* Match Resolve and Replace profile support environment value
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">enum&lt;/span> &lt;span style="color:#58a1dd">KEnvStateMachine&lt;/span> &lt;span style="color:#ff636f">:&lt;/span> &lt;span style="color:#ff636f">int&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">kClearReset&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">kEscapeAllow&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">kMarkAllow&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">2&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">kBlockBegin&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">3&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">kBlockEnd&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">class&lt;/span> &lt;span style="color:#58a1dd">EnvironmentValues&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">private&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">unordered_map&lt;/span>&lt;span style="color:#ff636f">&amp;lt;&lt;/span>&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span>, &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span>&lt;span style="color:#ff636f">&amp;gt;&lt;/span> &lt;span style="color:#58a1dd">ev&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">EnvironmentValues&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#58a1dd">buffer&lt;/span>[&lt;span style="color:#a6be9d">4096&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">GetProcessImageFileFolder&lt;/span>(&lt;span style="color:#58a1dd">buffer&lt;/span>, &lt;span style="color:#a6be9d">4096&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ev&lt;/span>.&lt;span style="color:#58a1dd">insert&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">pair&lt;/span>&lt;span style="color:#ff636f">&amp;lt;&lt;/span>&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span>, &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span>&lt;span style="color:#ff636f">&amp;gt;&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;OWNERDIR&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span>(&lt;span style="color:#58a1dd">buffer&lt;/span>)));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ev&lt;/span>.&lt;span style="color:#58a1dd">insert&lt;/span>(&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">pair&lt;/span>&lt;span style="color:#ff636f">&amp;lt;&lt;/span>&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span>, &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span>&lt;span style="color:#ff636f">&amp;gt;&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;SEPARATOR&amp;#34;&lt;/span>, &lt;span style="color:#a6be9d">&amp;#34;/&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ev&lt;/span>.&lt;span style="color:#58a1dd">insert&lt;/span>(&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">pair&lt;/span>&lt;span style="color:#ff636f">&amp;lt;&lt;/span>&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span>, &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span>&lt;span style="color:#ff636f">&amp;gt;&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;TMP&amp;#34;&lt;/span>, &lt;span style="color:#a6be9d">&amp;#34;/tmp&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">public&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">Push&lt;/span>(&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#58a1dd">key&lt;/span>, &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#58a1dd">value&lt;/span>, &lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">over&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">over&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">ev&lt;/span>.&lt;span style="color:#58a1dd">find&lt;/span>(&lt;span style="color:#58a1dd">key&lt;/span>) &lt;span style="color:#ff636f">!=&lt;/span> &lt;span style="color:#58a1dd">ev&lt;/span>.&lt;span style="color:#58a1dd">end&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ev&lt;/span>.&lt;span style="color:#58a1dd">insert&lt;/span>(&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">pair&lt;/span>&lt;span style="color:#ff636f">&amp;lt;&lt;/span>&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span>, &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span>&lt;span style="color:#ff636f">&amp;gt;&lt;/span>(&lt;span style="color:#58a1dd">key&lt;/span>, &lt;span style="color:#58a1dd">value&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">EnvironmentValues&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#ff636f">operator&lt;/span>&lt;span style="color:#ff636f">=&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">EnvironmentValues&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>) &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">delete&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">EnvironmentValues&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">EnvironmentValues&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>) &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">delete&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">static&lt;/span> &lt;span style="color:#58a1dd">EnvironmentValues&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">Instance&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">static&lt;/span> &lt;span style="color:#58a1dd">EnvironmentValues&lt;/span> &lt;span style="color:#58a1dd">env&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">env&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">decltype&lt;/span>(&lt;span style="color:#58a1dd">ev&lt;/span>) &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">get&lt;/span>() { &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">ev&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">// ${HOME}/${USER}/sss/dir
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">OverwriterEnvironmentKv&lt;/span>(&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#58a1dd">k&lt;/span>, &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#58a1dd">v&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">EnvironmentValues&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">Instance&lt;/span>().&lt;span style="color:#58a1dd">Push&lt;/span>(&lt;span style="color:#58a1dd">k&lt;/span>, &lt;span style="color:#58a1dd">v&lt;/span>, &lt;span style="color:#58a1dd">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">PushEnvironmentKv&lt;/span>(&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#58a1dd">k&lt;/span>, &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#58a1dd">v&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">EnvironmentValues&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">Instance&lt;/span>().&lt;span style="color:#58a1dd">Push&lt;/span>(&lt;span style="color:#58a1dd">k&lt;/span>, &lt;span style="color:#58a1dd">v&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">static&lt;/span> &lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">ResolveEnvironment&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">k&lt;/span>, &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">v&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">for&lt;/span> (&lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">i&lt;/span> : &lt;span style="color:#58a1dd">EnvironmentValues&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">Instance&lt;/span>().&lt;span style="color:#58a1dd">get&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">i&lt;/span>.&lt;span style="color:#58a1dd">first&lt;/span>.&lt;span style="color:#58a1dd">compare&lt;/span>(&lt;span style="color:#58a1dd">k&lt;/span>) &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">v&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">i&lt;/span>.&lt;span style="color:#58a1dd">second&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">s&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> ((&lt;span style="color:#58a1dd">s&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">getenv&lt;/span>(&lt;span style="color:#58a1dd">k&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>())) &lt;span style="color:#ff636f">!=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">v&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">s&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">BaseEnvironmentExpend&lt;/span>(&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">va&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">va&lt;/span>.&lt;span style="color:#58a1dd">empty&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#58a1dd">ns&lt;/span>, &lt;span style="color:#58a1dd">ks&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">p&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">va&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">n&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">va&lt;/span>.&lt;span style="color:#58a1dd">size&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">pre&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">size_t&lt;/span> &lt;span style="color:#58a1dd">i&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">KEnvStateMachine&lt;/span> &lt;span style="color:#58a1dd">state&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">kClearReset&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">for&lt;/span> (; &lt;span style="color:#58a1dd">i&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">n&lt;/span>; &lt;span style="color:#58a1dd">i&lt;/span>&lt;span style="color:#ff636f">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">switch&lt;/span> (&lt;span style="color:#58a1dd">p&lt;/span>[&lt;span style="color:#58a1dd">i&lt;/span>]) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#a6be9d">&amp;#39;`&amp;#39;&lt;/span>&lt;span style="color:#ff636f">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">switch&lt;/span> (&lt;span style="color:#58a1dd">state&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#58a1dd">kClearReset&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">state&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">kEscapeAllow&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#58a1dd">kEscapeAllow&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ns&lt;/span>.&lt;span style="color:#58a1dd">push_back&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;`&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">state&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">kClearReset&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#58a1dd">kMarkAllow&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">state&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">kEscapeAllow&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ns&lt;/span>.&lt;span style="color:#58a1dd">push_back&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;$&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#58a1dd">kBlockBegin&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">continue&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">default&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ns&lt;/span>.&lt;span style="color:#58a1dd">push_back&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;`&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">continue&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#a6be9d">&amp;#39;$&amp;#39;&lt;/span>&lt;span style="color:#ff636f">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">switch&lt;/span> (&lt;span style="color:#58a1dd">state&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#58a1dd">kClearReset&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">state&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">kMarkAllow&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#58a1dd">kEscapeAllow&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ns&lt;/span>.&lt;span style="color:#58a1dd">push_back&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;$&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">state&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">kClearReset&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#58a1dd">kMarkAllow&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ns&lt;/span>.&lt;span style="color:#58a1dd">push_back&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;$&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">state&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">kClearReset&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#58a1dd">kBlockBegin&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#58a1dd">kBlockEnd&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">default&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ns&lt;/span>.&lt;span style="color:#58a1dd">push_back&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;$&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">continue&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#a6be9d">&amp;#39;{&amp;#39;&lt;/span>&lt;span style="color:#ff636f">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">switch&lt;/span> (&lt;span style="color:#58a1dd">state&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#58a1dd">kClearReset&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#58a1dd">kEscapeAllow&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ns&lt;/span>.&lt;span style="color:#58a1dd">push_back&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;{&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">state&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">kClearReset&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#58a1dd">kMarkAllow&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">state&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">kBlockBegin&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">pre&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">i&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#58a1dd">kBlockBegin&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ns&lt;/span>.&lt;span style="color:#58a1dd">push_back&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;{&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">default&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">continue&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#a6be9d">&amp;#39;}&amp;#39;&lt;/span>&lt;span style="color:#ff636f">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">switch&lt;/span> (&lt;span style="color:#58a1dd">state&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#58a1dd">kClearReset&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#58a1dd">kEscapeAllow&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ns&lt;/span>.&lt;span style="color:#58a1dd">push_back&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;}&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">state&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">kClearReset&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#58a1dd">kMarkAllow&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">state&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">kClearReset&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ns&lt;/span>.&lt;span style="color:#58a1dd">push_back&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;$&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ns&lt;/span>.&lt;span style="color:#58a1dd">push_back&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;}&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#58a1dd">kBlockBegin&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ks&lt;/span>.&lt;span style="color:#58a1dd">assign&lt;/span>(&lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">p&lt;/span>[&lt;span style="color:#58a1dd">pre&lt;/span> &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#a6be9d">1&lt;/span>], &lt;span style="color:#58a1dd">i&lt;/span> &lt;span style="color:#ff636f">-&lt;/span> &lt;span style="color:#58a1dd">pre&lt;/span> &lt;span style="color:#ff636f">-&lt;/span> &lt;span style="color:#a6be9d">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#58a1dd">v&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">ResolveEnvironment&lt;/span>(&lt;span style="color:#58a1dd">ks&lt;/span>, &lt;span style="color:#58a1dd">v&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ns&lt;/span>.&lt;span style="color:#58a1dd">append&lt;/span>(&lt;span style="color:#58a1dd">v&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">state&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">kClearReset&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">default&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">continue&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">default&lt;/span>&lt;span style="color:#ff636f">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">switch&lt;/span> (&lt;span style="color:#58a1dd">state&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#58a1dd">kClearReset&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ns&lt;/span>.&lt;span style="color:#58a1dd">push_back&lt;/span>(&lt;span style="color:#58a1dd">p&lt;/span>[&lt;span style="color:#58a1dd">i&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#58a1dd">kEscapeAllow&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ns&lt;/span>.&lt;span style="color:#58a1dd">push_back&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;`&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ns&lt;/span>.&lt;span style="color:#58a1dd">push_back&lt;/span>(&lt;span style="color:#58a1dd">p&lt;/span>[&lt;span style="color:#58a1dd">i&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">state&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">kClearReset&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#58a1dd">kMarkAllow&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ns&lt;/span>.&lt;span style="color:#58a1dd">push_back&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;$&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ns&lt;/span>.&lt;span style="color:#58a1dd">push_back&lt;/span>(&lt;span style="color:#58a1dd">p&lt;/span>[&lt;span style="color:#58a1dd">i&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">state&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">kClearReset&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#58a1dd">kBlockBegin&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">default&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">continue&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">va&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">ns&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="启动器的实现">启动器的实现&lt;/h3>
&lt;p>启动器启动后，查找清单文件，清单文件文件名为 launcher.manifest , 要作为其他进程的启动器，只需要重命名和修改清单文件即可。&lt;br>
Launcher 随后解析清单文件，并读取 LibraryPath, Path, Binray 等属性，设置好环境变量，最后通过 execvp 启动进程，输入的参数就是启动器的全部参数。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;string&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;sys/types.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;dirent.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;cpptoml.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">GetProcessImageFilePath&lt;/span>(&lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">buffer&lt;/span>, &lt;span style="color:#58a1dd">size_t&lt;/span> &lt;span style="color:#58a1dd">bufSize&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">BaseEnvironmentExpend&lt;/span>(&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">va&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">AppendEnvironment&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">name&lt;/span>, &lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">value&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">front&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">name&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span> &lt;span style="color:#ff636f">||&lt;/span> &lt;span style="color:#58a1dd">value&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">ev&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> ((&lt;span style="color:#58a1dd">ev&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">getenv&lt;/span>(&lt;span style="color:#58a1dd">name&lt;/span>)) &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">setenv&lt;/span>(&lt;span style="color:#58a1dd">name&lt;/span>, &lt;span style="color:#58a1dd">value&lt;/span>, &lt;span style="color:#a6be9d">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">l&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">strlen&lt;/span>(&lt;span style="color:#58a1dd">value&lt;/span>) &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#58a1dd">strlen&lt;/span>(&lt;span style="color:#58a1dd">ev&lt;/span>) &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#a6be9d">2&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">s&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">new&lt;/span> &lt;span style="color:#ff636f">char&lt;/span>[&lt;span style="color:#58a1dd">l&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">front&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">strcpy&lt;/span>(&lt;span style="color:#58a1dd">s&lt;/span>, &lt;span style="color:#58a1dd">value&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">strcat&lt;/span>(&lt;span style="color:#58a1dd">s&lt;/span>, &lt;span style="color:#a6be9d">&amp;#34;:&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">strcat&lt;/span>(&lt;span style="color:#58a1dd">s&lt;/span>, &lt;span style="color:#58a1dd">ev&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#ff636f">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">strcpy&lt;/span>(&lt;span style="color:#58a1dd">s&lt;/span>, &lt;span style="color:#58a1dd">ev&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">strcat&lt;/span>(&lt;span style="color:#58a1dd">s&lt;/span>, &lt;span style="color:#a6be9d">&amp;#34;:&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">strcat&lt;/span>(&lt;span style="color:#58a1dd">s&lt;/span>, &lt;span style="color:#58a1dd">value&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">setenv&lt;/span>(&lt;span style="color:#58a1dd">name&lt;/span>, &lt;span style="color:#58a1dd">s&lt;/span>, &lt;span style="color:#a6be9d">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">delete&lt;/span>[] &lt;span style="color:#58a1dd">s&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">Pathcombine&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">folder&lt;/span>, &lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">path&lt;/span>, &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">cmd&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">folder&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span> &lt;span style="color:#ff636f">||&lt;/span> &lt;span style="color:#58a1dd">path&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">path&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#a6be9d">&amp;#39;/&amp;#39;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">access&lt;/span>(&lt;span style="color:#58a1dd">path&lt;/span>, &lt;span style="color:#58a1dd">R_OK&lt;/span>) &lt;span style="color:#ff636f">!=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">cmd&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">path&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">cmd&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span>(&lt;span style="color:#58a1dd">folder&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">cmd&lt;/span>.&lt;span style="color:#58a1dd">back&lt;/span>() &lt;span style="color:#ff636f">!=&lt;/span> &lt;span style="color:#a6be9d">&amp;#39;/&amp;#39;&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">path&lt;/span> &lt;span style="color:#ff636f">!=&lt;/span> &lt;span style="color:#a6be9d">&amp;#39;/&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">cmd&lt;/span>.&lt;span style="color:#58a1dd">push_back&lt;/span>(&lt;span style="color:#a6be9d">&amp;#39;/&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">cmd&lt;/span>.&lt;span style="color:#58a1dd">append&lt;/span>(&lt;span style="color:#58a1dd">path&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">access&lt;/span>(&lt;span style="color:#58a1dd">cmd&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>(), &lt;span style="color:#58a1dd">R_OK&lt;/span>) &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">PathRemoveFileSpec&lt;/span>(&lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">dir&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">sz&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">strlen&lt;/span>(&lt;span style="color:#ff636f">const_cast&lt;/span>&lt;span style="color:#ff636f">&amp;lt;&lt;/span>&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&amp;gt;&lt;/span>(&lt;span style="color:#58a1dd">dir&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">while&lt;/span> (&lt;span style="color:#ff636f">--&lt;/span>&lt;span style="color:#58a1dd">sz&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">dir&lt;/span>[&lt;span style="color:#58a1dd">sz&lt;/span>] &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#a6be9d">&amp;#39;/&amp;#39;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">sz&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">dir&lt;/span>[&lt;span style="color:#a6be9d">1&lt;/span>] &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">dir&lt;/span>[&lt;span style="color:#58a1dd">sz&lt;/span>] &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">dir&lt;/span>[&lt;span style="color:#a6be9d">1&lt;/span>] &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">//// launcher must find default
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>&lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">SearchManifest&lt;/span>(&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">cmd&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#58a1dd">selfPath&lt;/span>[&lt;span style="color:#a6be9d">4096&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">GetProcessImageFilePath&lt;/span>(&lt;span style="color:#58a1dd">selfPath&lt;/span>, &lt;span style="color:#a6be9d">4096&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#58a1dd">manifest&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span>(&lt;span style="color:#58a1dd">selfPath&lt;/span>) &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;.manifest&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">PathRemoveFileSpec&lt;/span>(&lt;span style="color:#58a1dd">selfPath&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">cout&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;cannot resolve path &amp;#34;&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">selfPath&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">endl&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">access&lt;/span>(&lt;span style="color:#58a1dd">manifest&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>(), &lt;span style="color:#58a1dd">R_OK&lt;/span>) &lt;span style="color:#ff636f">!=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">cerr&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;Not found launcher manifest, path is: &amp;#34;&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">manifest&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">endl&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">shared_ptr&lt;/span>&lt;span style="color:#ff636f">&amp;lt;&lt;/span>&lt;span style="color:#58a1dd">cpptoml&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">table&lt;/span>&lt;span style="color:#ff636f">&amp;gt;&lt;/span> &lt;span style="color:#58a1dd">g&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">g&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">cpptoml&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">parse_file&lt;/span>(&lt;span style="color:#58a1dd">manifest&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#ff636f">catch&lt;/span> (&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">cpptoml&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">parse_exception&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">cerr&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;Failed to parse manifest: &amp;#34;&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">manifest&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;: &amp;#34;&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">e&lt;/span>.&lt;span style="color:#58a1dd">what&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">endl&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">insider&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> [&lt;span style="color:#ff636f">&amp;amp;&lt;/span>](&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">key&lt;/span>, &lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">evar&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">g&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">contains_qualified&lt;/span>(&lt;span style="color:#58a1dd">key&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">s&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">g&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">get_qualified&lt;/span>(&lt;span style="color:#58a1dd">key&lt;/span>)&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">as&lt;/span>&lt;span style="color:#ff636f">&amp;lt;&lt;/span>&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span>&lt;span style="color:#ff636f">&amp;gt;&lt;/span>()&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">get&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">BaseEnvironmentExpend&lt;/span>(&lt;span style="color:#58a1dd">s&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">cout&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;cannot resolve env: &amp;#34;&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">s&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">endl&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">AppendEnvironment&lt;/span>(&lt;span style="color:#58a1dd">evar&lt;/span>, &lt;span style="color:#58a1dd">s&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>(), &lt;span style="color:#58a1dd">true&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">cout&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;cannot append &amp;#34;&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">s&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#a6be9d">&amp;#34; to env &amp;#34;&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">evar&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">endl&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// std::cout&amp;lt;&amp;lt;&amp;#34;Append success &amp;#34;&amp;lt;&amp;lt;s&amp;lt;&amp;lt;&amp;#34; to env &amp;#34;&amp;lt;&amp;lt;evar&amp;lt;&amp;lt;std::endl;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#828b96;font-style:italic">// std::cout&amp;lt;&amp;lt;getenv(evar)&amp;lt;&amp;lt;std::endl;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">insider&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;Launcher.Path&amp;#34;&lt;/span>, &lt;span style="color:#a6be9d">&amp;#34;PATH&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">insider&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;Launcher.LibraryPath&amp;#34;&lt;/span>, &lt;span style="color:#a6be9d">&amp;#34;LD_LIBRARY_PATH&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">g&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">contains_qualified&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;Launcher.Binary&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">sbinary&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">g&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">get_qualified&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;Launcher.Binary&amp;#34;&lt;/span>)&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">as&lt;/span>&lt;span style="color:#ff636f">&amp;lt;&lt;/span>&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span>&lt;span style="color:#ff636f">&amp;gt;&lt;/span>()&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">get&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">BaseEnvironmentExpend&lt;/span>(&lt;span style="color:#58a1dd">sbinary&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">Pathcombine&lt;/span>(&lt;span style="color:#58a1dd">selfPath&lt;/span>, &lt;span style="color:#58a1dd">sbinary&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>(), &lt;span style="color:#58a1dd">cmd&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">cout&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;Cannot found path: &amp;#34;&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">cmd&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">endl&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">main&lt;/span>(&lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">argc&lt;/span>, &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">argv&lt;/span>[]) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#58a1dd">cmd&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">SearchManifest&lt;/span>(&lt;span style="color:#58a1dd">cmd&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">ret&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">execvp&lt;/span>(&lt;span style="color:#58a1dd">cmd&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>(), &lt;span style="color:#58a1dd">argv&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// std::cout&amp;lt;&amp;lt;&amp;#34;Command is: &amp;#34;&amp;lt;&amp;lt;cmd&amp;lt;&amp;lt;std::endl;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">cout&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;Subprocess result is: &amp;#34;&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">ret&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">endl&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="java-service-native-launcher">Java Service Native Launcher&lt;/h2>
&lt;p>由于工作需要，我曾经写过一个 Shell 的 Java 服务启动器。如果不用第三方启动器，直接使用 JVM 官方启动器 java，
需要输入很长的命令。比如运行 hello.jar 并传递参数，如下：&lt;/p>
&lt;blockquote>
&lt;p>java -jar hello.jar world&lt;/p>
&lt;/blockquote>
&lt;p>如果运行的是一些服务，则可能是这样的：&lt;/p>
&lt;blockquote>
&lt;p>java -server -Xms512m -Xmx512m -jar com.fuck.service.jar &amp;ndash;poolsize=24 &amp;ndash;ip=192.168.1.12&lt;/p>
&lt;/blockquote>
&lt;p>很多时候，Java 开发者会使用 shell(batch) 脚本，或者第三方启动器来规避这些麻烦。&lt;/p>
&lt;h3 id="java-service-manifest">Java Service Manifest&lt;/h3>
&lt;p>绝大多数人并不喜欢冗长的命令，我也不例外。&lt;br>
在设计 Java Launcher 的时候，我采用 TOML 格式作为启动器清单格式，文件格式如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#Launcher&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic"># OWNERDIR is process image directory&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#58a1dd">Runing&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic"># limit 16 bytes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">Title&lt;/span>=&lt;span style="color:#a6be9d">&amp;#34;JSrv&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">IsService&lt;/span>=&lt;span style="color:#ff636f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#58a1dd">Runtime&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">JDKPath&lt;/span>=&lt;span style="color:#a6be9d">&amp;#34;/opt/jdk&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">Package&lt;/span>=&lt;span style="color:#a6be9d">&amp;#34;${OWNERDIR}/app.jar&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">VMOptions&lt;/span>=[&lt;span style="color:#a6be9d">&amp;#34;-Xms512m&amp;#34;&lt;/span>,&lt;span style="color:#a6be9d">&amp;#34;-Xmx512m&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">ClassPath&lt;/span>=[&lt;span style="color:#a6be9d">&amp;#34;vendors&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#58a1dd">Service&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">IsDaemon&lt;/span>=&lt;span style="color:#ff636f">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic"># default -s --signal support stop restart&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">EnableSignal&lt;/span>=&lt;span style="color:#ff636f">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">PidFile&lt;/span>=&lt;span style="color:#a6be9d">&amp;#34;/tmp/jsrv.pids&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">Stdout&lt;/span>=&lt;span style="color:#a6be9d">&amp;#34;/opt/jsrv.stdout.log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">Stderr&lt;/span>=&lt;span style="color:#a6be9d">&amp;#34;/opt/jsrv.stderr.log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">DefaultArgs&lt;/span>=[&lt;span style="color:#a6be9d">&amp;#34;--config&amp;#34;&lt;/span>,&lt;span style="color:#a6be9d">&amp;#34;config.example&amp;#34;&lt;/span>,&lt;span style="color:#a6be9d">&amp;#34;--show-config&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在这个清单文件中，我设计了两种模式，第一个是&lt;strong>基础模式&lt;/strong>，也就是 IsService 为 false 的时候，这个时候，程序只会读取 Runtime 一节
的所有配置信息。&lt;/p>
&lt;ul>
&lt;li>JDKPath 读取 jdk 所在目录，并查找到 libjvm.so 的位置。&lt;/li>
&lt;li>Package 是运行的 Jar 包的路径，也就是 MainClass 所在的Jar 包。&lt;/li>
&lt;li>VMoptions 是 Java 虚拟机 运行参数， ClassPath 是 Jar 包所在目录。&lt;/li>
&lt;/ul>
&lt;p>在 基础模式中，所有输入的参数除了 Argv~0, 其他的参数都会被传递给 Java MainClass 。&lt;/p>
&lt;blockquote>
&lt;p>jsrv helloworld&lt;/p>
&lt;/blockquote>
&lt;p>假如 Package 是 hello.jar, 等价于：&lt;/p>
&lt;blockquote>
&lt;p>java -Xms512m -Xmx512m -jar hello.jar helloworld&lt;/p>
&lt;/blockquote>
&lt;p>另一种是 &lt;strong>服务模式&lt;/strong> ，这种模式并不支持从命令行输入参数。当 IsService 为 true 时，启动器读取 Service 节的信息.&lt;/p>
&lt;ul>
&lt;li>IsDaemon 表示启动器是否以 守护进程的模式运行&lt;/li>
&lt;li>EnableSignal 表示开启 -s stop -s restart 参数&lt;/li>
&lt;li>PidFile 是记录守护进程 pid 的临时文件&lt;/li>
&lt;li>Stdout 是 stdout 重定向。&lt;/li>
&lt;li>Stderr 是 stderr 重定向&lt;/li>
&lt;li>DefaultArgs 这个数组是要传给 MainClass 的参数。&lt;/li>
&lt;/ul>
&lt;p>启动一个进程作为守护进程时，你需要将日志输出到文件。&lt;/p>
&lt;p>一般而言，启动一个守护进程，先需要 fork 出一个子进程，然后退出父进程。
通过 setsid() 函数调用，让 init 进程收养它，使用 umask 设置默认权限，后面重定向标准输入输出，关闭文件句柄即可.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;stdint.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;signal.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;stdarg.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;fcntl.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">create_daemon&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">fd&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">switch&lt;/span> (&lt;span style="color:#58a1dd">fork&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">printf&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;fork() failed&lt;/span>&lt;span style="color:#a6be9d">\n&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">case&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">default&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">exit&lt;/span>(&lt;span style="color:#a6be9d">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">setsid&lt;/span>() &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">umask&lt;/span>(&lt;span style="color:#a6be9d">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">fd&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">open&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;/dev/null&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">O_RDWR&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">fd&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// open /dev/null failed
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">dup2&lt;/span>(&lt;span style="color:#58a1dd">fd&lt;/span>, &lt;span style="color:#58a1dd">STDIN_FILENO&lt;/span>) &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// dup2(STDIN) failed
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">dup2&lt;/span>(&lt;span style="color:#58a1dd">fd&lt;/span>, &lt;span style="color:#58a1dd">STDOUT_FILENO&lt;/span>) &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// dup2(STDOUT) failed
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">fd&lt;/span> &lt;span style="color:#ff636f">&amp;gt;&lt;/span> &lt;span style="color:#58a1dd">STDERR_FILENO&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">close&lt;/span>(&lt;span style="color:#58a1dd">fd&lt;/span>) &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果在 Windows 上运行一个守护进程，除了作为一个 Windows Service 还可以通过 WinMain 启动，在后台运行，如果从 main 启动，
就需要关闭控制台，代码如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;cstdio&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;Windows.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">create_daemon&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">//do some thing and set io
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">FILE&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">fp&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span>(&lt;span style="color:#58a1dd">freopen_s&lt;/span>(&lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">fp&lt;/span>,&lt;span style="color:#a6be9d">&amp;#34;nul&amp;#34;&lt;/span>,&lt;span style="color:#a6be9d">&amp;#34;w+b&amp;#34;&lt;/span>,&lt;span style="color:#58a1dd">stdout&lt;/span>)&lt;span style="color:#ff636f">!=&lt;/span>&lt;span style="color:#a6be9d">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">fclose&lt;/span>(&lt;span style="color:#58a1dd">fp&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span>(&lt;span style="color:#58a1dd">freopen_s&lt;/span>(&lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">fp&lt;/span>,&lt;span style="color:#a6be9d">&amp;#34;nul&amp;#34;&lt;/span>,&lt;span style="color:#a6be9d">&amp;#34;w+b&amp;#34;&lt;/span>,&lt;span style="color:#58a1dd">stderr&lt;/span>)&lt;span style="color:#ff636f">!=&lt;/span>&lt;span style="color:#a6be9d">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">fclose&lt;/span>(&lt;span style="color:#58a1dd">fp&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">FreeConsole&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>启动器的处理流程可以借鉴上面的 LD 补全 启动器，在读取清单时，解析完 Runtime 一节后，读取 Runing.IsService 的信息，
如果不为真，则返回，这时候执行的是基础模式，否则，继续读取 Service 一节的信息。&lt;br>
返回值如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">enum&lt;/span> &lt;span style="color:#58a1dd">KLauncherChannel&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">kBasicVMRuntime&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">kServiceVMRuntime&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">kUnknownVMRuntime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果是服务模式还需要解析命令行参数，参数帮助信息如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">static&lt;/span> &lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">kUsage&lt;/span> &lt;span style="color:#ff636f">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6be9d">&amp;#34;Usage: %s [options] &amp;lt;input&amp;gt; &lt;/span>&lt;span style="color:#a6be9d">\n&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6be9d">&amp;#34; Flags:&lt;/span>&lt;span style="color:#a6be9d">\n&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6be9d">&amp;#34; -h [-?|--help]&lt;/span>&lt;span style="color:#a6be9d">\t&lt;/span>&lt;span style="color:#a6be9d">print jsrv usage information and exit&lt;/span>&lt;span style="color:#a6be9d">\n&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6be9d">&amp;#34; -v [--version]&lt;/span>&lt;span style="color:#a6be9d">\t&lt;/span>&lt;span style="color:#a6be9d">print jsrv version and exit&lt;/span>&lt;span style="color:#a6be9d">\n&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6be9d">&amp;#34; -s [--signal]&lt;/span>&lt;span style="color:#a6be9d">\t&lt;/span>&lt;span style="color:#a6be9d">send a signal to jsrv,argument: stop|restart &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6be9d">&amp;#34;&lt;/span>&lt;span style="color:#a6be9d">\n&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>解析完毕后，最后启动 JVM,执行代码并没有多少不同，执行 MainClass 的函数分别如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">Exe&lt;/span>(&lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">Argc&lt;/span>, &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#ff636f">**&lt;/span>&lt;span style="color:#58a1dd">Argv&lt;/span>); &lt;span style="color:#828b96;font-style:italic">/// Base mode
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">Exe&lt;/span>(&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">vector&lt;/span>&lt;span style="color:#ff636f">&amp;lt;&lt;/span>&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span>&lt;span style="color:#ff636f">&amp;gt;&lt;/span> &lt;span style="color:#58a1dd">Args&lt;/span>); &lt;span style="color:#828b96;font-style:italic">/// Service mode
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="jvm-的启动流程">JVM 的启动流程&lt;/h3>
&lt;p>各个平台上的 java 以及 Windows 平台的 javaw 依然也只是 JVM 的一个启动器，这类程序需要通过调用 jvm.dll 或者 libjvm.so 导出的
函数来启动 JVM。&lt;/p>
&lt;p>清单中设置了 JDKPath 信息，在 Linux 中，以 jdk8 为例，64位系统 libjvm.so 是 $JDKPath/jre/lib/amd64/server/libjvm.so，
如果找不到 libjvm.so, 启动器还会从 /usr/lib/libjvm.so 。&lt;/p>
&lt;p>找到 libjvm.so 后，可以使用 dlopen 打开一个动态库句柄，dlsym 查找 Symbol, 获得函数地址，在 Windows 中 分别是 LoadLibrary 和 GetProcAddress &lt;br>
函数大致如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">typedef&lt;/span> &lt;span style="color:#58a1dd">jint&lt;/span> (&lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">VMInitMethord&lt;/span>)(&lt;span style="color:#58a1dd">JavaVM&lt;/span> &lt;span style="color:#ff636f">**&lt;/span>&lt;span style="color:#58a1dd">pvm&lt;/span>, &lt;span style="color:#58a1dd">JNIEnv&lt;/span> &lt;span style="color:#ff636f">**&lt;/span>&lt;span style="color:#58a1dd">env&lt;/span>, &lt;span style="color:#ff636f">void&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">args&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">static&lt;/span> &lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">SearchJDKPath&lt;/span>(&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">jdkPath&lt;/span>, &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">libjvm&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#ifdef __x86_64__
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">libjvm&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">jdkPath&lt;/span> &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;/jre/lib/amd64/server/libjvm.so&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#else
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">libjvm&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">jdkPath&lt;/span> &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;/jre/lib/server/libjvm.so&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">access&lt;/span>(&lt;span style="color:#58a1dd">libjvm&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>(), &lt;span style="color:#58a1dd">X_OK&lt;/span>) &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// JDK9
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>&lt;span style="color:#828b96;font-style:italic">#ifdef __x86_64__
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">libjvm&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">jdkPath&lt;/span> &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;/lib/amd64/server/libjvm.so&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#else
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">libjvm&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">jdkPath&lt;/span> &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;/lib/server/libjvm.so&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">access&lt;/span>(&lt;span style="color:#58a1dd">libjvm&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>(), &lt;span style="color:#58a1dd">X_OK&lt;/span>) &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">access&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;/usr/lib/libjvm.so&amp;#34;&lt;/span>, &lt;span style="color:#58a1dd">X_OK&lt;/span>) &lt;span style="color:#ff636f">!=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">libjvm&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;/usr/lib/libjvm.so&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">VMRuntime&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">VMRuntimeBind&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#58a1dd">libjvm&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">SearchJDKPath&lt;/span>(&lt;span style="color:#58a1dd">rc_&lt;/span>.&lt;span style="color:#58a1dd">jdkdir&lt;/span>, &lt;span style="color:#58a1dd">libjvm&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">cerr&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;Cannot found libjvm.so, jdk path is: &amp;#34;&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">rc_&lt;/span>.&lt;span style="color:#58a1dd">jdkdir&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">endl&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> ((&lt;span style="color:#58a1dd">vmHandle&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">dlopen&lt;/span>(&lt;span style="color:#58a1dd">libjvm&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>(), &lt;span style="color:#58a1dd">RTLD_NOW&lt;/span> &lt;span style="color:#ff636f">+&lt;/span> &lt;span style="color:#58a1dd">RTLD_GLOBAL&lt;/span>)) &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">cerr&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;Failure: dlopen open libjvm.so failed. &amp;#34;&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">endl&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> ((&lt;span style="color:#58a1dd">vmcall&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> (&lt;span style="color:#58a1dd">VMInitMethord&lt;/span>)&lt;span style="color:#58a1dd">dlsym&lt;/span>(&lt;span style="color:#58a1dd">vmHandle&lt;/span>, &lt;span style="color:#a6be9d">&amp;#34;JNI_CreateJavaVM&amp;#34;&lt;/span>)) &lt;span style="color:#ff636f">==&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">nullptr&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">cerr&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;Failure: cannot resolve JNI_CreateJavaVM !&amp;#34;&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">endl&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">dlclose&lt;/span>(&lt;span style="color:#58a1dd">vmHandle&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">vmHandle&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>成功得到 JNI_CreateJavaVM 函数指针后，就该设置 JavaVMOption 类型变量，上面的 清单中的 VMOptions 要依次绑定到 JavaVMOption,
ClassPath 目录下的 jar 包，以及 Package 要绑定到 -Djava.class.path 上， 然后调用 JNI_CreateJavaVM 函数指针，获得一个 JavaVM 对象和
JNIEnv 对象。&lt;/p>
&lt;p>Jar 包是基于 zip 格式的文件，内部的 META-INF/MANIFEST.MF 这一清单文件记录了 清单版本，Main-Class 以及 Class-Path, 可以从 Jar 包里面读取
MainClass 。&lt;br>
我使用了 Github 用户 slyfoxza &lt;a href="https://github.com/slyfoxza/minecraftd/blob/master/src/JarReader.cpp">slyfoxza/minecraftd&lt;/a> 的 JarReader来获取
MainClass,不过遗憾的是，通过 JarReader 得到的 MainClass 是用 &amp;lsquo;.&amp;rsquo; 区分的，而 FindClass 需要 &amp;lsquo;/&amp;rsquo; 区分。 我是用了一个帮助函数来替换所有的 点。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">static&lt;/span> &lt;span style="color:#ff636f">void&lt;/span> &lt;span style="color:#58a1dd">Replace&lt;/span>(&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">s&lt;/span>, &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#58a1dd">c1&lt;/span>, &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#58a1dd">c2&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">for&lt;/span> (&lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">c&lt;/span> : &lt;span style="color:#58a1dd">s&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">c&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#58a1dd">c1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">c&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">c2&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用 env-&amp;gt;FindClass 获取 MainClass, 类型为 jclass, 使用 env-&amp;gt;GetStaticMethodID 获取 MainClass 的方法 main, 后面就是将 参数转成 JVM String[] 类型
随后调用静态方法即可， 大致如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">VMRuntime&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">Exe&lt;/span>(&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">vector&lt;/span>&lt;span style="color:#ff636f">&amp;lt;&lt;/span>&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span>&lt;span style="color:#ff636f">&amp;gt;&lt;/span> &lt;span style="color:#58a1dd">Args&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">InitVMEnv&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">cout&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;Initialize VM failed !&amp;#34;&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">endl&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">JarReader&lt;/span> &lt;span style="color:#58a1dd">jarReader&lt;/span>(&lt;span style="color:#58a1dd">rc_&lt;/span>.&lt;span style="color:#58a1dd">package&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">mainClassString&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">jarReader&lt;/span>.&lt;span style="color:#58a1dd">getMainClassName&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Replace&lt;/span>(&lt;span style="color:#58a1dd">mainClassString&lt;/span>, &lt;span style="color:#a6be9d">&amp;#39;.&amp;#39;&lt;/span>, &lt;span style="color:#a6be9d">&amp;#39;/&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">jclass&lt;/span> &lt;span style="color:#58a1dd">mainClass&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">env&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">FindClass&lt;/span>(&lt;span style="color:#58a1dd">mainClassString&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">mainClass&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">cout&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">__LINE__&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#a6be9d">&amp;#34; Cannot find MainClass: &amp;#34;&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">mainClassString&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">endl&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#a6be9d">2&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">jmethodID&lt;/span> &lt;span style="color:#58a1dd">mainMethod&lt;/span> &lt;span style="color:#ff636f">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">env&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">GetStaticMethodID&lt;/span>(&lt;span style="color:#58a1dd">mainClass&lt;/span>, &lt;span style="color:#a6be9d">&amp;#34;main&amp;#34;&lt;/span>, &lt;span style="color:#a6be9d">&amp;#34;([Ljava/lang/String;)V&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">mainMethod&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">cout&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">__LINE__&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;Cannot GetStaticMetodID &amp;#34;&lt;/span> &lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">endl&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#a6be9d">3&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">jclass&lt;/span> &lt;span style="color:#58a1dd">stringClass&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">env&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">FindClass&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;java/lang/String&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">jobjectArray&lt;/span> &lt;span style="color:#58a1dd">args&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">env&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">NewObjectArray&lt;/span>(&lt;span style="color:#58a1dd">Args&lt;/span>.&lt;span style="color:#58a1dd">size&lt;/span>(), &lt;span style="color:#58a1dd">stringClass&lt;/span>, &lt;span style="color:#58a1dd">NULL&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">i&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">for&lt;/span> (&lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">Arg&lt;/span> : &lt;span style="color:#58a1dd">Args&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">jstring&lt;/span> &lt;span style="color:#58a1dd">jni_arg&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">env&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">NewStringUTF&lt;/span>(&lt;span style="color:#58a1dd">Arg&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">env&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">SetObjectArrayElement&lt;/span>(&lt;span style="color:#58a1dd">args&lt;/span>, &lt;span style="color:#58a1dd">i&lt;/span>&lt;span style="color:#ff636f">++&lt;/span>, &lt;span style="color:#58a1dd">jni_arg&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">env&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">DeleteLocalRef&lt;/span>(&lt;span style="color:#58a1dd">jni_arg&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">env&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">CallStaticVoidMethod&lt;/span>(&lt;span style="color:#58a1dd">mainClass&lt;/span>, &lt;span style="color:#58a1dd">mainMethod&lt;/span>, &lt;span style="color:#58a1dd">args&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// env-&amp;gt;ExceptionDescribe();
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">jthrowable&lt;/span> &lt;span style="color:#58a1dd">exc&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">env&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">ExceptionOccurred&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">exc&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">env&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">ExceptionDescribe&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">env&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">ExceptionClear&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">jclass&lt;/span> &lt;span style="color:#58a1dd">newExcCls&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">env&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">FindClass&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;java/lang/IllegalArgumentException&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">newExcCls&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">env&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">ThrowNew&lt;/span>(&lt;span style="color:#58a1dd">newExcCls&lt;/span>, &lt;span style="color:#a6be9d">&amp;#34;Throw Exception&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#a6be9d">4&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>程序退出的时候需要析构这些对象。&lt;/p>
&lt;p>实际上一个大致的 JVM Launcher 也就这样了。&lt;/p>
- https://forcemz.net/posts/2015/2015-11-27-new-launcher/ - Copyright (c) 2009-2024 J23</description></item><item><title>Subversion 和 GIT 开发者演进之 2015</title><link>https://forcemz.net/posts/2015/2015-10-16-dev-vcs/</link><pubDate>Fri, 16 Oct 2015 21:30:16 +0800</pubDate><guid>https://forcemz.net/posts/2015/2015-10-16-dev-vcs/</guid><description>Charlie's Rethinking https://forcemz.net/posts/2015/2015-10-16-dev-vcs/ -&lt;h2 id="前言">前言&lt;/h2>
&lt;p>在开发软件的过程中，往往是需要多个人参与，版本控制系统的协同工作的重要性不言而喻，除此之外，
版本控制软件对整个开发流程的记录对于缺陷追踪也是非常重要的。版本控制系统也是软件开发的基础设施。&lt;/p>
&lt;p>笔者开始接触版本控制系统是大学的时候，最开始安装了 TortoiseSVN ，然而 TortoiseSVN
仅仅是占据了硬盘空间而没有发挥作用，很多开发者在接触新事物的时候，并不一定会有极大的热情去了解，
有的走了很多弯路后返回到了原地，有的深入以后，觉得其中异常的精彩。当我在 Windows 下编译 LLVM 的时候，
Subversion 开始发挥作用，彼时，几乎所有开源的大型软件都是使用 Subversion 进行托管，当然还有部分 CVS。
GIT 远远没有目前流行。后来参加工作后，就是代码托管的工作，对 Subversion 和 Git 有了一定程度的了解，
逐渐有了自己的思考。&lt;/p>
&lt;p>大多数人对版本控制系统的解读都是站在使用者的角度，而本文是基于一个代码托管的开发者立场。&lt;/p>
&lt;h2 id="版本控制系统见闻">版本控制系统见闻&lt;/h2>
&lt;p>版本控制系统的历史可以追溯到20世纪70年代，这是一个军方开发的 CCC （变更和配置控制）系统，名字叫做
&lt;a href="https://en.wikipedia.org/wiki/CA_Software_Change_Manager">CA Software Change Manager&lt;/a> 随后，版本控制系统开始发展起来。&lt;/p>
&lt;p>CVS 一度曾经是开源软件的第一选择，比如 GNOME、KDE、THE GIMP 和 Wine，
都曾使用过 CVS 来管理。这是一个集中式的版本控制系统，同样是集中式的还有 Subversion, Visual SouceSafe
Perforce,Team Foundation Server。&lt;/p>
&lt;p>由于难以忍受 CVS,CollabNet 的开发者开发了著名的 Subversion(SVN) 来取代 CVS, Subversion 诞生于 2000 年，
时至今日，SVN 依然是最流行的集中式版本控制系统，GCC ,LLVM 等开源软件都使用 SVN 管理，代码托管网站方面，
SourceForge 提供 SVN 的代码托管。&lt;/p>
&lt;p>Visual SouceSafe（VSS）是微软开发的版本控制系统，到了 2008年，被 Team Foundation Server（TFS） 取代,
TFS 并不是传统意义的版本控制系统，而是云开发协作平台，支持 Team Foundation Version Control 和 Git,
像微软这样的企业，无论是 Windows 还是 Office 还是 其他软件，代码量都非常巨大，只有像 TFS 这样量身定做的系统才合适。&lt;/p>
&lt;p>Perforce 是一个商业的版本控制系统，在其官网 &lt;a href="https://www.perforce.com/">www.perfoce.com&lt;/a> 介绍，
有着超过10000个用户使用他们的服务，有 NVIDIA ,Sumsuing,vmware,adidas 等著名企业，而我对他的印象在是
OpenWATCOM C/C++ 编译器以及 p4merge 工具。p4merge 是 Perforce 提供的一个基于 Qt 开发的跨平台比较工具。&lt;/p>
&lt;p>与集中式版本控制系统对应的是分布式版本控制系统 (Distribution Version Control System) 比较流行的有 git 和 Mercurial,
二者均诞生于 2005 年。&lt;/p>
&lt;p>Git 由 Linux 之父， Linus Torvalds 为了替代 BitKeeper 而开发的，关于 Git 的诞生，可以看对 Linus 本人的采访：
&lt;a href="http://www.linux.com/news/featured-blogs/185-jennifer-cloer/821541-10-years-of-git-an-interview-with-git-creator-linus-torvalds/"> 10 Years of Git: An Interview with Git Creator Linus Torvalds &lt;/a>
Git 非常流行， Linux, FreeBSD, .NET Core CLR, .NET Core Fx, Minix, Android 等项目都使用 Git 来管理，
Git 的社区非常成熟，有很多代码托管网站提供托管服务，如 Github, Bitbucket, 国内有 OSC@GIT，coding，gitcafe, CSDN code, jd code 等等。&lt;/p>
&lt;p>技术上同样优秀的版本控制系统 Mercurial 的使用者少很多，也有著名的浏览器 Mozilla Firefox,服务器 Nginx,以及编程语言 Python。
Mercurial 使用 Python 实现，或许这一点也限制了 Mercurial 的发展。&lt;/p>
&lt;p>在维基百科中有一个 VCS 列表：
&lt;a href="https://en.wikipedia.org/wiki/Template:Version_control_software">Template:Version control software&lt;/a>
记录了多种版本控制系统，诞生时间，分类。&lt;/p>
&lt;p>大多数时候，开发者需要学习的版本控制系统为 Subversion 或者是 GIT。这二者已然是两个版本控制流派的代表。&lt;/p>
&lt;h2 id="git-技术内幕">Git 技术内幕&lt;/h2>
&lt;p>本节主要介绍 Git 的存储和传输&lt;/p>
&lt;h3 id="git-存储">Git 存储&lt;/h3>
&lt;p>git 仓库在磁盘上可以表现为两种形式，带有工作目录的普通仓库和不带工作目录的裸仓库。&lt;br>
我们可以创建一个标准仓库：&lt;/p>
&lt;blockquote>
&lt;p>mkdir gitrepo &amp;amp;&amp;amp;cd gitrepo &amp;amp;&amp;amp;git &amp;ndash;init &amp;amp;&amp;amp;tree -a&lt;/p>
&lt;/blockquote>
&lt;p>如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── .git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── branches
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── COMMIT_EDITMSG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── description
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── HEAD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── hooks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   ├── applypatch-msg.sample
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   ├── commit-msg.sample
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   ├── post-update.sample
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   ├── pre-applypatch.sample
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   ├── pre-commit.sample
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   ├── prepare-commit-msg.sample
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   ├── pre-push.sample
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   ├── pre-rebase.sample
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   └── update.sample
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── index
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── info
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   └── exclude
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── logs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   ├── HEAD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   └── refs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   └── heads
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   └── master
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── objects
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   ├── 89
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   │   └── 50b8b1af3c4cc712edb5a995c83a53eb03e6be
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   ├── d0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   │   └── 2d9281b58703d020c3afe3e2ace204d6d462ae
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   ├── e6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   │   └── 9de29bb2d1d6434b8b29ae775ad8c2e48c5391
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   ├── info
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   └── pack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   └── refs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── heads
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   └── master
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   └── tags
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── helloworld
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>实际上我们创建一个裸仓库会发现和普通仓库的 .git 目录结构是一致的。&lt;/p>
&lt;blockquote>
&lt;p>mkdir gitbare.git &amp;amp;&amp;amp;cd gitbare.git &amp;amp;&amp;amp;git init &amp;ndash;bare &amp;amp;&amp;amp;tree -a&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── branches
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── description
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── HEAD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── hooks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── applypatch-msg.sample
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── commit-msg.sample
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── post-update.sample
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── pre-applypatch.sample
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── pre-commit.sample
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── prepare-commit-msg.sample
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── pre-push.sample
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── pre-rebase.sample
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   └── update.sample
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── info
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   └── exclude
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── objects
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── info
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   └── pack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── refs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── heads
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── tags
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>9 directories, 13 files
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当我们创建一个仓库时，默认情况下会创建工作目录，在工作目录下有个 .git 的子目录，这才是存储库的目录。
而我们通常修改代码的目录称之为工作目录。&lt;/p>
&lt;p>众所周知，git 是分布式版本控制系统，这就意味着，只要获得了 .git 目录的完整数据，就可以在任意位置恢复成一个带有工作目录的仓库。
而 GIT 克隆一个存储库也仅仅是将 .git/objects 目录下的 object 和 .git/refs (.git/packed-refs|.git/info/refs) 所存储的引用列表传输到本地，并应用。&lt;/p>
&lt;p>对于 Subversion 一样的集中式版本控制系统，就相当于 .git 目录被托管在中央服务器上，而本地的 .svn 只是工作目录的元数据。&lt;br>
二者不同的机制带来的直接差别就是一旦中央服务器宕机，git 可以迅速的迁移到其他服务器，并且数据的丢失的可能性很小，
而 Subversion 服务器就没有这么好的运气了。&lt;/p>
&lt;p>每一次提交，git 都会把修改的文件快照，还有更新的目录结构，以及提交信息，打包成一个个 object，这些 object 被loose object,
所以 git 的 object 可能是 blob tree commit 等。打包的过程会使用 zip 压缩，这种被广泛运用的压缩格式实上压缩率较低，压缩速度也慢，
但好处有广泛的支持，专利上比较友好。&lt;/p>
&lt;p>如果调用 git gc 命令后，git-gc 会将这些 object 打包成 pack 文件，gc 过后保存文件差异，但这样是有代价的，我司的代码托管平台某台机器一日触发了 GC,
然后 CPU 占用突然上升，抢占其他进程资源，直接导致用户体验下降，如果使用的是分布式文件系统，这种现象将更加突出。关于 git gc 更多的内容可以查看
ProGit ，或者去查阅 git 技术文档。&lt;/p>
&lt;h3 id="git-传输协议">Git 传输协议&lt;/h3>
&lt;p>Git 支持多种协议 http, git , ssh, file ,以内部机制区分为哑协议和智能协议，哑协议非常简单，简单的说，
客户端通过 URL 直接拿取服务端的文件。&lt;br>
Git 智能协议实现了两类 RPC 调用，一个是 fetch-pack&amp;lt;-&amp;gt;upload-pack, 另一个是 send-pack&amp;lt;-&amp;gt;receive-pack。&lt;/p>
&lt;p>任何 Git 远程操作都需要获得远程仓库的引用列表，与自身的引用列表进行比对&lt;/p>
&lt;p>这里以 HTTP 为例&lt;/p>
&lt;ol>
&lt;li>Fetch-Upload &lt;br>
Step 1:&lt;br>
Request&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>C: GET $GIT_URL/info/refs?service=git-upload-pack HTTP/1.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Response&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>S: 200 OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>S: Content-Type: application/x-git-upload-pack-advertisement
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>S: Cache-Control: no-cache
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>S:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>S: 001e# service=git-upload-pack\n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>S: 004895dcfa3633004da0049d3d0fa03f80589cbcaf31 refs/heads/maint\0multi_ack\n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>S: 0042d049f6c27a2244e12041955e262a404c7faba355 refs/heads/master\n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>S: 003c2cb58b79488a98d2721cea644875a8dd0026b115 refs/tags/v1.0\n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>S: 003fa3c2e2402b99163d1d59756e5f207ae21cccba4c refs/tags/v1.0^{}\n
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Step 2: &lt;br>
Request&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>C: POST $GIT_URL/git-upload-pack HTTP/1.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>C: Content-Type: application/x-git-upload-pack-request
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>C:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>C: 0032want 0a53e9ddeaddad63ad106860237bbf53411d11a7\n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>C: 0032have 441b40d833fdfa93eb2908e52742248faf0ee993\n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>C: 0000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Response&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>S: 200 OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>S: Content-Type: application/x-git-upload-pack-result
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>S: Cache-Control: no-cache
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>S:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>S: ....ACK %s, continue
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>S: ....NAK
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Send-Receive
实际上 push 的过程也是 GET 和 POST， 只不过，git-upload-pack 要变成 git-receive-pack ，POST 时，后者请求体中包含有 差异 package。&lt;/li>
&lt;/ol>
&lt;p>对于 git HTTP 来说，权限验证通常是 HTTP 的一套，也就是 WWW-Authenticate， 绝大多数的 HTTP 服务器也就支持 Basic。 &lt;br>
即：&lt;/p>
&lt;blockquote>
&lt;p>user:password -&amp;gt;Base64 encode &amp;ndash;&amp;gt;dXNlcjpwYXNzd29yZA==&lt;/p>
&lt;/blockquote>
&lt;p>所以从安全上来说，如果使用 HTTP 而不是 HTTPS ， 对 GIT 远程仓库进行写操作简直就是在裸奔。&lt;/p>
&lt;p>git HTTP 支持的 HTTP 返回码并不多， 200 30x 304 403 404 410&lt;/p>
&lt;p>关于 HTTP 的更多文档细节可以去这个地址查看：
&lt;a href="https://www.kernel.org/pub/software/scm/git/docs/technical/http-protocol.html">HTTP Protocol&lt;/a>&lt;/p>
&lt;p>基于 HTTP 的智能协议和基于 SSH，Git 协议本质上并无太大的不同，都是通过这两类 RPC 调用，实现本地仓库和远程仓库的数据交换。&lt;/p>
&lt;p>HTTP 协议是通过 http smart server 运行 git-xxx-pack，对其输入数据，然后读取 git-xxx-pack 输出。
SSH 则是通过 ssh 服务器在远程机器上运行 git-xxx-pack ，数据传输的过程使用 SSH 加密。
而 GIT 协议 (git://) 协议则是 通过远程服务器 git-daemon 运行 git-xxx-pack 实现数据的交互。通常来说 git:// 无法实现差异化的权限管理，
也就是要么全部只读，全部可写。&lt;/p>
&lt;blockquote>
&lt;p>git help daemon&lt;/p>
&lt;/blockquote>
&lt;p>一些更多的技术内幕可以参考 社区大作 《Pro Git》&lt;/p>
&lt;h2 id="git-代码托管平台的开发演进">Git 代码托管平台的开发演进&lt;/h2>
&lt;p>虽然 GIT 是分布式版本控制，但是对于代码托管平台来说又是一回事了。传统的代码托管平台服务主要运行在一台计算机上，
额外的存储机器通过例如 NFS 之类的分布式文件系统被挂载到服务所在机器，成为一个存储目录。&lt;/p>
&lt;p>这样的坏处显而易见:&lt;/p>
&lt;ol>
&lt;li>网络流量过于集中，这点很好解释，网络入口都是服务所在的机器，对于 git 这样频繁 IO 读写的服务，NFS 有缓存，也显得力不从心。&lt;/li>
&lt;li>运算过于集中，git-upload-pack git-receive-pack 都运行在服务机器上，无论是将 loose object 打包成 package 还是 解包 package 成 loose object，
都是运算密集型。CPU 飙升也就很常见了。&lt;/li>
&lt;/ol>
&lt;p>如果要偷懒实现一个折衷的分布式方案，动态代理算是不错的选择，对于 HTTP 协议来说，重定向和代理都是很常见的，
使用 NGINX 之类的服务器就可以方便的实现代理，然后编写模块实现动态获取路由即可,更进一步使用 upstream 的方式
来复用连接，提高效率。而 GIT 的 HTTP 访问与 托管服务的 web 页面都可以用这种策略实现分布式。&lt;/p>
&lt;p>对于 SSH 来说，除了端口转发就是动态反向代理了。当然也可以使用 RPC, 通过编写 RPC 客户端伪装成 git-upload-pack 或
git-receive-pack 实现 SSH 的分布式。&lt;/p>
&lt;h3 id="基于-rpc-的-git-分布式设计">基于 RPC 的 GIT 分布式设计&lt;/h3>
&lt;p>客户端访问仓库时，路由智能到达 DNS 所记录的机器或者是无差别代理的机器(前端机器)，往往不能到达特定的存储机器，
开发者使用分布式文件系统或者 分布式 RPC 或者代理等多种方案实现 前端到存储的关键一步。这里主要说分布式 RPC 与
GIT smart 的应用。 &lt;br>
分布式 RPC 框架很多，其中著名的有 Apache Thrift ,此项目是 Facebook 开源并贡献给 Apache 基金会的，支持多种语言。&lt;br>
对于 GIT 操作，只需要实现 4个函数。一下是 Thrift 接口文件的一部分：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">service&lt;/span> &lt;span style="color:#58a1dd">GitSmartService&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">i32&lt;/span> &lt;span style="color:#58a1dd">Checksum&lt;/span>(&lt;span style="color:#a6be9d">1&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>&lt;span style="color:#58a1dd">i32&lt;/span> &lt;span style="color:#58a1dd">client&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#58a1dd">FetchRemoteReferences&lt;/span>(&lt;span style="color:#a6be9d">1&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#58a1dd">repositoryPath&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">binary&lt;/span> &lt;span style="color:#58a1dd">FetchRemoteDiffPackage&lt;/span>(&lt;span style="color:#a6be9d">1&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#58a1dd">repositoryPath&lt;/span>, &lt;span style="color:#a6be9d">2&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#58a1dd">clientReferences&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#58a1dd">PushRemoteRefereces&lt;/span>(&lt;span style="color:#a6be9d">1&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#58a1dd">repositoryPath&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#58a1dd">PushRemoteDiffPackage&lt;/span>(&lt;span style="color:#a6be9d">1&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#58a1dd">repositoryPath&lt;/span>, &lt;span style="color:#a6be9d">2&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>&lt;span style="color:#58a1dd">binary&lt;/span> &lt;span style="color:#58a1dd">clientPackage&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后存储服务器通过 pipe 读取存储机器上的 git-upload-pack /git-receive-pack 的输入输出。
在 Linux 上通过管道读取 git upload-pack 的输出：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">FetchRemoteReferencesCli&lt;/span>(&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">result&lt;/span>,&lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">string&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">path&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">result&lt;/span>.&lt;span style="color:#58a1dd">clear&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">pid&lt;/span>,&lt;span style="color:#58a1dd">fd&lt;/span>[&lt;span style="color:#a6be9d">2&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span>(&lt;span style="color:#58a1dd">pipe&lt;/span>(&lt;span style="color:#58a1dd">fd&lt;/span>)&lt;span style="color:#ff636f">&amp;lt;&lt;/span>&lt;span style="color:#a6be9d">0&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">printf&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;oops&lt;/span>&lt;span style="color:#a6be9d">\n&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span>((&lt;span style="color:#58a1dd">pid&lt;/span>&lt;span style="color:#ff636f">=&lt;/span>&lt;span style="color:#58a1dd">fork&lt;/span>())&lt;span style="color:#ff636f">&amp;lt;&lt;/span>&lt;span style="color:#a6be9d">0&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">printf&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;fork failed &lt;/span>&lt;span style="color:#a6be9d">\n&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&lt;span style="color:#ff636f">else&lt;/span> &lt;span style="color:#ff636f">if&lt;/span>(&lt;span style="color:#58a1dd">pid&lt;/span>&lt;span style="color:#ff636f">==&lt;/span>&lt;span style="color:#a6be9d">0&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span>(&lt;span style="color:#58a1dd">fd&lt;/span>[&lt;span style="color:#a6be9d">1&lt;/span>]&lt;span style="color:#ff636f">!=&lt;/span>&lt;span style="color:#58a1dd">STDOUT_FILENO&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">dup2&lt;/span>(&lt;span style="color:#58a1dd">fd&lt;/span>[&lt;span style="color:#a6be9d">1&lt;/span>], &lt;span style="color:#58a1dd">STDOUT_FILENO&lt;/span>) &lt;span style="color:#ff636f">!=&lt;/span> &lt;span style="color:#58a1dd">STDOUT_FILENO&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#ff636f">-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">close&lt;/span>(&lt;span style="color:#58a1dd">fd&lt;/span>[&lt;span style="color:#a6be9d">1&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span>(&lt;span style="color:#58a1dd">execlp&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;git&amp;#34;&lt;/span>,&lt;span style="color:#a6be9d">&amp;#34;git&amp;#34;&lt;/span>,&lt;span style="color:#a6be9d">&amp;#34;upload-pack&amp;#34;&lt;/span>,&lt;span style="color:#a6be9d">&amp;#34;--stateless-rpc&amp;#34;&lt;/span>,&lt;span style="color:#a6be9d">&amp;#34;--advertise-refs&amp;#34;&lt;/span>,&lt;span style="color:#58a1dd">path&lt;/span>.&lt;span style="color:#58a1dd">c_str&lt;/span>(),&lt;span style="color:#58a1dd">NULL&lt;/span>)&lt;span style="color:#ff636f">==-&lt;/span>&lt;span style="color:#a6be9d">1&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">printf&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;execlp failed &lt;/span>&lt;span style="color:#a6be9d">\n&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">exit&lt;/span>(&lt;span style="color:#a6be9d">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&lt;span style="color:#ff636f">else&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">char&lt;/span> &lt;span style="color:#58a1dd">buffer&lt;/span>[&lt;span style="color:#a6be9d">4096&lt;/span>]&lt;span style="color:#ff636f">=&lt;/span>{&lt;span style="color:#a6be9d">0&lt;/span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">close&lt;/span>(&lt;span style="color:#58a1dd">fd&lt;/span>[&lt;span style="color:#a6be9d">1&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">n&lt;/span>&lt;span style="color:#ff636f">=&lt;/span>&lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">while&lt;/span>((&lt;span style="color:#58a1dd">n&lt;/span>&lt;span style="color:#ff636f">=&lt;/span>&lt;span style="color:#58a1dd">read&lt;/span>(&lt;span style="color:#58a1dd">fd&lt;/span>[&lt;span style="color:#a6be9d">0&lt;/span>],&lt;span style="color:#58a1dd">buffer&lt;/span>,&lt;span style="color:#a6be9d">4096&lt;/span>))){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">result&lt;/span>.&lt;span style="color:#58a1dd">append&lt;/span>(&lt;span style="color:#58a1dd">buffer&lt;/span>,&lt;span style="color:#58a1dd">n&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">close&lt;/span>(&lt;span style="color:#58a1dd">fd&lt;/span>[&lt;span style="color:#a6be9d">0&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>前端服务器上，编写 模拟 git-upload-pack 或者是 git-receive-pack 的程序。用户通过 ssh 访问远程仓库时执行的 git 工具变成了模拟后的
git-upload-pack /git-receive-pack, 当使用 HTTP 访问时，可以整合成 RPC 客户端整合直接整合进 HTTP 服务器，比如 NGINX 模块，
或者也可 使用 传统的 Git Smart HTTP 库的方式，总的来说 Thrift 有多种语言支持，Git Smart HTTP 整合 Thrift RPC 并不成问题。 &lt;br>
这个唯一的问题是实现异步比较麻烦，两者都需要实现异步模式，git 仓库可能非常大，一次性克隆传输数据几百 MB 或者上 GB,
这个时候 4nK 发送非常必要。&lt;/p>
&lt;h3 id="基于-libgit2-的-smart-协议实现">基于 libgit2 的 smart 协议实现&lt;/h3>
&lt;p>GIT 除了 Linus 本人实现，kernel.org 托管的官方版本外，还有 jgit,libgit2 等，git 是一系列命令组成，几乎没有剥离出共享库的能力，
这样的后果导致其他语言使用 git 时，不得不使用管道等进程间通讯的模式与 git 工具交互。而 jgit 使用 Java 实现，基本上没有其他流行语言的绑定能力。&lt;br>
libgit2 是一个 GIT 的兼容实现，基于 C89 开发，支持绝大多数 git 特性。开发非常活跃，有多种语言绑定，如 C# Ruby 等，
其中 C# 绑定 Libgit2Sharp 被 VisualStudio, Github for Windows 等使用，而 Ruby 绑定 Rugged ，被 Github, GIT@OSC 等代码托管平台使用。&lt;/p>
&lt;p>libgit2 并没有合适的 GIT smart 服务器后端实现，多数情况下，libgit2 主要面向的是客户端，由于 git 是分布式的，对于仓库的读写也就客户端
和服务器的行为也是类似的。&lt;/p>
&lt;h2 id="subversion-内幕">Subversion 内幕&lt;/h2>
&lt;p>此部分中 &lt;strong>SVN 协议&lt;/strong> 指 Apache Subversion 程序 svn（以及兼容的客户端） 与远程服务器上的 Apache Subversion svnserve （以及兼容的服务器） 进程通讯的协议，
即 Subversion protocol，协议默认端口是 3690，基于 TCP, 传输数据使用 ABNF 范式。&lt;/p>
&lt;p>在这里指出，与 Git 完全不同的是，svn 的仓库存储在远程中央服务器上，开发者检出的代码只是特定版本，特定目录的代码，本地为工作拷贝。&lt;/p>
&lt;h3 id="subversion-http-协议实现">Subversion HTTP 协议实现&lt;/h3>
&lt;p>Subversion HTTP 协议是一种 基于 WebDAV/DeltaV 的协议，WebDAV 在 HTTP 1.1 的基础上扩展了多个 Method, 绝大多数的服务器并不支持 WebDAV,
这样的后果就是，除了 Apache 可以使用 mod_dav_svn 插件，基本上再也没有其他的服务器能快速的支持 Subversion 的 HTTP 协议了。代理还是可以的。&lt;/p>
&lt;p>WebDAV 协议在 HTTP 1.1 的基础上 使用 XML 的方式呈现数据，对于 Subversion 这种集中式版本控制系统来说，绝大多数操作都是在线的，
WebDAV 包裹这些操作就变得很繁琐。&lt;/p>
&lt;p>比如一个 update-report 请求：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;S:update-report&lt;/span> &lt;span style="color:#58a1dd">send-all=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">xmlns:S=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;svn:&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;S:src-path&amp;gt;&lt;/span>http://localhost:8080/repos/test/httpd/support&lt;span style="color:#58a1dd">&amp;lt;/S:src-path&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;S:target-revision&amp;gt;&lt;/span>2&lt;span style="color:#58a1dd">&amp;lt;/S:target-revision&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;S:entry&lt;/span> &lt;span style="color:#58a1dd">rev=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;2&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">start-empty=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&amp;lt;/S:entry&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/S:update-report&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后服务器返回：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">&amp;lt;S:update-report&lt;/span> &lt;span style="color:#58a1dd">xmlns:S=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;svn:&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">xmlns:V=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;...&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">xmlns:D=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;DAV:&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">send-all=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;S:target-revision&lt;/span> &lt;span style="color:#58a1dd">rev=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;2&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;S:open-directory&lt;/span> &lt;span style="color:#58a1dd">rev=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;2&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;D:checked-in&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;D:href&amp;gt;&lt;/span>/repos/test/!svn/ver/2/httpd/support&lt;span style="color:#58a1dd">&amp;lt;/D:href&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/D:checked-in&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;S:set-prop&lt;/span> &lt;span style="color:#58a1dd">name=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;svn:entry:committed-rev&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&lt;/span>2&lt;span style="color:#58a1dd">&amp;lt;/S:set-prop&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ... more set props ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;S:add-file&lt;/span> &lt;span style="color:#58a1dd">name=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;ab.c&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;D:checked-in&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;D:href&amp;gt;&lt;/span>/repos/test/!svn/ver/2/httpd/support/ab.c&lt;span style="color:#58a1dd">&amp;lt;/D:href&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/D:checked-in&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;S:set-prop&lt;/span> &lt;span style="color:#58a1dd">name=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;svn:entry:committed-rev&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&lt;/span>2&lt;span style="color:#58a1dd">&amp;lt;/S:set-prop&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ... more set props for the file ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;S:txdelta&amp;gt;&lt;/span>...base64-encoded file content...&lt;span style="color:#58a1dd">&amp;lt;/S:txdelta&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/S:add-file&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;S:add-directory&lt;/span> &lt;span style="color:#58a1dd">name=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;os&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">bc-url=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;/repos/test/!svn/bc/2/httpd/os&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;D:checked-in&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;D:href&amp;gt;&lt;/span>/repos/test/!svn/ver/2/httpd/os&lt;span style="color:#58a1dd">&amp;lt;/D:href&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/D:checked-in&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...directory contents...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/S:add-directory&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/S:open-directory&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">&amp;lt;/S:update-report&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>不同的请求，xml 的内容也完全不同，Subversion HTTP 协议的复杂也让很多开发者望而却步。&lt;/p>
&lt;p>在 Subversion 的路线图中，基于 WebDAV/DeltaV 的 HTTP 接入将被 基于 HTTP v2 的实现取代。&lt;br>
&lt;a href="http://svn.apache.org/repos/asf/subversion/trunk/notes/http-and-webdav/http-protocol-v2.txt">A Streamlined HTTP Protocol for Subversion&lt;/a>&lt;/p>
&lt;h3 id="subversion-svn-协议实现">Subversion SVN 协议实现&lt;/h3>
&lt;p>与 HTTP 不同的是，一个完整的基于 SVN 协议的连接中，仓库的操作是上下文相关的。&lt;br>
当客户端的连接过来时，服务器，通常说的 svnservice 将发送一段信息给客户端，告知服务器的能力,这个过程叫握手 Handshake。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>S: ( minver:number maxver:number mechs:list ( cap:word ... ) )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>( success ( 2 2 ( ) ( edit-pipeline svndiff1 absent-entries depth inherited-props log-revprops ) ) )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个时候客户端获知了这些数据，如果无法兼容，服务器，那么将断开与服务器的连接，否则，将发送请求数据给服务器，格式如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>C: response: ( version:number ( cap:word ... ) url:string
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ? ra-client:string ( ? client:string ) )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>( 2 ( edit-pipeline svndiff1 absent-entries depth mergeinfo log-revprops ) 36:svn://subversion.io/subversion/trunk 53:SVN/1.8.13-SlikSvn-1.8.13-X64 (x64-microsoft-windows) ( ) )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>与 GIT 数据包类似的地方有一点，git 每一行数据前 4 个16进制字符代表本行的长度，而 这里的 10 进制字符代表 字符的长度，比如 URL 长度36，UA 53。&lt;/p>
&lt;p>服务器此时的行为就得通过解析 URL 获得中央仓库的位置，判断协议是否兼容，而 UA 有可能为空，格式并不是非常标准，所以这是值得注意的地方。&lt;/p>
&lt;p>服务器将决定使用那种授权方式，MD5 一般是 Subversion 客户端默认的，无法第三方库支持，而 PLAIN 和 ANONYMOUS 需要 SASL 模块的支持，
在 Ubuntu 上编译 svn,先安装 libsasl2-dev。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>S: ( ( mech:word ... ) realm:string )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>客户端不支持此授权方式时，会输出错误信息，“无法协商验证方式”&lt;/p>
&lt;p>这里的 Realm 是 subversion 客户端存储用户账户用户名和密码信息的一个 key,只要 realm 一致，就会取相同的 用户名和密码。
realm &lt;a href="http://www.ietf.org/rfc/rfc2617.txt">RFC2617&lt;/a>&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>( success ( ( PLAIN ) 36:e967876f-5ea0-4ff2-9c55-ea2d1703221e ) )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果是 MD5 ，验证协商如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>S: ( mech:word [ token:string ] )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个 Token 是随机生成的 UUID, C++ 可以使用 boost 生成，也可以使用平台的 API 生成。&lt;/p>
&lt;p>如果是 PLAIN 授权机制，这里就是用户名和密码经 Base64 编码了, 用 NUL(0) 分隔&lt;/p>
&lt;blockquote>
&lt;p>usernameNULpassword &amp;ndash;&amp;gt; Base64 Encoded&lt;/p>
&lt;/blockquote>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>( PLAIN ( 44:YWRtaW5Ac3VidmVyc2lvbi5pbyU1QzBwYXNzd29yZA== ) )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>对于纯 svn 协议来说，使用 PLAIN 并不安全，且当 Subversion 只作为 GIT 代码托管平台的一个服务来说，
使用 CRAM-MD5 并不利于服务整合，这也是一个缺陷了。&lt;/p>
&lt;p>这是服务器的下一步骤：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>S: challenge: ( step ( token:string ) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>S: | ( failure ( message:string ) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>S: | ( success [ token:string ] )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Incorrect credentials:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>( failure ( 21:incorrect credentials ) )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Success&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>( success ( ) )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>随后服务器再发送存储库 UUID, capabilities 给客户端&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>S: ( uuid:string repos-url:string ( cap:word ... ) )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>( ( 36:0f475597-c342-45b4-88c5-7dc0857b8ba4 36:svn://subversion.io/subversion/trunk ( edit-pipeline svndiff1 absent-entries depth inherited-props log-revprops ))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果是 svn up/commit 或者其他的操作，这个时候会检查 uuid 是否匹配，当然也会检查 URL 是否匹配。&lt;/p>
&lt;p>如果客户端觉得一切都 OK 啦，那么就会开始下一阶段的操作，command 模式，这些规则可以从 Subversion 官方存储库查看
&lt;a href="http://svn.apache.org/repos/asf/subversion/trunk/subversion/libsvn_ra_svn/protocol">Subversion Protocol&lt;/a>&lt;/p>
&lt;p>与 GIT 或者 SVN HTTP 不同的是，一个完整的 基于 svn 协议的 SVN 操作，只需要建立一次 socket，Subversion 客户端此时是阻塞的，并且屏蔽了 Ctrl+C 等
信号， 仓库体积巨大时，这种对连接资源的占用非常突出，因为有数据读取， socket 并不会超时。单纯按并发来算，svn 服务器的并发就收到了限制。&lt;/p>
&lt;h3 id="subversion-兼容实现">Subversion 兼容实现&lt;/h3>
&lt;p>Github 基于 HTTP 协议的方式实现了对 Subversion 的兼容，而 GIT@OSC 基于 svn 协议方式实现了对 Subversion 的不完全兼容。&lt;/p>
&lt;p>基于 HTTP 协议实现的 Subversion 兼容服务和 基于 SVN 协议的 Subversion 兼容服务二者并不能说谁就一定好，HTTP 协议很容易导致网关超时，
多大数情况下，一次完整的操作时成千上万的 HTTP 请求构成，HTTP 协议支持需要 HTTP 服务器能够支持 WebDAV, XML 解析过程比较麻烦，
Subversion 官方也计划使用 HTTP v2 取代 WebDAV，但 HTTP 协议的好处还是有的，比如很多企业并不一定开放 SVN 端口 3690，
可以和 gitlab 之类的服务整合。&lt;/p>
&lt;p>而 SVN 协议也有不好的地方，比如连接时间过长，服务器并发上不去，容易阻塞，与 HTTP 服务整合不便，但同时 SVN 协议能够支持较大存储库。&lt;/p>
&lt;p>实际上兼容实现 SVN 接入往往没有原生的 SVN 服务好，这点事毋庸置疑的。&lt;/p>
&lt;h3 id="subversion-协议代理服务器的实现">Subversion 协议代理服务器的实现&lt;/h3>
&lt;p>前面 SVN 协议，虽然不全，但是那些协议内容足够实现一个 SVN 协议动态代理服务器了。普通代理服务器的实现比较简单，具有路由能力的代理服务器
则有点难度，主要难度体现在需要解析特定协议的请求内容，然后得到用户请求资源所在的服务器。&lt;/p>
&lt;p>笔者在 2015 年底实现了一个 SVN 协议动态代理服务器，以下是实现思路&lt;/p>
&lt;p>在客户端 C 和代理服务器 S 建立连接后， S 向 C 发送一个数据包：&lt;/p>
&lt;ul>
&lt;li>服务器头&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>#S to C
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>( success ( 2 2 ( ) ( edit-pipeline svndiff1 absent-entries depth inherited-props log-revprops ) ) )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>C 接收到 S 的数据后，必须做出选择，并发送第一个请求给 S。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>#C to S
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>( 2 ( edit-pipeline svndiff1 absent-entries depth mergeinfo log-revprops ) 43:svn://subversion.io/apache/subversion/trunk 53:SVN/1.8.13-SlikSvn-1.8.13-X64 (x64-microsoft-windows) ( ) )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>S 接收到 C 的请求后，解析 数据包，提取到 URL 为 svn://subversion.io/apache/subversion/trunk , 而 Gitlab 的规则是 host/user/repo,
如果不同用户的存储库放在不同机器上，这个时候提取到用户为 apache, 交由路由选择模块去处理得到后端的地址，也就是真实 svnserve 的 IP 和端口。&lt;/p>
&lt;p>建立与后端服务器 B 的连接。这个时候 S 读取 B 的数据包，也就是前面的服务器头,接收完毕直接丢弃即可，然后将客户端 C 的头请求转发给后端服务器。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>#S to B
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>( 2 ( edit-pipeline svndiff1 absent-entries depth mergeinfo log-revprops ) 43:svn://subversion.io/apache/subversion/trunk 53:SVN/1.8.13-SlikSvn-1.8.13-X64 (x64-microsoft-windows) ( ) )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里值得注意的是 svnkit，Subversion Javahl 并没有添加 UA 字符串，所以解析时略过即可。&lt;/p>
&lt;p>至此，代理服务器的后面就不必关系细节了，通常使用 Boost.ASIO 等异步框架，在使用 Boost.ASIO 时，先以阻塞的方式与客户端通信，待到与后端存储服务器
建立连接后才使用异步的方式转发数据包。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>Client &amp;lt;---&amp;gt; Proxy Server &amp;lt;---&amp;gt; Backend Subversion Server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>一个基本的 SVN 协议动态代理服务器就实现了。&lt;/p>
&lt;h2 id="结尾">结尾&lt;/h2>
&lt;p>如果你不是专业的 Git 或者 Subversion 开发者，你可能会觉得上面的内容没什么用处，实际上也没什么技术难度。&lt;/p>
- https://forcemz.net/posts/2015/2015-10-16-dev-vcs/ - Copyright (c) 2009-2024 J23</description></item><item><title>软件的变革与 AOT</title><link>https://forcemz.net/posts/2015/2015-06-16-aot/</link><pubDate>Tue, 16 Jun 2015 21:30:16 +0800</pubDate><guid>https://forcemz.net/posts/2015/2015-06-16-aot/</guid><description>Charlie's Rethinking https://forcemz.net/posts/2015/2015-06-16-aot/ -&lt;h2 id="前言">前言&lt;/h2>
&lt;p>AOT 即 Ahead of Time Compilation,即运行前编，与之对应的是 JIT。众所周知，程序的源码并不能够被处理器直接执行，编程语言基本上都是人类可读，编译器或者解释器就需要将源代码转变为 CPU 可以操作的指令。比如一个加法函数最终需要执行 addl 汇编指令对应的机器码。&lt;/p>
&lt;p>add.c&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">add&lt;/span>(&lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">x&lt;/span>,&lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">y&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">x&lt;/span>&lt;span style="color:#ff636f">+&lt;/span>&lt;span style="color:#58a1dd">y&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>clang -S add.c&lt;/p>
&lt;/blockquote>
&lt;p>汇编文件 add.s&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-asm" data-lang="asm">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">.text&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">.def&lt;/span> &lt;span style="color:#58a1dd">add&lt;/span>&lt;span style="color:#828b96;font-style:italic">;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">.scl&lt;/span> &lt;span style="color:#a6be9d">2&lt;/span>&lt;span style="color:#828b96;font-style:italic">;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">.type&lt;/span> &lt;span style="color:#a6be9d">32&lt;/span>&lt;span style="color:#828b96;font-style:italic">;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">.endef&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">.globl&lt;/span> &lt;span style="color:#58a1dd">add&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">.align&lt;/span> &lt;span style="color:#a6be9d">16&lt;/span>, &lt;span style="color:#a6be9d">0x90&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">add:&lt;/span> &lt;span style="color:#828b96;font-style:italic"># @add
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>&lt;span style="color:#58a1dd">.Ltmp0:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">.seh_proc&lt;/span> &lt;span style="color:#58a1dd">add&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic"># BB#0:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">pushq&lt;/span> &lt;span style="color:#58a1dd">%rax&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">.Ltmp1:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">.seh_stackalloc&lt;/span> &lt;span style="color:#a6be9d">8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">.Ltmp2:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">.seh_endprologue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">movl&lt;/span> &lt;span style="color:#58a1dd">%ecx&lt;/span>, &lt;span style="color:#a6be9d">4&lt;/span>(&lt;span style="color:#58a1dd">%rsp&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">movl&lt;/span> &lt;span style="color:#58a1dd">%edx&lt;/span>, (&lt;span style="color:#58a1dd">%rsp&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">movl&lt;/span> &lt;span style="color:#a6be9d">4&lt;/span>(&lt;span style="color:#58a1dd">%rsp&lt;/span>), &lt;span style="color:#58a1dd">%ecx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">addl&lt;/span> &lt;span style="color:#58a1dd">%ecx&lt;/span>, &lt;span style="color:#58a1dd">%edx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">movl&lt;/span> &lt;span style="color:#58a1dd">%edx&lt;/span>, &lt;span style="color:#58a1dd">%eax&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">popq&lt;/span> &lt;span style="color:#58a1dd">%rdx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">retq&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">.Ltmp3:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">.seh_endproc&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>对于转变为机器码的时机，不同的语言有着不同的选择，或是完全转变为机器码后运行，或是在运行时转变为机器码。AOT 便是运行前转为机器码。
，事实上C/C++ D,Pascal,Fortran之类的语言本质上也是 AOT,但本文讨论的 AOT 主要针对的是对于 Java,NET 等框架或语言的 AOT。&lt;/p>
&lt;p>以 Java 为例，Java 源码被编译器 Java Vitrual Machine ByteCode,当需要执行的时候，将 JVM 指令一条一条的转变为对应处理器的指令，后执行，（实际上x86 上模拟执行 ARM 架构的程序也可以是这个套路。）但是这个效率并不高，而且不好优化，而 JIT 的做法是将字节码编译成对于处理器的指令后运行。这比纯解释又快了许多。&lt;/p>
&lt;h2 id="llvm-编译器基础设施的发迹">LLVM 编译器基础设施的发迹&lt;/h2>
&lt;p>数年前，LLVM 的官网对于 LLVM 项目的介绍是: &amp;ldquo;Low Level Virtual Machine&amp;rdquo;,低级虚拟机，而现在对 LLVM 的介绍是：&lt;strong>The LLVM Compiler Infrastructure&lt;/strong>，即编译器基础设施。 在程序员圈子中对 LLVM 最深刻的影响来自于 Clang，C 家族编译器(C/C++ /Objective-C/C++ Compiler)前端，Clang 是 LLVM 最成功的实现，在平台支持上，Clang 短短几年达到了 GNU C Compliton (GCC) 20年的高度。 Clang 在编译速度，占用内存，以及整个框架的设计上都是可圈可点的，对用户友好的开源许可证 &lt;em>&lt;a href="http://opensource.org/licenses/UoI-NCSA.php">The University of Illinois/NCSA Open Source License (NCSA)&lt;/a>&lt;/em>. 实际上就有商业编译器依赖Clang实现，比如：Embarcadero™ C++ Builder 的 Win64 编译器 bcc64 就是完全基于 Clang 实现（3.1 trunk）。而 C++ Builder 前身是 Borland C/C++&amp;amp;Turbo C.&lt;/p>
&lt;p>下面bcc64的命令实例:&lt;/p>
&lt;blockquote>
&lt;p>bcc64 -cc1 -D_RTLDLL -fborland-extensions -triple=x86_64-pc-win32-elf -emit-obj -std=c++11 -o Hello.o Hello.cpp&lt;/p>
&lt;/blockquote>
&lt;p>看过**《C/C++圣战》** 大抵也知道 Borland C/C++ 曾经是多么的辉煌，而现在却选择了 Clang 来实现 Win64 工具链 （C++ Builder 10 32位也使用了 clang）。&lt;/p>
&lt;p>一方面，单从 C 语言家族来讲 Clang 基于库的模块化设计，易于 IDE 集成及其他用途的重用。比如 Sublime Text，VIM，Emacs 都有基于 Clang 实现 C/C++ 代码自动补全，Clang 提供一个 libclang 的库，可以编译成动态也可以编译成静态库，SublimeText 的 C/C++ 插件 SublimeClang 就是使用 libclang.dll(so/dylib)。其他的编译器对于 IDE 集成的支持是远远不及的，比如 Visual Studio IDE 对于 C++ 的智能提示是使用 &lt;a href="http://www.edg.com/index.php?location=c_frontend">EDG C++ Frontend &lt;/a> 目前 Clang 在 C++ 的标准上，远远优于其他主流编译器 Microsoft C++(cl),GCC (g++)。&lt;/p>
&lt;p>另一方面，LLVM 实现了一套可扩展的编译器实现方案，任何人需要实现一个语言，只需要实现一个前段，然后将源码编译成 LLVM 字节码，也就是 LLVM IR, 然后 LLVM llc 将源码编译成不同平台的机器码，并且优化。比如最近正火的语言 Rust 后端也使用了 LLVM,以及 D 语言编译器 ldc，Go 语言编译器 llgo 等等。而 LLVM 不仅仅拥有 AOT 的能力，而且还有 JIT 模块, &lt;a href="http://llvm.org/svn/llvm-project/llvm/trunk/lib/ExecutionEngine/">LLVM ExecutionEngine&lt;/a> ExecutionEngine 的 API 并不是非常稳定。&lt;/p>
&lt;h3 id="传统的编译器">传统的编译器&lt;/h3>
&lt;p>传统编译器需要经过前端(Frontend)，优化(Optimizer)，后端(Backend)然后将源代码转变为机器码。 &lt;br>
&lt;img src="http://www.aosabook.org/images/llvm/SimpleCompiler.png" alt="SimpleCompiler">&lt;br>
Three Major Components of a Three-Phase Compiler&lt;/p>
&lt;p>如果需要增加一种新的平台的支持，这种模型无法提供更多的可重用的代码。&lt;/p>
&lt;p>要添加其他语言的支持模型如下： &lt;br>
&lt;img src="http://www.aosabook.org/images/llvm/RetargetableCompiler.png" alt="Retargetable"> &lt;br>
Retargetablity&lt;/p>
&lt;h3 id="基于-llvm-的编译器">基于 LLVM 的编译器&lt;/h3>
&lt;p>基于 LLVM 的编译器架构如下： &lt;br>
&lt;img src="http://www.aosabook.org/images/llvm/LLVMCompiler1.png" alt="LLVMCompiler1">&lt;br>
LLVM&amp;rsquo;s Implementation of the Three-Phase Design&lt;/p>
&lt;p>基于 LLVM 的编译器前端将源码编译成 LLVM IR,然后在使用优化编译器编译成对应平台的机器码，一个很鲜明的对比是 D语言的编译器 DMD 与 ldc,DMD 是传统的编译器，而 ldc 是基于 LLVM 的编译器，DMD 目前依然只支持 x86/x86_64 架构处理器，而 ldc 可以生成 ARM64,PPC,PPC64, mips64 架构的机器码。详细的介绍可查看：
&lt;a href="http://wiki.dlang.org/Compilers#Comparison">Dlang Compilers&lt;/a>&lt;/p>
&lt;p>LLVM IR 可以反汇编成人类可读的形式，LLVM IR 类似于 RSIC 指令。&lt;/p>
&lt;blockquote>
&lt;p>clang add.c -S -emit-llvm&lt;/p>
&lt;/blockquote>
&lt;p>add.ll&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-llvm" data-lang="llvm">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">; ModuleID = &amp;#39;add.bc&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>&lt;span style="color:#ff636f">target&lt;/span> &lt;span style="color:#ff636f">datalayout&lt;/span> = &lt;span style="color:#a6be9d">&amp;#34;e-m:w-i64:64-f80:128-n8:16:32:64-S128&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">target&lt;/span> &lt;span style="color:#ff636f">triple&lt;/span> = &lt;span style="color:#a6be9d">&amp;#34;x86_64-w64-windows-gnu&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">; Function Attrs: nounwind uwtable
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>&lt;span style="color:#ff636f">define&lt;/span> &lt;span style="color:#ff636f">i32&lt;/span> &lt;span style="color:#58a1dd">@add&lt;/span>(&lt;span style="color:#ff636f">i32&lt;/span> &lt;span style="color:#58a1dd">%y&lt;/span>, &lt;span style="color:#ff636f">i32&lt;/span> &lt;span style="color:#58a1dd">%x&lt;/span>) &lt;span style="color:#58a1dd">#0&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">%1&lt;/span> = &lt;span style="color:#ff636f">alloca&lt;/span> &lt;span style="color:#ff636f">i32&lt;/span>, &lt;span style="color:#ff636f">align&lt;/span> &lt;span style="color:#a6be9d">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">%2&lt;/span> = &lt;span style="color:#ff636f">alloca&lt;/span> &lt;span style="color:#ff636f">i32&lt;/span>, &lt;span style="color:#ff636f">align&lt;/span> &lt;span style="color:#a6be9d">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">store&lt;/span> &lt;span style="color:#ff636f">i32&lt;/span> &lt;span style="color:#58a1dd">%y&lt;/span>, &lt;span style="color:#ff636f">i32&lt;/span>* &lt;span style="color:#58a1dd">%1&lt;/span>, &lt;span style="color:#ff636f">align&lt;/span> &lt;span style="color:#a6be9d">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">store&lt;/span> &lt;span style="color:#ff636f">i32&lt;/span> &lt;span style="color:#58a1dd">%x&lt;/span>, &lt;span style="color:#ff636f">i32&lt;/span>* &lt;span style="color:#58a1dd">%2&lt;/span>, &lt;span style="color:#ff636f">align&lt;/span> &lt;span style="color:#a6be9d">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">%3&lt;/span> = &lt;span style="color:#ff636f">load&lt;/span> &lt;span style="color:#ff636f">i32&lt;/span>, &lt;span style="color:#ff636f">i32&lt;/span>* &lt;span style="color:#58a1dd">%2&lt;/span>, &lt;span style="color:#ff636f">align&lt;/span> &lt;span style="color:#a6be9d">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">%4&lt;/span> = &lt;span style="color:#ff636f">load&lt;/span> &lt;span style="color:#ff636f">i32&lt;/span>, &lt;span style="color:#ff636f">i32&lt;/span>* &lt;span style="color:#58a1dd">%1&lt;/span>, &lt;span style="color:#ff636f">align&lt;/span> &lt;span style="color:#a6be9d">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">%5&lt;/span> = &lt;span style="color:#ff636f">add&lt;/span> &lt;span style="color:#ff636f">nsw&lt;/span> &lt;span style="color:#ff636f">i32&lt;/span> &lt;span style="color:#58a1dd">%3&lt;/span>, &lt;span style="color:#58a1dd">%4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">ret&lt;/span> &lt;span style="color:#ff636f">i32&lt;/span> &lt;span style="color:#58a1dd">%5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">attributes&lt;/span> &lt;span style="color:#58a1dd">#0&lt;/span> = { &lt;span style="color:#ff636f">nounwind&lt;/span> &lt;span style="color:#ff636f">uwtable&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;disable-tail-calls&amp;#34;&lt;/span>=&lt;span style="color:#a6be9d">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;less-precise-fpmad&amp;#34;&lt;/span>=&lt;span style="color:#a6be9d">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;no-frame-pointer-elim&amp;#34;&lt;/span>=&lt;span style="color:#a6be9d">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;no-infs-fp-math&amp;#34;&lt;/span>=&lt;span style="color:#a6be9d">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;no-nans-fp-math&amp;#34;&lt;/span>=&lt;span style="color:#a6be9d">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;stack-protector-buffer-size&amp;#34;&lt;/span>=&lt;span style="color:#a6be9d">&amp;#34;8&amp;#34;&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;target-cpu&amp;#34;&lt;/span>=&lt;span style="color:#a6be9d">&amp;#34;x86-64&amp;#34;&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;target-features&amp;#34;&lt;/span>=&lt;span style="color:#a6be9d">&amp;#34;+sse,+sse2&amp;#34;&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;unsafe-fp-math&amp;#34;&lt;/span>=&lt;span style="color:#a6be9d">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6be9d">&amp;#34;use-soft-float&amp;#34;&lt;/span>=&lt;span style="color:#a6be9d">&amp;#34;false&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">!llvm.module.flags&lt;/span> = !{&lt;span style="color:#58a1dd">!0&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">!llvm.ident&lt;/span> = !{&lt;span style="color:#58a1dd">!1&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">!0&lt;/span> = !{&lt;span style="color:#ff636f">i32&lt;/span> &lt;span style="color:#a6be9d">1&lt;/span>, &lt;span style="color:#58a1dd">!&amp;#34;PIC Level&amp;#34;&lt;/span>, &lt;span style="color:#ff636f">i32&lt;/span> &lt;span style="color:#a6be9d">2&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">!1&lt;/span> = !{&lt;span style="color:#58a1dd">!&amp;#34;clang version 3.7.0 (tags/RELEASE_370/final)&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用以下命令即可：&lt;/p>
&lt;blockquote>
&lt;p>clang add.ll -c&lt;/p>
&lt;/blockquote>
&lt;p>也可以使用 llc 命令编译&lt;/p>
&lt;p>于2010年Chris Lattner 被 ACM 授予 &amp;ldquo;Programming Languages Software Award&amp;rdquo; 。2014年 Chris Lattner 作为苹果编译器开发团队的首席架构师，在 Apple WWDC 2014 推出了Swift。而 Swift 就是基于 LLVM 的，使用如下命令编译 swift 代码，即可得到 LLVM IR 代码。&lt;/p>
&lt;blockquote>
&lt;p>swiftc -S -emit-object hello.swift&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-swift" data-lang="swift">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">// hello.swift&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">print&lt;/span>(&lt;span style="color:#a6be9d">&amp;#34;Hello, world!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="http://romain.goyet.com/articles/running_swift_code_on_android/">通过 LLVM 在 Android 上运行 Swift 代码&lt;/a>&lt;/p>
&lt;p>整个 LLVM 项目推出了很多重量级工具，除了 Clang 之外，还有 LLVM 调试器 lldb, LLVM 连接器 lld,目前都可以在 Windows, Linux ,Mac ,以及 BSD 上运行，目前 XCode 自带有这些工具，Windows 上，clang lld 都是能够安装集成到 Visual Studio 的。&lt;/p>
&lt;p>很多公司贡献了代码到 LLVM 项目中，或使用 LLVM 的工具改善自己的产品，比如 Google ,Google NDK 以及 PNacl 都使用了 LLVM 的工具，而 LLVM 的许多特性就是 Google 实现的，比如地址消毒剂 AddressSanitizer（GCC 目前也支持了）。还有 Intel OpenCL, Adobe, NVIDIA Nucda,Microsoft WinObjc。&lt;/p>
&lt;h2 id="android-与-aot">Android 与 AOT&lt;/h2>
&lt;p>LLVM 优异的架构并没有被 Android 广泛使用。Android 最初由 Andy Rubin 开发作为数码相机的操作系统，使用 Linux 内核，后来发现市场需求不大被改造成智能手机操作系统反而获得了巨大成功。Rubin 选择了具有很大争议的 Java 作为 Android 的应用开发语言，Java 基于 JVM，能够在支持 JVM 的平台上运行，Java 的开发者非常多，你可以在中国任何一个理工科大学找到学习 Java 的学生，漫天遍地的 Java 培训机构，这对于 Android 来说非常有利，从 Google 收购 Android开始，这一切已然水到渠成。Android 使用的是 Dalvik 的虚拟机，这与 Java 官方的 JVM 技术上稍微有些差异，JVM 是一种堆栈机器，而 Dalvik 是&lt;a href="http://zh.wikipedia.org/wiki/%E5%AF%84%E5%AD%98%E5%99%A8%E6%9C%BA">寄存器机&lt;/a>,孰优孰劣，也不太好评价，正如 CISC 与 RSIC 的争议，实际上对于软件而言，架构，编码实现，编译器（解析器），都会给软件的性能带来巨大的影响，时常发现某某 JavaScript 升级换代，性能增加一倍。&lt;/p>
&lt;h4 id="android-runtime">Android Runtime&lt;/h4>
&lt;p>2014年6月，Google 推出 Android 5.0(Android Lollipop) ，ART 完全取代了 Dalvik。 &lt;br>
&lt;img src="https://upload.wikimedia.org/wikipedia/commons/2/25/ART_view.png" alt="ART View"> ART 本质上一个混合的 AOT 方案，它还实现了 JVM 解释器。&lt;/p>
&lt;p>Andy Rubin 先后在苹果 微软 谷歌公司工作过。&lt;/p>
&lt;h2 id="net-与-aot">.NET 与 AOT&lt;/h2>
&lt;p>说起.NET 就不得不谈到 &lt;a href="http://zh.wikipedia.org/wiki/%E5%AE%89%E5%BE%B7%E6%96%AF%C2%B7%E6%B5%B7%E5%B0%94%E6%96%AF%E4%BC%AF%E6%A0%BC">Anders Hejlsberg&lt;/a> 此人，他来自丹麦，Turbo Pascal 最开始就是他开发的，Delphi/C#之父，C#&amp;amp;.NET 的首席架构师，TypeScript 的首席架构师，主持开发了 .NET Framework，Visual Basic.NET，以及最新的 .NET 编译器 &lt;a href="http://msdn.microsoft.com/en-us/vstudio/roslyn.aspx">Roslyn&lt;/a> 。&lt;br>
值得注意的是 TypeScript 完全基于 ECMAScript 6标准草案开发，Java 的流行以至于微软也坐不住，在上个世纪末，微软也开发了自己的Java虚拟机，最初微软推出的是Visual J++，而在Anders加入微软后立即被委以重任，Visual J++在性能上甚至超越了Sun JVM，这个Sun带来了恐慌，Sun 以破坏兼容性将微软告上公堂，微软最终放弃了Java的开发，而C#与.NET也诞生了，.NET在设计上确实借鉴了Java的很多理念，并且超越了Java，这也是 Anders 从 Borland 就存在心中的构想。&lt;/p>
&lt;p>类似于 LLVM 的研究，微软很早就有，这个项目是：&lt;/p>
&lt;p>&lt;strong>Phoenix Compiler and Shared Source Common Language Infrastructure&lt;/strong>&lt;/p>
&lt;p>现在的 Microsoft Visual C++ 就有 Phoenix 编译器架构的技术积累。&lt;/p>
&lt;p>Chris Lattner 曾于2004年在微软研究院实习，参与微软的 &lt;a href="http://research.microsoft.com/en-us/collaboration/focus/cs/phoenix.aspx">Phoenix Compiler Framework&lt;/a> 项目，或许对于微软来说，应该感到遗憾，Chris Lattner 并没有最终加入微软，而是加入了苹果公司。很多时候技术是相互影响的，好的技术最后都会殊途同归。&lt;/p>
&lt;p>在我刚进入大学的时候，刚刚学会编程，曾经下载过08版的 Phoenix Compiler 编译器工具，并且也试用过，不过到现在已经无法下载了。而 Phoenix Compiler Framework与LLVM的理念确实很相似，并且可以得知的是，Phoenix 很多的技术被整合到微软的 Microsoft C/C++ Compiler，就技术上而言 Phoenix 与 LLVM 有许多相似之处，比如都能转变成 IR，拥有软件优化和分析框架，然而具体的中间语言是不一样的。&lt;/p>
&lt;p>Phoenix 的架构师 Andy Ayers 本人也是 LLILC 的核心成员。&lt;/p>
&lt;blockquote>
&lt;p>Phoenix不仅仅限于一个编译器，它还是一个软件优化和分析框架，能被其他编译器和工具使用。 它能生成二进制代码，也能输出MSIL程序集。源代码可以经过分析，
并被表示为 IR（中间表示，Intermediate Representation）形式，这种形式可以在后期被各种工具分析和处理。 &lt;br>
&amp;mdash;-InfoQ: &lt;a href="http://www.infoq.com/cn/news/2008/05/Phoenix-Compiler-Framework">Phoenix编译器框架说明&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>在 .NET 未开源时，微软研究院还提供了一个 .NET 的学习代码 “&lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=4917">Shared Source Common Language Infrastructure&lt;/a>”的源代码下载。&lt;/p>
&lt;p>为什么说些无关的东西？实际上，微软的 .NET Native 实现离不开 Phoenix 编译器的技术研究。&lt;/p>
&lt;p>.NET Framework 三阶段图： &lt;br>
&lt;img src="https://raw.githubusercontent.com/fstudio/Beaot/master/doc/Images/dotNet/CLR_diag.png" alt="DotCLR">
.Net Three-Phase&lt;/p>
&lt;p>.NET Framewok Native &amp;amp; JIT 模型
&lt;img src="https://raw.githubusercontent.com/fcharlie/site-res/master/compilers/dotnativecoreclr.png" alt="DotNetCoreCLR">&lt;/p>
&lt;h3 id="net-compiler-platform-roslyn">.NET Compiler Platform (&amp;ldquo;Roslyn&amp;rdquo;)&lt;/h3>
&lt;p>Roslyn 是 Microsoft 推出的新一代 C#/VB.NET 编译器,相对于传统的 .NET C# 编译器,整个生产流程结构非常清晰,和 C++ 中的 clang 类比丝毫不为过,而 Visual Studio 2015 也充分利用了 Roslyn 的优秀特性.&lt;/p>
&lt;p>目前无论是 Microsoft 还是 Mono 都参与到了 Roslyn 的开发过程中,利用 Roslyn ,一些第三方的 C# AOT 解决方案迅速的发展起来.&lt;/p>
&lt;p>编译器管道: &lt;br>
&lt;img src="https://github.com/dotnet/roslyn/wiki/images/compiler-pipeline.png" alt="Pipe">&lt;/p>
&lt;p>编译器管道及对应的 API: &lt;br>
&lt;img src="https://github.com/dotnet/roslyn/wiki/images/compiler-pipeline-api.png" alt="API">&lt;/p>
&lt;p>编译器 API 和 服务: &lt;br>
&lt;img src="https://github.com/dotnet/roslyn/wiki/images/compiler-pipeline-lang-svc.png" alt="svc">&lt;/p>
&lt;p>Roslyn APIs: &lt;br>
&lt;img src="https://raw.githubusercontent.com/fstudio/Beaot/master/doc/Images/Roslyn.png" alt="Roslyn">&lt;/p>
&lt;h3 id="net-native">.NET Native&lt;/h3>
&lt;p>.NET 的 AOT 解决方案在 Mono 中很早就出现了，Mono 平台支持 Android 以及 iOS 的 App 开发,由于 iOS 禁止第三方软件的 JIT 编译,在iOS 平台,Mono 使用的就是 Full AOT 策略.&lt;/p>
&lt;p>Program.cs&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#58a1dd">System&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">namespace&lt;/span> &lt;span style="color:#58a1dd">hello&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">class&lt;/span> &lt;span style="color:#58a1dd">MainClass&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">static&lt;/span> &lt;span style="color:#ff636f">void&lt;/span> &lt;span style="color:#58a1dd">Main&lt;/span> (&lt;span style="color:#ff636f">string&lt;/span>[] &lt;span style="color:#58a1dd">args&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Console&lt;/span>.&lt;span style="color:#58a1dd">WriteLine&lt;/span> (&lt;span style="color:#a6be9d">&amp;#34;Hello World!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用 Mono 编译:&lt;/p>
&lt;blockquote>
&lt;p>mcs Program.cs&lt;/p>
&lt;/blockquote>
&lt;p>然后使用 mono AOT 编译成机器码:&lt;/p>
&lt;blockquote>
&lt;p>mono &amp;ndash;aot=full,nrgctx-trampolines=8096,nimt-trampolines=8096,ntrampolines=4048 Program.exe&lt;/p>
&lt;/blockquote>
&lt;p>使用 objdump 反汇编:&lt;/p>
&lt;blockquote>
&lt;p>objdump -d Program.exe.so &amp;gt;Program.s&lt;/p>
&lt;/blockquote>
&lt;p>这里只反汇编了执行段,Program.s:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Program.exe.so： 文件格式 elf64-x86-64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Disassembly of section .text:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0000000000001000 &amp;lt;hello_MainClass__ctor-0x10&amp;gt;:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1000: 90 nop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1001: 90 nop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1002: 90 nop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1003: 90 nop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1004: 90 nop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1005: 90 nop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1006: 90 nop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1007: 90 nop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1008: 90 nop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1009: 90 nop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 100a: 90 nop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 100b: 90 nop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 100c: 90 nop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 100d: 90 nop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 100e: 90 nop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 100f: 90 nop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0000000000001010 &amp;lt;hello_MainClass__ctor&amp;gt;:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1010: 48 83 ec 08 sub $0x8,%rsp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1014: 48 83 c4 08 add $0x8,%rsp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1018: c3 retq
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1019: 00 00 add %al,(%rax)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 101b: 00 00 add %al,(%rax)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 101d: 00 00 add %al,(%rax)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0000000000001020 &amp;lt;hello_MainClass_Main_string__&amp;gt;:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1020: 48 83 ec 08 sub $0x8,%rsp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1024: 49 8b 3d e5 24 00 00 mov 0x24e5(%rip),%rdi # 3510 &amp;lt;__bss_start+0x20&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 102b: e8 20 00 00 00 callq 1050 &amp;lt;plt_System_Console_WriteLine_string&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1030: 48 83 c4 08 add $0x8,%rsp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1034: c3 retq
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1035: 00 00 add %al,(%rax)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1037: 00 90 90 90 90 00 add %dl,0x909090(%rax)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0000000000001050 &amp;lt;plt_System_Console_WriteLine_string&amp;gt;:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1050: ff 25 ca 24 00 00 jmpq *0x24ca(%rip) # 3520 &amp;lt;__bss_start+0x30&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1056: 0e (bad)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0000000000001060 &amp;lt;method_addresses&amp;gt;:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1060: e8 ab ff ff ff callq 1010 &amp;lt;hello_MainClass__ctor&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1065: e8 b6 ff ff ff callq 1020 &amp;lt;hello_MainClass_Main_string__&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 106a: e8 f1 ff ff ff callq 1060 &amp;lt;method_addresses&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>.NET Framework 一直有一个工具, NGEN (Native Image Generator), NGEN 会将程序集简单的编译成机器码,在C:\Windows\Microsoft.Net\assembly 目录就是 NGEN 的镜像. NGEN 依然无法脱离 .NET Framework,任然需要 JIT,程序运行的时候往往是 MSIL 和 MachineCode 混合运行.&lt;/p>
&lt;p>Windows update 更新重启后,经常可以在任务管理器里面发现 NGEN 进程疯狂的执行任务.&lt;/p>
&lt;p>在没有 .NET Native 时, Windows Phone 中,.NET App 在安装后就会通过 NGEN 转变为机器码,以此来提升运行速度,降低功耗.对于 .NET Native 的需求,随着 Microsoft 的 移动战略的实施变得尤为迫切.&lt;/p>
&lt;p>早在2013年就有传闻，.NET将推出.NET Native,时至今日,基于 .NET 的 Windows 10 通用应用程序,都开始开启 .NET Native 支持.&lt;/p>
&lt;p>.NET Native 基本的流程如下:&lt;/p>
&lt;blockquote>
&lt;p>App IL + FX -&amp;gt; MCG　-&amp;gt; Interop.g.cs -&amp;gt; CSC -&amp;gt; Interop.dll -&amp;gt; Merge -&amp;gt; IL transform -&amp;gt; NUTC -&amp;gt; RhBind -&amp;gt; .EXE&lt;/p>
&lt;/blockquote>
&lt;p>.NET Native 工具链将所有依赖到的程序集反汇编成 C# 源码,使用 C# 编译器再编译成一个 dll, dll 再转 IR ,使用 &lt;code>nutc_driver&lt;/code> 编译成机器码, 而 &lt;code>nutc_driver&lt;/code> 代码是使用了 Microsoft C++ 后端代码. 最后生成一个 dll 和一个 Bootstrap 的 EXE, dll 导出的函数为:&lt;/p>
&lt;blockquote>
&lt;p>RHBinder__ShimExeMain&lt;/p>
&lt;/blockquote>
&lt;p>使用 Visual C++ 工具 dumpbin 查看符号信息：&lt;/p>
&lt;blockquote>
&lt;p>dumpbin /EXPORTS App2.dll&lt;/p>
&lt;/blockquote>
&lt;p>得到的结果如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>Microsoft (R) COFF/PE Dumper Version 14.00.23303.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Copyright (C) Microsoft Corporation. All rights reserved.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Dump of file app2.dll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>File Type: DLL
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Section contains the following exports for
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 00000000 characteristics
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0 time date stamp Thu Jan 1 08:00:00 1970
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0.00 version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1 ordinal base
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 20 number of functions
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 20 number of names
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ordinal hint RVA name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1 0 00258498 $thread_static_index = TlsIndexSection
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 2 1 00688FA0 AppendExceptionStackFrame = System::Exception.AppendExceptionStackFrame
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 3 2 004D6CC0 CheckStaticClassConstruction = System::Runtime::CompilerServices::ClassConstructorRunner.EnsureClassConstructorRun
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 4 3 0067B240 CreateCommandLine = System::Runtime::CommandLine.InternalCreateCommandLine
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 5 4 00681710 CtorCharArray = System::String.CtorCharArray
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 6 5 00681520 CtorCharArrayStartLength = System::String.CtorCharArrayStartLength
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 7 6 00680FC0 CtorCharCount = System::String.CtorCharCount
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 8 7 00681300 CtorCharPtr = System::String.CtorCharPtr
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 9 8 00681110 CtorCharPtrStartLength = System::String.CtorCharPtrStartLength
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 10 9 0067E450 FailFast = System::RuntimeExceptionHelpers.RuntimeFailFast
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 11 A 0067B110 GenericLookup = System::Runtime::TypeLoaderExports.GenericLookup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 12 B 0067AFF0 GenericLookupAndAllocArray = System::Runtime::TypeLoaderExports.GenericLookupAndAllocArray
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 13 C 00462220 GenericLookupAndAllocObject = System::Runtime::TypeLoaderExports.GenericLookupAndAllocObject
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 14 D 0067B080 GenericLookupAndCallCtor = System::Runtime::TypeLoaderExports.GenericLookupAndCallCtor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 15 E 0067AEE0 GenericLookupAndCast = System::Runtime::TypeLoaderExports.GenericLookupAndCast
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 16 F 0067AF60 GenericLookupAndCheckArrayElemType = System::Runtime::TypeLoaderExports.GenericLookupAndCheckArrayElemType
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 17 10 0067E500 GetRuntimeException = System::RuntimeExceptionHelpers.GetRuntimeException
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 18 11 0067B170 GetThreadStaticsForDynamicType = System::Runtime::TypeLoaderExports.GetThreadStaticsForDynamicType
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 19 12 0067AE50 InitializeFinalizerThread = System::Runtime::FinalizerInitRunner.DoInitialize
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 20 13 0027BF10 RHBinder__ShimExeMain = RHBinder__ShimExeMain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Summary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 5A000 .data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1FE000 .rdata
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 66000 .reloc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 3000 .rsrc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 4F4000 .text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1000 .tkd0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1000 .tkd1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1000 .tkd2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1000 .tkd3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1000 .tkd4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1000 .tkd5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1000 .tkd6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1000 .tkd7
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1000 .tks0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1000 .tks1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1000 .tks2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1000 .tks3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1000 .tks4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1000 .tks5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1000 .tks6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1000 .tks7
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查看 App2.exe 导入的符号信息&lt;/p>
&lt;blockquote>
&lt;p>dumpbin /IMPORTS App2.exe&lt;/p>
&lt;/blockquote>
&lt;p>输出如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>Microsoft (R) COFF/PE Dumper Version 14.00.23303.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Copyright (C) Microsoft Corporation. All rights reserved.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Dump of file app2.exe
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>File Type: EXECUTABLE IMAGE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Section contains the following imports:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> App2.dll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 402000 Import Address Table
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 401028 Import Name Table
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0 time date stamp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FFFFFFFF Index of first forwarder reference
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0 RHBinder__ShimExeMain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Summary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1000 .data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1000 .rdata
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1000 .reloc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 3000 .rsrc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1000 .text
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>.NET Native 的实现，在 IR 前期很大的程度上依赖 Roslyn 这类新型的编译器，而在 IR 后期，就得益于 Phoenix 编译器框架，
.NET Native 后端和 Visual C/C++ 共用一套后端优化编译器。&lt;/p>
&lt;p>在 Microsoft Channel 9 有一个对 .NET Native 的介绍视频：
&lt;a href="https://channel9.msdn.com/Events/dotnetConf/2014/-NET-Native-Deep-Dive">.NET Native Deep Dive&lt;/a>&lt;/p>
&lt;p>视频中的 PPT 可以下载：
&lt;a href="http://files.channel9.msdn.com/thumbnail/45d78758-8ab8-4e62-8a73-2e6a4027b49c.pptx">.NET Native PPTX&lt;/a>&lt;/p>
&lt;p>在 Visual Studio 2015 中，可以使用 NuGet 安装 .NET Native 的相关插件，以此来分析 .NET 引用能否被 .NET Native 支持。&lt;/p>
&lt;blockquote>
&lt;p>Install-Package Microsoft.NETNative.Analyzer&lt;/p>
&lt;/blockquote>
&lt;p>对于 .NET Native, 大多数人并不会感到满意，大多数 .NET 开发者都希望 .NET Native 能够扩展到 桌面平台，能够支持 WPF &amp;hellip;&lt;/p>
&lt;h3 id="llilc---llvm-based-compiler-for-net-coreclr">LLILC - LLVM-Based Compiler for .NET CoreCLR&lt;/h3>
&lt;p>在 .NET CoreCLR 开源后，.NET 开发团队也创建了基于 LLVM 的 .NET Core 编译器项目 LLILC，实际上，在之前已经有了 C# Native,
SharpLang 之类的项目着手实现 .NET 的 AOT。然而这些项目大多是个人兴趣，支持有限。&lt;/p>
&lt;p>LLILC 的核心开发者是 Phoenix 编译器框架的架构师 &lt;a href="https://github.com/AndyAyersMS">Andy Ayers&lt;/a>, 大神本人也会在 gitter.im 上回答人们对 LLILC 的疑问。LLILC 包括 JIT 和 AOT ,不过目前 AOT 并没有编码实现。目前项目组的重心任然是 JIT 模块。&lt;/p>
&lt;p>LLILC 的 JIT 架构 &lt;br>
&lt;img src="https://github.com/dotnet/llilc/raw/master/Documentation/Images/JITArch.png" alt="JIT">&lt;/p>
&lt;p>LLILC 的 AOT 架构 &lt;br>
&lt;img src="https://github.com/dotnet/llilc/raw/master/Documentation/Images/AOTArch.png" alt="AOT">&lt;/p>
&lt;p>MRT 也就是 .NET Native Runtime ，专门为 .NET Native 实现的一个精简运行时。&lt;/p>
&lt;p>LLILC 依然是非常的不完善，最后的究竟怎样仍需观望。&lt;/p>
&lt;p>从 .NET 还是 JVM 或者是 LLVM 来看，很多东西都是相似的，技术也在互相影响和渗透。&lt;/p>
&lt;h3 id="net-core-runtime-corert">.NET Core Runtime (CoreRT)&lt;/h3>
&lt;p>近期，.NET 推出了 .NET Core Runtime (CoreRT) 的项目，此项目和 .NET Core Runtime (CLR) 不同的是，CoreRT 提供了一套 .NET AOT 的机制,可以将 .NET 程序 编译成原生代码，不依赖 .NET 运行时而运行在宿主机器上。此项目的大部分代码来源于 CoreCLR ，也有部分与 UWA .NET Native 的代码类似。&lt;/p>
&lt;p>这种 AOT 的优化的好处，文档中也有介绍&lt;/p>
&lt;ul>
&lt;li>编译后生成一个单文件，所有的依赖，包括 CoreRT&lt;/li>
&lt;li>启动时是机器码，不需要生成机器码，也不要加载 JIT 编译器&lt;/li>
&lt;li>可以使用其他优化编译器，包括 LLILC ,IL to CPP&lt;/li>
&lt;/ul>
&lt;p>目前支持的是 Console App, 计划支持 ASP.NET 。&lt;/p>
&lt;p>CoreRT 有两个方式生成机器码，第一个 使用是直接编译 IL 成机器码，默认情况下， RyuJIT 作为一个 AOT 编译器将 IL 编译成机器码，
实际上这是一个很巧妙的策略，在 CoreCLR 中， RyuJIT 又变成了一个简单的 JIT 编译器。在前文中提到的 LLILC ，也可以作为 CoreRT 的
AOT 编译器。&lt;/p>
&lt;p>另一个方式是将 C# 代码编译成 C++ 代码，然后调用对应平台的 C++ 编译器优化编译成机器码。&lt;/p>
&lt;p>在 CoreRT 介绍文档中， 提到了 UTC for UWP apps 也可以作为 CoreRT 的 AOT 编译器&lt;/p>
&lt;p>项目地址： &lt;a href="https://github.com/dotnet/corert">.NET Core Runtime&lt;/a>&lt;/p>
&lt;p>Channel9 视频： &lt;a href="https://channel9.msdn.com/Events/Visual-Studio/Connect-event-2015/104">Introducing .NET Core: A Cross-Platform Runtime &lt;/a>&lt;/p>
&lt;p>CoreRT 介绍： &lt;a href="https://github.com/dotnet/corert/blob/master/Documentation/intro-to-corert.md">Intro to .NET Native and CoreRT&lt;/a>&lt;/p>
&lt;p>目前，在 dotnet.github.io 页面可以获取 Windows , Ubuntu, 以及 Mac OS X 的安装包，这个是每日构建的。&lt;/p>
&lt;p>初始化一个 dotnet 项目&lt;/p>
&lt;blockquote>
&lt;p>dotnet init&lt;/p>
&lt;/blockquote>
&lt;p>安装依赖&lt;/p>
&lt;blockquote>
&lt;p>dotnet restore&lt;/p>
&lt;/blockquote>
&lt;p>直接使用 RyuJIT 编译成机器码：&lt;/p>
&lt;blockquote>
&lt;p>dotnet compile &amp;ndash;native&lt;/p>
&lt;/blockquote>
&lt;p>编译生成 C++ 代码：&lt;/p>
&lt;blockquote>
&lt;p>dotnet compile &amp;ndash;native &amp;ndash;cpp&lt;/p>
&lt;/blockquote>
&lt;p>实际上此项目还相当不完善，dotnet 工具链偶尔是无法运行的，不过可以预见此项目会给人们带来眼前一亮的感觉。&lt;/p>
&lt;h2 id="探索的脚步">探索的脚步&lt;/h2>
&lt;h3 id="41-csnative">4.1 CSNative&lt;/h3>
&lt;p>永远不会有完全统一的意见，总会有人去创造新的轮子。不谈其他，重复的创造能对已有的东西带来技术革新，在 CodePlex上,就有个伙计实现了自己的 .NET Native 方案：&lt;a href="http://csnative.codeplex.com/">C# Native&lt;/a>；他利用 Roslyn API 将 C# 编译成 MSIL，然后将 MSIL 编译成LLVM IR ,随后 &amp;lsquo;LLVM System compiler&amp;rsquo; llc 编译成 Native code ,用 GCC 将 Object 文件链接成 exe，GC 库是32位的 &lt;a href="http://www.hboehm.info/gc/">libgc&lt;/a>， 现在已经转变了策略，直接生成 C++ 代码，使用 G++ 编译成二进制。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">using&lt;/span> &lt;span style="color:#58a1dd">System&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">class&lt;/span> &lt;span style="color:#58a1dd">X&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">public&lt;/span> &lt;span style="color:#ff636f">static&lt;/span> &lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">Main&lt;/span> (&lt;span style="color:#ff636f">string&lt;/span> [] &lt;span style="color:#58a1dd">args&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">Console&lt;/span>.&lt;span style="color:#58a1dd">WriteLine&lt;/span> (&lt;span style="color:#a6be9d">&amp;#34;Hello, World!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Il2c 是一个利用 Roslyn 实现的 C#/MSIL to C++ 的编译器&lt;/p>
&lt;blockquote>
&lt;p>Il2c.exe helloworld.cs /corelib:CoreLib.dll&lt;/p>
&lt;/blockquote>
&lt;p>生成 helloworld.cpp, 然后使用 g++ 编译成 exe :&lt;/p>
&lt;blockquote>
&lt;p>g++ -o helloworld.exe helloworld.cpp CoreLib.cpp -lstdc++ -lgcmt-lib -march=i686 -L .&lt;/p>
&lt;/blockquote>
&lt;p>直接生成 Exe:&lt;/p>
&lt;blockquote>
&lt;p>Il2c.exe /exe helloworld.cs /corelib:CoreLib.dll&lt;/p>
&lt;/blockquote>
&lt;p>C# Native 作者 AlexDev 本人也是 Babylon 3D (C#/native port) 的作者。&lt;/p>
&lt;h3 id="42-sharplang">4.2 SharpLang&lt;/h3>
&lt;p>同样的，在 Github上，也有一个基于 LLVM 的 C# Native 的解决方案: &lt;a href="https://github.com/xen2/SharpLang">SharpLang&lt;/a>。
在LLILC推出后，开发者 Virgile Bello 也就没有更新 SharpLang 了。&lt;/p>
&lt;h2 id="其他">其他&lt;/h2>
&lt;p>一些相关技术的图片：&lt;/p>
&lt;h3 id="net">.NET&lt;/h3>
&lt;p>实际上无论是 JVM 还是 .NET Framework 以及 LLVM Framework 在结构上是非常相似的，如下图： &lt;br>
&lt;img src="https://raw.githubusercontent.com/fstudio/Beaot/master/doc/Images/dotNet/CLR_diag.png" alt="Framework">&lt;/p>
&lt;p>.NET 的功能演进: &lt;br>
&lt;img src="https://raw.githubusercontent.com/fstudio/Beaot/master/doc/Images/dotNet/DotNet.png" alt="dotNet">&lt;/p>
&lt;p>从源码到运行： &lt;br>
&lt;img src="https://raw.githubusercontent.com/fstudio/Beaot/master/doc/Images/dotNet/Overview_of_the_Common_Language_Infrastructure.png" alt="Step">&lt;/p>
&lt;h3 id="jvm">JVM&lt;/h3>
&lt;p>JVM 加载器： &lt;br>
&lt;img src="https://raw.githubusercontent.com/fstudio/Beaot/master/doc/Images/JvmSpec7.png" alt="JVM">&lt;/p>
&lt;h3 id="web-aot-">Web AOT ?&lt;/h3>
&lt;p>&lt;strong>asm.js&lt;/strong> 是一个非常容易优化的 JavaScript 子集:
&lt;a href="https://blog.mozilla.org/luke/2014/01/14/asm-js-aot-compilation-and-startup-performance/">asm.js AOT&lt;/a> &lt;br>
&lt;img src="https://ffp4g1ylyit3jdyti1hqcvtb-wpengine.netdna-ssl.com/luke/files/2013/12/aot-diagram.png" alt="asm.js-AOT">&lt;/p>
&lt;p>&lt;strong>PNacl&lt;/strong>&lt;/p>
&lt;p>本质上，PNaCl 通过编译本地的 C 和 C++ 代码到一个中间表示，而不是像在 Native Client 的特定于体系结构的表示。LLVM 类型的字节代码被包裹在一个可移植的执行体里面，这个执行体可以托管在一个 Web 服务器上，就像许多其它的网站资产一样。当该网站被访问的时候，Chrome 获取信息并将可移植的执行体转换成一个特定于体系结构的、便携式的、可执行的机器代码，直接为底层设备进行优化。这种转换方法意味着开发者不需要施行多次重新编译App，也可以在x86、ARM或MIPS设备上运行。&lt;/p>
&lt;p>&lt;strong>WebAssembly&lt;/strong>&lt;/p>
&lt;p>WebAssembly 是 Microsoft Google Mozille Apple 开发者合作开发的一项新技术，可以作为任何编程语言的编译目标，
使应用程序可以运行在浏览器或其它代理中。&lt;/p>
&lt;p>&lt;a href="http://www.infoq.com/cn/news/2015/06/webassembly-wasm">InfoQ WebAssembly：面向Web的通用二进制和文本格式&lt;/a>&lt;/p>
&lt;h1 id="备注">备注&lt;/h1>
&lt;ol>
&lt;li>LLVM &lt;a href="http://www.aosabook.org/en/llvm.html">http://www.aosabook.org/en/llvm.html&lt;/a>&lt;/li>
&lt;li>Embarcadero C++ Builder: &lt;br>
&lt;a href="http://docwiki.embarcadero.com/RADStudio/XE6/en/BCC64.EXE,_the_C%2B%2B_64-bit_Windows_Compiler">BCC64.EXE, the C++ 64-bit Windows Compiler&lt;/a> &lt;br>
&lt;a href="http://docwiki.embarcadero.com/RADStudio/XE6/en/Clang-based_C%2B%2B_Compilers">Clang-based C++ Compilers&lt;/a>&lt;/li>
&lt;li>Phoenix Compiler Framework: &lt;br>
&lt;a href="https://en.wikipedia.org/wiki/Phoenix_%28compiler_framework%29">Phoenix Compiler Framework Wiki&lt;/a>&lt;/li>
&lt;li>Android Dalvik: &lt;br>
&lt;a href="https://en.wikipedia.org/wiki/Dalvik_%28software%29">Dalvik Wiki&lt;/a>&lt;/li>
&lt;li>LLILC News: &lt;br>
&lt;a href="http://www.infoq.com/news/2015/04/microsoft-llilc-llvm-compiler">InfoQ Microsoft Introduces LLILC, LLVM-based .NET/CoreCLR Compiler&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>UPDATE&lt;/strong> 几年之后，技术有了长足发展，本文并不一定符合当前新的技术形式。&lt;/p>
- https://forcemz.net/posts/2015/2015-06-16-aot/ - Copyright (c) 2009-2024 J23</description></item><item><title>Windows AppContainer 降权，隔离与安全</title><link>https://forcemz.net/posts/2015/2015-06-11-app-container/</link><pubDate>Thu, 11 Jun 2015 16:58:16 +0800</pubDate><guid>https://forcemz.net/posts/2015/2015-06-11-app-container/</guid><description>Charlie's Rethinking https://forcemz.net/posts/2015/2015-06-11-app-container/ -&lt;h1 id="windows-权限策略的发展">Windows 权限策略的发展&lt;/h1>
&lt;p>从 Windows 8开始，我在使用 Windows 系统的同时也就不再关闭 UAC 了，并且不再安装任何国产的安全软件，这些软件仗着运行在管理员权限上肆意的推行 “全家桶策略”，Windows 多年来一直是最流行的操作系统，大多数人的焦点都会放在上面，也包括黑客，各种企业，早期Windows系统在权限的管理上非常粗放。无论是恶意软件还是其他软件都可以获得较高的权限，这样就能够对系统大肆修改，并且直接或间接破化系统，收集数据，妨碍竞争对手。软件的权限理应得到限制，而不是放任自流。Windows XP 是历史上最受欢迎的版本之一，然而，一直以来XP的权限问题都被人诟病，微软也决心对这一问题进行改进，从Vista开始，Windows引入了 UAC 机制，它要求用户在执行可能会影响计算机运行的操作或执行更改影响其他用户的设置的操作之前，提供权限或管理员‌密码。这是一个可喜的进步，不过在早期用户都会要求关闭 UAC,当我开始使用 Windows 的时候，，那个时候用的是 Windows 7,我也是这样做的。Windows 7在 UAC 的改进主要是一些小的细节。&lt;/p>
&lt;p>从 Windows 8 引入 Metro(Morden) App 开始，Windows 出现了一个新的进程隔离机制，即 AppContainer。Windows Store 应用运行在AppContainer 的容器当中权限被极大的限制，很多危险的操作无法进行，微软通过 Windows Store 进行应用分发，能够控制来源，这样能够极大的降低恶意软件的困扰。而 AppContainer 同样能够支持传统的 Desktop 应用，本文将介绍 通过 AppContainer 启动一个桌面程序，当然，先从降权说起。&lt;/p>
&lt;h1 id="uac-降权">UAC 降权&lt;/h1>
&lt;p>基于 Win32 的应用程序，如果要提权，非常简单，可以在 manifest 文件中写入 &lt;code>requireAdministrator&lt;/code> 如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">&amp;lt;asmv1:assembly&lt;/span> &lt;span style="color:#58a1dd">manifestVersion=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;1.0&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">xmlns=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;urn:schemas-microsoft-com:asm.v1&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">xmlns:asmv1=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;urn:schemas-microsoft-com:asm.v1&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">xmlns:asmv2=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;urn:schemas-microsoft-com:asm.v2&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">xmlns:xsi=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;assemblyIdentity&lt;/span> &lt;span style="color:#58a1dd">version=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;1.0.3.0&amp;#34;&lt;/span> &lt;span style="color:#58a1dd">name=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;Force.Metro.Native.iBurnMgr.app&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;trustInfo&lt;/span> &lt;span style="color:#58a1dd">xmlns=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;urn:schemas-microsoft-com:asm.v2&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;security&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;requestedPrivileges&lt;/span> &lt;span style="color:#58a1dd">xmlns=&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;urn:schemas-microsoft-com:asm.v3&amp;#34;&lt;/span>&lt;span style="color:#58a1dd">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;requestedExecutionLevel&lt;/span> &lt;span style="color:#58a1dd">level=&lt;/span>&lt;span style="color:#a6be9d">&amp;#39;requireAdministrator&amp;#39;&lt;/span> &lt;span style="color:#58a1dd">uiAccess=&lt;/span>&lt;span style="color:#a6be9d">&amp;#39;false&amp;#39;&lt;/span> &lt;span style="color:#58a1dd">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/requestedPrivileges&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/security&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">&amp;lt;/trustInfo&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">&amp;lt;/asmv1:assembly&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>也可以使用 ShellExecute，将第二个参数设置为 &lt;code>runas&lt;/code> ，ShellExecute 本质上将参数写入到 &lt;code>SHELLEXECUTEINFO&lt;/code> ，然后调用 &lt;code>ShellExecuteEx&lt;/code> 实现。在 ReactOS 和 Windows Vista 以前的版本，通过 &lt;code>IShellExecuteHook&lt;/code> 接口实现。Vista 以后被否决了。&lt;/p>
&lt;p>当然，还可以使用其他不受官方建议的方法。&lt;/p>
&lt;p>但是如果需要降权，微软没有直接的方案供开发者选择。常见的选择有 通过拿到 Explorer 的 token 启动进程，或者是通过计划任务启动进程。&lt;/p>
&lt;h1 id="计划任务降权">计划任务降权&lt;/h1>
&lt;p>使用计划任务降权大概需要十几个 COM 接口:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ITaskService&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">iTaskService&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ITaskFolder&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">iRootFolder&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ITaskDefinition&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">iTask&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">IRegistrationInfo&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">iRegInfo&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">IPrincipal&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">iPrin&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ITaskSettings&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">iSettings&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ITriggerCollection&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">iTriggerCollection&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ITrigger&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">iTrigger&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">IRegistrationTrigger&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">iRegistrationTrigger&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">IActionCollection&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">iActionCollection&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">IAction&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">iAction&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">IExecAction&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">iExecAction&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">IRegisteredTask&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">iRegisteredTask&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用这些接口创建一个计划任务，值得注意的是，计划任务的创建需要管理员权限运行，本程序的功能就是从管理员降权到标准用户，所以这个限制没有影响。&lt;br>
在这个过程中最有价值的代码是：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DO&lt;/span>(&lt;span style="color:#58a1dd">iPrin&lt;/span>&lt;span style="color:#ff636f">-&amp;gt;&lt;/span>&lt;span style="color:#58a1dd">put_RunLevel&lt;/span>(&lt;span style="color:#58a1dd">TASK_RUNLEVEL_LUA&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa383572(v=vs.85).aspx">MSDN&lt;/a> 的描述中，表示以较低权限运行，与之对应的是 &lt;code>TASK_RUNLEVEL_HIGHEST&lt;/code>。&lt;/p>
&lt;p>通过计划任务降权的完整代码： &lt;a href="https://github.com/fstudio/Phoenix/blob/master/test/Container/uacdown.cpp">UAC 降权测试&lt;/a>
从 Process Explorer 的进程属性就可以看到：
&lt;img src="https://raw.githubusercontent.com/fstudio/Phoenix/master/doc/Container/Images/taskschdlauncher.png" alt="TaskSchdLauncher">
如果用户名是内置的 Administrator，并且开启了 &lt;a href="https://technet.microsoft.com/zh-cn/library/dd834795.aspx">对内置管理员使用批准模式&lt;/a> 至少在Windows 8.1 (Windows Server 2012 R2) 会失败的。
所以这个时候需要采取第二种策略。&lt;/p>
&lt;h1 id="使用-explorer-的-token-启动进程">使用 Explorer 的 Token 启动进程&lt;/h1>
&lt;p>简单点就是拿桌面进程的 Token，然后使用桌面的 Token 启动进程。这需要桌面正在运行 （Explorer 作为桌面进程正在运行），也就是常说的桌面得存在，并且权限是标准的。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">HRESULT&lt;/span> &lt;span style="color:#58a1dd">WINAPI&lt;/span> &lt;span style="color:#58a1dd">ProcessLauncherExplorerLevel&lt;/span>(&lt;span style="color:#58a1dd">LPCWSTR&lt;/span> &lt;span style="color:#58a1dd">exePath&lt;/span>,&lt;span style="color:#58a1dd">LPCWSTR&lt;/span> &lt;span style="color:#58a1dd">cmdArgs&lt;/span>,&lt;span style="color:#58a1dd">LPCWSTR&lt;/span> &lt;span style="color:#58a1dd">workDirectory&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">STARTUPINFOW&lt;/span> &lt;span style="color:#58a1dd">si&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">PROCESS_INFORMATION&lt;/span> &lt;span style="color:#58a1dd">pi&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">SecureZeroMemory&lt;/span>(&lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">si&lt;/span>, &lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#58a1dd">si&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">SecureZeroMemory&lt;/span>(&lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">pi&lt;/span>, &lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#58a1dd">pi&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">si&lt;/span>.&lt;span style="color:#58a1dd">cb&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#58a1dd">si&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">HANDLE&lt;/span> &lt;span style="color:#58a1dd">hShellProcess&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>, &lt;span style="color:#58a1dd">hShellProcessToken&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">hPrimaryToken&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">HWND&lt;/span> &lt;span style="color:#58a1dd">hwnd&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">dwPID&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">HRESULT&lt;/span> &lt;span style="color:#58a1dd">hr&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">S_OK&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BOOL&lt;/span> &lt;span style="color:#58a1dd">ret&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">TRUE&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">dwLastErr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">hwnd&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">GetShellWindow&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">nullptr&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#58a1dd">hwnd&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">HRESULT&lt;/span>(&lt;span style="color:#a6be9d">3&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">GetWindowThreadProcessId&lt;/span>(&lt;span style="color:#58a1dd">hwnd&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">dwPID&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#a6be9d">0&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#58a1dd">dwPID&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">HRESULT&lt;/span>(&lt;span style="color:#a6be9d">4&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// Open the desktop shell process in order to query it (get the token)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">hShellProcess&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">OpenProcess&lt;/span>(&lt;span style="color:#58a1dd">PROCESS_QUERY_INFORMATION&lt;/span>, &lt;span style="color:#58a1dd">FALSE&lt;/span>, &lt;span style="color:#58a1dd">dwPID&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">hShellProcess&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">dwLastErr&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">GetLastError&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">HRESULT&lt;/span>(&lt;span style="color:#a6be9d">5&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// From this point down, we have handles to close, so make sure to clean up.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">retval&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// Get the process token of the desktop shell.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">ret&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">OpenProcessToken&lt;/span>(&lt;span style="color:#58a1dd">hShellProcess&lt;/span>, &lt;span style="color:#58a1dd">TOKEN_DUPLICATE&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">hShellProcessToken&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">ret&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">dwLastErr&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">GetLastError&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">hr&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">HRESULT&lt;/span>(&lt;span style="color:#a6be9d">6&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">goto&lt;/span> &lt;span style="color:#58a1dd">cleanup&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// Duplicate the shell&amp;#39;s process token to get a primary token.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#828b96;font-style:italic">// Based on experimentation, this is the minimal set of rights required for
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#828b96;font-style:italic">// CreateProcessWithTokenW (contrary to current documentation).
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">dwTokenRights&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">TOKEN_QUERY&lt;/span> &lt;span style="color:#ff636f">|&lt;/span> &lt;span style="color:#58a1dd">TOKEN_ASSIGN_PRIMARY&lt;/span> &lt;span style="color:#ff636f">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">TOKEN_DUPLICATE&lt;/span> &lt;span style="color:#ff636f">|&lt;/span> &lt;span style="color:#58a1dd">TOKEN_ADJUST_DEFAULT&lt;/span> &lt;span style="color:#ff636f">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">TOKEN_ADJUST_SESSIONID&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ret&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">DuplicateTokenEx&lt;/span>(&lt;span style="color:#58a1dd">hShellProcessToken&lt;/span>, &lt;span style="color:#58a1dd">dwTokenRights&lt;/span>, &lt;span style="color:#ff636f">nullptr&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">SecurityImpersonation&lt;/span>, &lt;span style="color:#58a1dd">TokenPrimary&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">hPrimaryToken&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">ret&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">dwLastErr&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">GetLastError&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">hr&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">7&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">goto&lt;/span> &lt;span style="color:#58a1dd">cleanup&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// Start the target process with the new token.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">wchar_t&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">cmdArgsT&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">_wcsdup&lt;/span>(&lt;span style="color:#58a1dd">cmdArgs&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ret&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">CreateProcessWithTokenW&lt;/span>(&lt;span style="color:#58a1dd">hPrimaryToken&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#58a1dd">exePath&lt;/span>, &lt;span style="color:#58a1dd">cmdArgsT&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#ff636f">nullptr&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">workDirectory&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">si&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">pi&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">free&lt;/span>(&lt;span style="color:#58a1dd">cmdArgsT&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">ret&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">dwLastErr&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">GetLastError&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">hr&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">8&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">goto&lt;/span> &lt;span style="color:#58a1dd">cleanup&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">CloseHandle&lt;/span>(&lt;span style="color:#58a1dd">pi&lt;/span>.&lt;span style="color:#58a1dd">hThread&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">CloseHandle&lt;/span>(&lt;span style="color:#58a1dd">pi&lt;/span>.&lt;span style="color:#58a1dd">hProcess&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">retval&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">cleanup&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// Clean up resources
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">CloseHandle&lt;/span>(&lt;span style="color:#58a1dd">hShellProcessToken&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">CloseHandle&lt;/span>(&lt;span style="color:#58a1dd">hPrimaryToken&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">CloseHandle&lt;/span>(&lt;span style="color:#58a1dd">hShellProcess&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">hr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当然，通过人肉合成一个 Token 启动进程也是能够实现降低程序权限的，这些比较复杂，本文也就不细说了。&lt;/p>
&lt;h1 id="启动低完整性进程">启动低完整性进程&lt;/h1>
&lt;p>强制完整性控制（英语：Mandatory Integrity Control）是一个在微软Windows操作系统中从Windows Vista开始引入，并沿用到后续版本系统的核心安全功能。强制完整性控制通过完整性级别标签来为运行于同一登录会话的进程提供隔离。此机制的目的是在一个潜在不可信的上下文（与同一账户下运行的其他较为可信的上下文相比）中选择性地限制特定进程和软件组件的访问权限。
Windows Vista 定义了四个完整性级别:&lt;/p>
&lt;blockquote>
&lt;p>低 (SID: S-1-16-4096)&lt;br>
中 (SID: S-1-16-8192)&lt;br>
高 (SID: S-1-16-12288)&lt;br>
系統 (SID: S-1-16-16384)&lt;/p>
&lt;/blockquote>
&lt;p>利用这一特性，我们可以使用低级别权限启动一个进程:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;Windows.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;Sddl.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;cstdio&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;cstdlib&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;cstring&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;wchar.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#pragma comment(lib,&amp;#34;kernel32&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#pragma comment(lib,&amp;#34;Advapi32&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#pragma comment(lib,&amp;#34;user32&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">BOOL&lt;/span> &lt;span style="color:#58a1dd">WINAPI&lt;/span> &lt;span style="color:#58a1dd">CreateLowLevelProcess&lt;/span>(&lt;span style="color:#58a1dd">LPCWSTR&lt;/span> &lt;span style="color:#58a1dd">lpCmdLine&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BOOL&lt;/span> &lt;span style="color:#58a1dd">b&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">HANDLE&lt;/span> &lt;span style="color:#58a1dd">hToken&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">HANDLE&lt;/span> &lt;span style="color:#58a1dd">hNewToken&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// PWSTR szProcessName = L&amp;#34;LowClient&amp;#34;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">PWSTR&lt;/span> &lt;span style="color:#58a1dd">szIntegritySid&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;S-1-16-4096&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">PSID&lt;/span> &lt;span style="color:#58a1dd">pIntegritySid&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">NULL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">TOKEN_MANDATORY_LABEL&lt;/span> &lt;span style="color:#58a1dd">TIL&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> {&lt;span style="color:#a6be9d">0&lt;/span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">PROCESS_INFORMATION&lt;/span> &lt;span style="color:#58a1dd">ProcInfo&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> {&lt;span style="color:#a6be9d">0&lt;/span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">STARTUPINFOW&lt;/span> &lt;span style="color:#58a1dd">StartupInfo&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> {&lt;span style="color:#a6be9d">0&lt;/span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">StartupInfo&lt;/span>.&lt;span style="color:#58a1dd">cb&lt;/span>&lt;span style="color:#ff636f">=&lt;/span>&lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#58a1dd">STARTUPINFOW&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">ULONG&lt;/span> &lt;span style="color:#58a1dd">ExitCode&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">b&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">OpenProcessToken&lt;/span>(&lt;span style="color:#58a1dd">GetCurrentProcess&lt;/span>(), &lt;span style="color:#58a1dd">MAXIMUM_ALLOWED&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">hToken&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span>(&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">b&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">FALSE&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">b&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">DuplicateTokenEx&lt;/span>(&lt;span style="color:#58a1dd">hToken&lt;/span>, &lt;span style="color:#58a1dd">MAXIMUM_ALLOWED&lt;/span>, &lt;span style="color:#58a1dd">NULL&lt;/span>, &lt;span style="color:#58a1dd">SecurityImpersonation&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">TokenPrimary&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">hNewToken&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">b&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">ConvertStringSidToSidW&lt;/span>(&lt;span style="color:#58a1dd">szIntegritySid&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">pIntegritySid&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">TIL&lt;/span>.&lt;span style="color:#58a1dd">Label&lt;/span>.&lt;span style="color:#58a1dd">Attributes&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">SE_GROUP_INTEGRITY&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">TIL&lt;/span>.&lt;span style="color:#58a1dd">Label&lt;/span>.&lt;span style="color:#58a1dd">Sid&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">pIntegritySid&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// Set process integrity levels
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">b&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">SetTokenInformation&lt;/span>(&lt;span style="color:#58a1dd">hNewToken&lt;/span>, &lt;span style="color:#58a1dd">TokenIntegrityLevel&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">TIL&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#58a1dd">TOKEN_MANDATORY_LABEL&lt;/span>) &lt;span style="color:#ff636f">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">GetLengthSid&lt;/span>(&lt;span style="color:#58a1dd">pIntegritySid&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// Set process UI privilege level
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#828b96;font-style:italic">/*b = SetTokenInformation(hNewToken, TokenIntegrityLevel,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic"> &amp;amp;TIL, sizeof(TOKEN_MANDATORY_LABEL) + GetLengthSid(pIntegritySid)); */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">wchar_t&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">lpCmdLineT&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">_wcsdup&lt;/span>(&lt;span style="color:#58a1dd">lpCmdLine&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">// To create a new low-integrity processes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#58a1dd">b&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">CreateProcessAsUserW&lt;/span>(&lt;span style="color:#58a1dd">hNewToken&lt;/span>, &lt;span style="color:#58a1dd">NULL&lt;/span>, &lt;span style="color:#58a1dd">lpCmdLineT&lt;/span>, &lt;span style="color:#58a1dd">NULL&lt;/span>, &lt;span style="color:#58a1dd">NULL&lt;/span>, &lt;span style="color:#58a1dd">FALSE&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">NULL&lt;/span>, &lt;span style="color:#58a1dd">NULL&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">StartupInfo&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">ProcInfo&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">CloseHandle&lt;/span>(&lt;span style="color:#58a1dd">hToken&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">CloseHandle&lt;/span>(&lt;span style="color:#58a1dd">hNewToken&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">CloseHandle&lt;/span>(&lt;span style="color:#58a1dd">ProcInfo&lt;/span>.&lt;span style="color:#58a1dd">hThread&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">CloseHandle&lt;/span>(&lt;span style="color:#58a1dd">ProcInfo&lt;/span>.&lt;span style="color:#58a1dd">hProcess&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">LocalFree&lt;/span>(&lt;span style="color:#58a1dd">pIntegritySid&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">free&lt;/span>(&lt;span style="color:#58a1dd">lpCmdLineT&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">b&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">wmain&lt;/span>(&lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">argc&lt;/span>,&lt;span style="color:#ff636f">wchar_t&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">argv&lt;/span>[])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span>(&lt;span style="color:#58a1dd">argc&lt;/span>&lt;span style="color:#ff636f">&amp;gt;=&lt;/span>&lt;span style="color:#a6be9d">2&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">wcout&lt;/span>&lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span>&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;Start LowLevel App: &amp;#34;&lt;/span>&lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span>&lt;span style="color:#58a1dd">argv&lt;/span>[&lt;span style="color:#a6be9d">1&lt;/span>]&lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span>&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>&lt;span style="color:#a6be9d">\t&lt;/span>&lt;span style="color:#a6be9d"> Return Code[BOOL]: &amp;#34;&lt;/span>&lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span>&lt;span style="color:#58a1dd">CreateLowLevelProcess&lt;/span>(&lt;span style="color:#58a1dd">argv&lt;/span>[&lt;span style="color:#a6be9d">1&lt;/span>])&lt;span style="color:#ff636f">&amp;lt;&amp;lt;&lt;/span>&lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">endl&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>第一步获得当前进程的 Token ,然后使用这个令牌创建一个新的令牌，由 SID &lt;code>S-1-16-4096&lt;/code> 得到一个 SID 指针，将 SID 指针添加到 &lt;code>TOKEN_MANDATORY_LABEL&lt;/code> 结构中，而后用 &lt;code>SetTokenInformation&lt;/code> 将令牌与 完整性级别结合在一起，最后使用 &lt;code>CreateProcessAsUser&lt;/code> 创建进程。通过完整性级别启动的进程是没有多少权限的，譬如打开一个记事本，新建一个文件另存为，基本上都无法写入。 使用 Process Explorer 可以查看启动进程的权限属性。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/fstudio/Phoenix/master/doc/Container/Images/LowLevelSava.png" alt="MIC">&lt;/p>
&lt;p>强制完整性运用最多的应该是 IE 浏览器，从 IE8 开始，IE 浏览器的保护模式就是 MIC，而 MIC 是 Windows 权限细粒度的一次重大的发展，在前几年，在学校开发 ACM 在线测评系统之时，评测系统就是基于 MIC+Job Object 实现的。&lt;/p>
&lt;h2 id="appconatiner">AppConatiner&lt;/h2>
&lt;p>从 Windows 8 开始，微软引入了新的安全机制，AppConatiner 所有的 Store App 就是运行在应用容器之中，并且 IETab 也是运行在应用容器之中，应用容器在权限的管理上非常细致，也就是说非常“细粒度”。
微软也为传统的 Desktop 应用程序提供了一系列的API来创建一个 AppContainer，并且使进程在 AppContainer 中启动。比如使用&lt;code>CreateAppContainerProfile&lt;/code> 创建一个容器SID，使用 &lt;code>DeleteAppContainerProfile&lt;/code> 查找一个已知容器名的SID，删除一个容器&lt;code>DeleteAppContainerProfile&lt;/code> 配置文件。&lt;code>GetAppContainerFolderPath&lt;/code> 获得容器目录。&lt;/p>
&lt;p>通过 AppContainer 启动进程的一般流程是，通过 &lt;code>CreateAppContainerProfile&lt;/code> 创建一个容器配置，得到 SID 指针，为了避免创建失败，先用 &lt;code>DeleteAppContainerProfile&lt;/code> 删除此容器配置。细粒度的配置需要 &lt;a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa379650(v=vs.85).aspx">WELL_KNOWN_SID_TYPE&lt;/a> &lt;br>
得到容器配置后，启动进程时需要使用 &lt;code>STARTUPINFOEX&lt;/code> 结构，使用 &lt;code>InitializeProcThreadAttributeList&lt;/code> &lt;code>UpdateProcThreadAttribute&lt;/code> 将 &lt;code>PSID&lt;/code> 和 &lt;code>SECURITY_CAPABILITIES::Capabilities&lt;/code> （也就是 &lt;code>WELL_KNOWN_SID_TYPE&lt;/code> 得到的权限设置）添加到 &lt;code>STARTUPINFOEX::lpAttributeList&lt;/code>
使用 &lt;code>CreateProcess&lt;/code> 中第七个参数 添加 &lt;code>EXTENDED_STARTUPINFO_PRESENT&lt;/code>，然后再用 &lt;code>reinterpret_cast&lt;/code> 转换 &lt;code>STARTUPFINFOEX&lt;/code> 指针变量输入到 &lt;code>CreateProcess&lt;/code> 倒数第二个（C语言用强制转换）。&lt;/p>
&lt;p>下面是一个完整的例子。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#1d2432;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">// cl app.cc Advapi32.lib Userenv.lib
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;ShlObj.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;Userenv.h&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;functional&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;memory&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;type_traits&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#include&lt;/span> &lt;span style="color:#828b96;font-style:italic">&amp;lt;vector&amp;gt;&lt;/span>&lt;span style="color:#828b96;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#define APPCONTAINER_PROFILE_NAME L&amp;#34;Force.Charlie.AppLoader.AppContainer&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#define APPCONTAINER_PROFILE_DISPLAYNAME L&amp;#34;Force.Charlie.AppLoader.AppContainer&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">#define APPCONTAINER_PROFILE_DESCRIPTION L&amp;#34;AppLoader AppContainer&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">class&lt;/span> &lt;span style="color:#58a1dd">AppContainerContext&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">public&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">typedef&lt;/span> &lt;span style="color:#58a1dd">std&lt;/span>&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">vector&lt;/span>&lt;span style="color:#ff636f">&amp;lt;&lt;/span>&lt;span style="color:#58a1dd">SID_AND_ATTRIBUTES&lt;/span>&lt;span style="color:#ff636f">&amp;gt;&lt;/span> &lt;span style="color:#58a1dd">TCapabilitiesList&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">AppContainerContext&lt;/span>() &lt;span style="color:#ff636f">:&lt;/span> &lt;span style="color:#58a1dd">appContainerSid&lt;/span>(&lt;span style="color:#ff636f">nullptr&lt;/span>) {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">~&lt;/span>&lt;span style="color:#58a1dd">AppContainerContext&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#828b96;font-style:italic">///
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#828b96;font-style:italic">&lt;/span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">appContainerSid&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">FreeSid&lt;/span>(&lt;span style="color:#58a1dd">appContainerSid&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">for&lt;/span> (&lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">c&lt;/span> : &lt;span style="color:#58a1dd">mCapabilities&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">c&lt;/span>.&lt;span style="color:#58a1dd">Sid&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">HeapFree&lt;/span>(&lt;span style="color:#58a1dd">GetProcessHeap&lt;/span>(), &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#58a1dd">c&lt;/span>.&lt;span style="color:#58a1dd">Sid&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">AppContainerContextInitialize&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">MakeWellKnownSIDAttributes&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">hr&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">DeleteAppContainerProfile&lt;/span>(&lt;span style="color:#58a1dd">APPCONTAINER_PROFILE_NAME&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">CreateAppContainerProfile&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">APPCONTAINER_PROFILE_NAME&lt;/span>, &lt;span style="color:#58a1dd">APPCONTAINER_PROFILE_DISPLAYNAME&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">APPCONTAINER_PROFILE_DESCRIPTION&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#58a1dd">mCapabilities&lt;/span>.&lt;span style="color:#58a1dd">empty&lt;/span>() &lt;span style="color:#ff636f">?&lt;/span> &lt;span style="color:#58a1dd">NULL&lt;/span> &lt;span style="color:#ff636f">:&lt;/span> &lt;span style="color:#58a1dd">mCapabilities&lt;/span>.&lt;span style="color:#58a1dd">data&lt;/span>()),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#58a1dd">DWORD&lt;/span>)&lt;span style="color:#58a1dd">mCapabilities&lt;/span>.&lt;span style="color:#58a1dd">size&lt;/span>(), &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">appContainerSid&lt;/span>) &lt;span style="color:#ff636f">!=&lt;/span> &lt;span style="color:#58a1dd">S_OK&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">PSID&lt;/span> &lt;span style="color:#58a1dd">GetAppContainerSid&lt;/span>() &lt;span style="color:#ff636f">const&lt;/span> { &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">appContainerSid&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">TCapabilitiesList&lt;/span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">Capabilitis&lt;/span>() { &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">mCapabilities&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">private&lt;/span>&lt;span style="color:#ff636f">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">bool&lt;/span> &lt;span style="color:#58a1dd">MakeWellKnownSIDAttributes&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">const&lt;/span> &lt;span style="color:#58a1dd">WELL_KNOWN_SID_TYPE&lt;/span> &lt;span style="color:#58a1dd">capabilitiyTypeList&lt;/span>[] &lt;span style="color:#ff636f">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WinCapabilityInternetClientSid&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WinCapabilityInternetClientServerSid&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WinCapabilityPrivateNetworkClientServerSid&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WinCapabilityPicturesLibrarySid&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WinCapabilityVideosLibrarySid&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WinCapabilityMusicLibrarySid&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WinCapabilityDocumentsLibrarySid&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WinCapabilitySharedUserCertificatesSid&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WinCapabilityEnterpriseAuthenticationSid&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">WinCapabilityRemovableStorageSid&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">for&lt;/span> (&lt;span style="color:#ff636f">auto&lt;/span> &lt;span style="color:#58a1dd">c&lt;/span> : &lt;span style="color:#58a1dd">capabilitiyTypeList&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">PSID&lt;/span> &lt;span style="color:#58a1dd">sid&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">HeapAlloc&lt;/span>(&lt;span style="color:#58a1dd">GetProcessHeap&lt;/span>(), &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#58a1dd">SECURITY_MAX_SID_SIZE&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">sid&lt;/span> &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#ff636f">nullptr&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DWORD&lt;/span> &lt;span style="color:#58a1dd">sidListSize&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">SECURITY_MAX_SID_SIZE&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">CreateWellKnownSid&lt;/span>(&lt;span style="color:#58a1dd">c&lt;/span>, &lt;span style="color:#58a1dd">NULL&lt;/span>, &lt;span style="color:#58a1dd">sid&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">sidListSize&lt;/span>) &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#58a1dd">FALSE&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">HeapFree&lt;/span>(&lt;span style="color:#58a1dd">GetProcessHeap&lt;/span>(), &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#58a1dd">sid&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">continue&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">::&lt;/span>&lt;span style="color:#58a1dd">IsWellKnownSid&lt;/span>(&lt;span style="color:#58a1dd">sid&lt;/span>, &lt;span style="color:#58a1dd">c&lt;/span>) &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#58a1dd">FALSE&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">HeapFree&lt;/span>(&lt;span style="color:#58a1dd">GetProcessHeap&lt;/span>(), &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#58a1dd">sid&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">continue&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">SID_AND_ATTRIBUTES&lt;/span> &lt;span style="color:#58a1dd">attr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">attr&lt;/span>.&lt;span style="color:#58a1dd">Sid&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">sid&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">attr&lt;/span>.&lt;span style="color:#58a1dd">Attributes&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">SE_GROUP_ENABLED&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">mCapabilities&lt;/span>.&lt;span style="color:#58a1dd">push_back&lt;/span>(&lt;span style="color:#58a1dd">attr&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">PSID&lt;/span> &lt;span style="color:#58a1dd">appContainerSid&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">TCapabilitiesList&lt;/span> &lt;span style="color:#58a1dd">mCapabilities&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#58a1dd">BOOL&lt;/span> &lt;span style="color:#58a1dd">WINAPI&lt;/span> &lt;span style="color:#58a1dd">CreateAppContainerProcessEx&lt;/span>(&lt;span style="color:#58a1dd">LPCWSTR&lt;/span> &lt;span style="color:#58a1dd">lpApplication&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">LPWSTR&lt;/span> &lt;span style="color:#58a1dd">lpCommandline&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">LPCWSTR&lt;/span> &lt;span style="color:#58a1dd">lpEvnironment&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">LPCWSTR&lt;/span> &lt;span style="color:#58a1dd">lpDirectory&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">AppContainerContext&lt;/span> &lt;span style="color:#58a1dd">context&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">context&lt;/span>.&lt;span style="color:#58a1dd">AppContainerContextInitialize&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">FALSE&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">PROCESS_INFORMATION&lt;/span> &lt;span style="color:#58a1dd">pi&lt;/span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">STARTUPINFOEX&lt;/span> &lt;span style="color:#58a1dd">siex&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> {&lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#58a1dd">STARTUPINFOEX&lt;/span>)};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">siex&lt;/span>.&lt;span style="color:#58a1dd">StartupInfo&lt;/span>.&lt;span style="color:#58a1dd">cb&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#58a1dd">siex&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">SIZE_T&lt;/span> &lt;span style="color:#58a1dd">cbAttributeListSize&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">InitializeProcThreadAttributeList&lt;/span>(&lt;span style="color:#58a1dd">NULL&lt;/span>, &lt;span style="color:#a6be9d">3&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">cbAttributeListSize&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">siex&lt;/span>.&lt;span style="color:#58a1dd">lpAttributeList&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> (&lt;span style="color:#58a1dd">PPROC_THREAD_ATTRIBUTE_LIST&lt;/span>)&lt;span style="color:#58a1dd">HeapAlloc&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">GetProcessHeap&lt;/span>(), &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#58a1dd">cbAttributeListSize&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">BOOL&lt;/span> &lt;span style="color:#58a1dd">bReturn&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">TRUE&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> ((&lt;span style="color:#58a1dd">bReturn&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">InitializeProcThreadAttributeList&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">siex&lt;/span>.&lt;span style="color:#58a1dd">lpAttributeList&lt;/span>, &lt;span style="color:#a6be9d">3&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">cbAttributeListSize&lt;/span>)) &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#58a1dd">FALSE&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">FALSE&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">SECURITY_CAPABILITIES&lt;/span> &lt;span style="color:#58a1dd">sc&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">sc&lt;/span>.&lt;span style="color:#58a1dd">AppContainerSid&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">context&lt;/span>.&lt;span style="color:#58a1dd">GetAppContainerSid&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">sc&lt;/span>.&lt;span style="color:#58a1dd">Capabilities&lt;/span> &lt;span style="color:#ff636f">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#58a1dd">context&lt;/span>.&lt;span style="color:#58a1dd">Capabilitis&lt;/span>().&lt;span style="color:#58a1dd">empty&lt;/span>() &lt;span style="color:#ff636f">?&lt;/span> &lt;span style="color:#58a1dd">NULL&lt;/span> &lt;span style="color:#ff636f">:&lt;/span> &lt;span style="color:#58a1dd">context&lt;/span>.&lt;span style="color:#58a1dd">Capabilitis&lt;/span>().&lt;span style="color:#58a1dd">data&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">sc&lt;/span>.&lt;span style="color:#58a1dd">CapabilityCount&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#ff636f">static_cast&lt;/span>&lt;span style="color:#ff636f">&amp;lt;&lt;/span>&lt;span style="color:#58a1dd">DWORD&lt;/span>&lt;span style="color:#ff636f">&amp;gt;&lt;/span>(&lt;span style="color:#58a1dd">context&lt;/span>.&lt;span style="color:#58a1dd">Capabilitis&lt;/span>().&lt;span style="color:#58a1dd">size&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">sc&lt;/span>.&lt;span style="color:#58a1dd">Reserved&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> ((&lt;span style="color:#58a1dd">bReturn&lt;/span> &lt;span style="color:#ff636f">=&lt;/span> &lt;span style="color:#58a1dd">UpdateProcThreadAttribute&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">siex&lt;/span>.&lt;span style="color:#58a1dd">lpAttributeList&lt;/span>, &lt;span style="color:#a6be9d">0&lt;/span>, &lt;span style="color:#58a1dd">PROC_THREAD_ATTRIBUTE_SECURITY_CAPABILITIES&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">sc&lt;/span>, &lt;span style="color:#ff636f">sizeof&lt;/span>(&lt;span style="color:#58a1dd">sc&lt;/span>), &lt;span style="color:#58a1dd">NULL&lt;/span>, &lt;span style="color:#58a1dd">NULL&lt;/span>)) &lt;span style="color:#ff636f">==&lt;/span> &lt;span style="color:#58a1dd">FALSE&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DeleteProcThreadAttributeList&lt;/span>(&lt;span style="color:#58a1dd">siex&lt;/span>.&lt;span style="color:#58a1dd">lpAttributeList&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">FALSE&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">bReturn&lt;/span> &lt;span style="color:#ff636f">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">CreateProcessW&lt;/span>(&lt;span style="color:#58a1dd">lpApplication&lt;/span>, &lt;span style="color:#58a1dd">lpCommandline&lt;/span>, &lt;span style="color:#ff636f">nullptr&lt;/span>, &lt;span style="color:#ff636f">nullptr&lt;/span>, &lt;span style="color:#58a1dd">FALSE&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">EXTENDED_STARTUPINFO_PRESENT&lt;/span> &lt;span style="color:#ff636f">|&lt;/span> &lt;span style="color:#58a1dd">CREATE_UNICODE_ENVIRONMENT&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#58a1dd">LPVOID&lt;/span>)&lt;span style="color:#58a1dd">lpEvnironment&lt;/span>, &lt;span style="color:#58a1dd">lpDirectory&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">reinterpret_cast&lt;/span>&lt;span style="color:#ff636f">&amp;lt;&lt;/span>&lt;span style="color:#58a1dd">STARTUPINFOW&lt;/span> &lt;span style="color:#ff636f">*&amp;gt;&lt;/span>(&lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">siex&lt;/span>), &lt;span style="color:#ff636f">&amp;amp;&lt;/span>&lt;span style="color:#58a1dd">pi&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span> (&lt;span style="color:#58a1dd">bReturn&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">CloseHandle&lt;/span>(&lt;span style="color:#58a1dd">pi&lt;/span>.&lt;span style="color:#58a1dd">hThread&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">CloseHandle&lt;/span>(&lt;span style="color:#58a1dd">pi&lt;/span>.&lt;span style="color:#58a1dd">hProcess&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">DeleteProcThreadAttributeList&lt;/span>(&lt;span style="color:#58a1dd">siex&lt;/span>.&lt;span style="color:#58a1dd">lpAttributeList&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#58a1dd">bReturn&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">wmain&lt;/span>(&lt;span style="color:#ff636f">int&lt;/span> &lt;span style="color:#58a1dd">argc&lt;/span>,&lt;span style="color:#ff636f">wchar_t&lt;/span> &lt;span style="color:#ff636f">*&lt;/span>&lt;span style="color:#58a1dd">argv&lt;/span>[])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">wchar_t&lt;/span> &lt;span style="color:#58a1dd">cmd&lt;/span>[&lt;span style="color:#a6be9d">4096&lt;/span>]&lt;span style="color:#ff636f">=&lt;/span>&lt;span style="color:#a6be9d">L&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;cmd.exe&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">if&lt;/span>(&lt;span style="color:#ff636f">!&lt;/span>&lt;span style="color:#58a1dd">CreateAppContainerProcessEx&lt;/span>(&lt;span style="color:#ff636f">nullptr&lt;/span>,&lt;span style="color:#58a1dd">cmd&lt;/span>,&lt;span style="color:#ff636f">nullptr&lt;/span>,&lt;span style="color:#ff636f">nullptr&lt;/span>)){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#58a1dd">fprintf&lt;/span>(&lt;span style="color:#58a1dd">stderr&lt;/span>,&lt;span style="color:#a6be9d">&amp;#34;create AppConatiner Process failed !&lt;/span>&lt;span style="color:#a6be9d">\n&lt;/span>&lt;span style="color:#a6be9d">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#a6be9d">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff636f">return&lt;/span> &lt;span style="color:#a6be9d">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用 Process Explorer 查看进程属性可得到下图： &lt;br>
&lt;img src="https://raw.githubusercontent.com/fstudio/Phoenix/master/doc/Container/Images/appcontainer.png" alt="AppContainer">&lt;/p>
&lt;p>当我们操作时，可以看到如下结果：&lt;br>
&lt;img src="https://raw.githubusercontent.com/fstudio/Phoenix/master/doc/Container/Images/appcontainer-open.png" alt="Open">&lt;/p>
&lt;p>除了 IE ,Google 的开源浏览器 Chromium 也在沙箱代码中添加了 AppContainer 的支持：&lt;br>
&lt;a href="http://src.chromium.org/chrome/trunk/src/sandbox/win/src/app_container.cc">http://src.chromium.org/chrome/trunk/src/sandbox/win/src/app_container.cc&lt;/a>&lt;/p>
&lt;p>Windows 的系统安全正得益于以上种种技术的出现，程序不是说想干什么就能干什么了。危险的系统操作被限制，特别是 AppContainer ，应用之间的隔离加深，跨应用的数据难以窃取。&lt;/p>
&lt;h1 id="其他">其他&lt;/h1>
&lt;p>很多开发者在 Windows 上使用沙箱来实现安全隔离，而沙箱本质上也是利用权限隔离以及 Hook 之类的技术来实现。而容器则可以在权限隔离的基础上添加资源限制来实现，类似于作业对象限制资源，当然，如果要更加安全，隔离更加深入，必须从内核上做出努力。
开发者并不一定要专注在容器，安全上，然而一定不要滥用权限。&lt;/p>
&lt;h1 id="备注">备注：&lt;/h1>
&lt;ol>
&lt;li>用户账户控制(UAC): &lt;a href="https://en.wikipedia.org/wiki/User_Account_Control">https://en.wikipedia.org/wiki/User_Account_Control&lt;/a>&lt;/li>
&lt;li>资源管理器在开启内置管理员的批准模式下降权是成功的，据说也是采用的计划任务降权？&lt;/li>
&lt;/ol>
- https://forcemz.net/posts/2015/2015-06-11-app-container/ - Copyright (c) 2009-2024 J23</description></item><item><title>星夜</title><link>https://forcemz.net/posts/2009/2009-03-07-poem-starry-night/</link><pubDate>Sat, 07 Mar 2009 12:00:00 +0800</pubDate><guid>https://forcemz.net/posts/2009/2009-03-07-poem-starry-night/</guid><description>Charlie's Rethinking https://forcemz.net/posts/2009/2009-03-07-poem-starry-night/ -&lt;p>踏着一点点星光&lt;/p>
&lt;p>月亮已经熟睡&lt;/p>
&lt;p>伴着阵阵微风&lt;/p>
&lt;p>我在星夜下行走&lt;/p>
&lt;p>荷塘上&lt;/p>
&lt;p>开了一朵朵荷花&lt;/p>
&lt;p>飘来阵阵香&lt;/p>
&lt;p>多事的青蛙&lt;/p>
&lt;p>也来凑热闹&lt;/p>
&lt;p>精力过剩的蝉&lt;/p>
&lt;p>尽情地&lt;/p>
&lt;p>歌唱&lt;/p>
&lt;p>所有的人&lt;/p>
&lt;p>已进入梦乡&lt;/p>
&lt;p>只有我&lt;/p>
&lt;p>踏着星夜的银光&lt;/p>
&lt;p>流浪&lt;/p>
&lt;p>为什么流浪&lt;/p>
&lt;p>只是&lt;/p>
&lt;p>想追寻一个女孩的去向&lt;/p>
&lt;p>复古的长裙&lt;/p>
&lt;p>那可爱的模样&lt;/p>
&lt;p>已刻在我的心上&lt;/p>
&lt;h2 id="备注">备注&lt;/h2>
&lt;p>收录于 2021 年 3 月，这首诗是高中时期所作，刊登在学校文学社《晨露》2009 第二期“晨露之星”，此番留存以作纪念。&lt;/p>
- https://forcemz.net/posts/2009/2009-03-07-poem-starry-night/ - Copyright (c) 2009-2024 J23</description></item><item><title>让我化作一尊雨中的石像</title><link>https://forcemz.net/posts/2009/2009-03-08-poem-statue-in-rain/</link><pubDate>Sat, 07 Mar 2009 10:00:00 +0800</pubDate><guid>https://forcemz.net/posts/2009/2009-03-08-poem-statue-in-rain/</guid><description>Charlie's Rethinking https://forcemz.net/posts/2009/2009-03-08-poem-statue-in-rain/ -&lt;p>&lt;em>序：午后，我草草的舔食了几篇文章，然后便匆匆睡下，醒后。在雨中茫然，率性而发。&lt;/em>&lt;/p>
&lt;p>我茫然地&lt;/p>
&lt;p>徘徊在细雨的路上&lt;/p>
&lt;p>春姑娘大概第一次哭吧&lt;/p>
&lt;p>雨水太纤细，风儿太柔弱&lt;/p>
&lt;p>我移动这冰冷的脚&lt;/p>
&lt;p>只当作一个冰冷的躯壳&lt;/p>
&lt;p>逆风而上&lt;/p>
&lt;p>风 掠过我的脸庞&lt;/p>
&lt;p>雨 湿透了我的衣裳&lt;/p>
&lt;p>我多想化作一尊石像&lt;/p>
&lt;p>守在你必经的路旁&lt;/p>
&lt;p>可是却忘了&lt;/p>
&lt;p>谁是，我的小芳~&lt;/p>
&lt;h2 id="备注">备注&lt;/h2>
&lt;p>收录于 2021 年 3 月，这首诗是高中时期所作，刊登在学校文学社《晨露》2009 第二期“晨露之星”，此番留存以作纪念。&lt;/p>
- https://forcemz.net/posts/2009/2009-03-08-poem-statue-in-rain/ - Copyright (c) 2009-2024 J23</description></item><item><title>行走</title><link>https://forcemz.net/posts/2009/2009-03-06-poem-walk/</link><pubDate>Fri, 06 Mar 2009 10:00:00 +0800</pubDate><guid>https://forcemz.net/posts/2009/2009-03-06-poem-walk/</guid><description>Charlie's Rethinking https://forcemz.net/posts/2009/2009-03-06-poem-walk/ -&lt;p>（一）四季&lt;/p>
&lt;p>我轻轻的走&lt;/p>
&lt;p>前方，朦胧的小楼&lt;/p>
&lt;p>杏花的香味&lt;/p>
&lt;p>迷上了老江南的白酒；&lt;/p>
&lt;p>行走的行人&lt;/p>
&lt;p>走过了十七个年头&lt;/p>
&lt;p>春天的日子&lt;/p>
&lt;p>是农夫&lt;/p>
&lt;p>摆弄绿色的精灵&lt;/p>
&lt;p>种植一年的希望&lt;/p>
&lt;p>也是园丁&lt;/p>
&lt;p>在那里修建&lt;/p>
&lt;p>夏天的热情&lt;/p>
&lt;p>疲倦了激情&lt;/p>
&lt;p>在知了声中昏昏入睡&lt;/p>
&lt;p>我的季节&lt;/p>
&lt;p>夏季大约是一片空白&lt;/p>
&lt;p>叶子纷纷落下&lt;/p>
&lt;p>愁绪悄然升起&lt;/p>
&lt;p>吟咏秋的萧瑟&lt;/p>
&lt;p>时品秋的丰收&lt;/p>
&lt;p>我战力在雪地&lt;/p>
&lt;p>我所钟情的姑娘&lt;/p>
&lt;p>冬日阳关，希望又失望&lt;/p>
&lt;p>风雪交零纷纷落下&lt;/p>
&lt;p>（二）行人&lt;/p>
&lt;p>我耸了耸肩膀&lt;/p>
&lt;p>悄悄地告别冬天&lt;/p>
&lt;p>在雪夜已经走远&lt;/p>
&lt;p>像风一样&lt;/p>
&lt;p>追求那个姑娘&lt;/p>
&lt;p>她是走了&lt;/p>
&lt;p>到了天涯便&lt;/p>
&lt;p>我来到海边，村庄下&lt;/p>
&lt;p>“您是否看到一个姑娘！”&lt;/p>
&lt;p>“她已经走远！”&lt;/p>
&lt;p>在阳关的炙烤下&lt;/p>
&lt;p>消散了我生命的气息&lt;/p>
&lt;p>我中了诅咒&lt;/p>
&lt;p>化成了一块石头&lt;/p>
&lt;p>（三）情书&lt;/p>
&lt;p>亲爱的姑娘&lt;/p>
&lt;p>迷糊的是你的脸庞&lt;/p>
&lt;p>消失的是你的身影&lt;/p>
&lt;p>虽然你走了&lt;/p>
&lt;p>我也成了石头&lt;/p>
&lt;p>倘若我不再是石头&lt;/p>
&lt;p>为了追寻你的足迹&lt;/p>
&lt;p>我便要继续行走&lt;/p>
&lt;p>（四）行走&lt;/p>
&lt;p>我只是一个行人&lt;/p>
&lt;p>在夜里徒步行走&lt;/p>
&lt;p>疲倦了便要入睡&lt;/p>
&lt;p>太阳出来时&lt;/p>
&lt;p>我将继续向前！&lt;/p>
&lt;h2 id="备注">备注&lt;/h2>
&lt;p>收录于 2021 年 3 月，这首诗是高中时期所作，刊登在学校文学社《晨露》2009 第二期“晨露之星”，此番留存以作纪念。&lt;/p>
- https://forcemz.net/posts/2009/2009-03-06-poem-walk/ - Copyright (c) 2009-2024 J23</description></item><item><title>江南</title><link>https://forcemz.net/posts/2009/2009-03-05-poem-jiangnan/</link><pubDate>Thu, 05 Mar 2009 10:00:00 +0800</pubDate><guid>https://forcemz.net/posts/2009/2009-03-05-poem-jiangnan/</guid><description>Charlie's Rethinking https://forcemz.net/posts/2009/2009-03-05-poem-jiangnan/ -&lt;p>江南的乌篷船&lt;/p>
&lt;p>摇曳着小桨&lt;/p>
&lt;p>和着斜阳&lt;/p>
&lt;p>没入了层层雾霭&lt;/p>
&lt;p>直过了早春料峭&lt;/p>
&lt;p>不经意间&lt;/p>
&lt;p>我赤裸裸的来了&lt;/p>
&lt;p>飘来江南的雨&lt;/p>
&lt;p>江南的雨&lt;/p>
&lt;p>染绿了叶&lt;/p>
&lt;p>浸开了朵朵芳菲&lt;/p>
&lt;p>勾动了年青的心事&lt;/p>
&lt;p>午憩的人&lt;/p>
&lt;p>慵懒地倦在木椅上&lt;/p>
&lt;p>听着微风下的&lt;/p>
&lt;p>叶舞沙沙&lt;/p>
&lt;p>江南的秋&lt;/p>
&lt;p>缓缓地&lt;/p>
&lt;p>诉说&lt;/p>
&lt;p>她的温柔&lt;/p>
&lt;p>那冬&lt;/p>
&lt;p>也收敛了&lt;/p>
&lt;p>北风的刺骨&lt;/p>
&lt;p>消弭了苍白的雪&lt;/p>
&lt;p>就这样&lt;/p>
&lt;p>成长在江南&lt;/p>
&lt;p>呼吸着温柔&lt;/p>
&lt;p>开始流浪&lt;/p>
&lt;p>可是，我突然发现&lt;/p>
&lt;p>不见了我的江南&lt;/p>
&lt;p>那山那水&lt;/p>
&lt;p>已不是&lt;/p>
&lt;p>那山，那水&lt;/p>
&lt;p>我宁愿吹着牧笛&lt;/p>
&lt;p>依靠着老黄牛&lt;/p>
&lt;p>打量着浣洗的&lt;/p>
&lt;p>年轻姑娘~&lt;/p>
&lt;p>为她摘上一朵荷花&lt;/p>
&lt;p>又走过去&lt;/p>
&lt;p>抓住她的手&lt;/p>
&lt;p>吻得她&lt;/p>
&lt;p>哧哧的&lt;/p>
&lt;p>笑&lt;/p>
&lt;p>那是江南&lt;/p>
&lt;p>我梦中的江南&lt;/p>
&lt;p>还有江南的姑娘&lt;/p>
&lt;p>我时常奔跑&lt;/p>
&lt;p>他们哈哈大笑&lt;/p>
&lt;p>我宁愿让人讥诮&lt;/p>
&lt;p>也要竭力奔跑&lt;/p>
&lt;p>即便化做了残骸&lt;/p>
&lt;p>还要眷恋着那个&lt;/p>
&lt;p>美丽的江南&lt;/p>
&lt;h2 id="备注">备注&lt;/h2>
&lt;p>收录于 2021 年 3 月，这首诗是高中时期所作，刊登在学校文学社《晨露》2009 第二期“晨露之星”，此番留存以作纪念。这首诗主要有一种朦胧的情愫在里面。&lt;/p>
- https://forcemz.net/posts/2009/2009-03-05-poem-jiangnan/ - Copyright (c) 2009-2024 J23</description></item><item><title>当下，我的足迹</title><link>https://forcemz.net/posts/2009/2009-03-04-poem-my-footsteps-now/</link><pubDate>Wed, 04 Mar 2009 10:00:00 +0800</pubDate><guid>https://forcemz.net/posts/2009/2009-03-04-poem-my-footsteps-now/</guid><description>Charlie's Rethinking https://forcemz.net/posts/2009/2009-03-04-poem-my-footsteps-now/ -&lt;p>（一）深坑&lt;/p>
&lt;p>天使说：“你若不努力爬出深坑，&lt;/p>
&lt;p>你终将死于此地！”&lt;/p>
&lt;p>我按着坑壁的石块，&lt;/p>
&lt;p>缓缓地向上爬去，&lt;/p>
&lt;p>“崩”石块碎落，&lt;/p>
&lt;p>我摔回深坑，&lt;/p>
&lt;p>鲁西弗尔摆了摆枯黄的大手：&lt;/p>
&lt;p>“你同我一样，是贬落的天使，&lt;/p>
&lt;p>那便是魔鬼！小鬼！&lt;/p>
&lt;p>好好加油&amp;hellip;&amp;hellip;.”&lt;/p>
&lt;p>我信以为真，&lt;/p>
&lt;p>支起大锅，&lt;/p>
&lt;p>添上刚劈的松木柴火，&lt;/p>
&lt;p>注入用血液调制的浓汤。&lt;/p>
&lt;p>揪住金丝雀的翅膀，锁住大猫的咽喉，&lt;/p>
&lt;p>嗷，一切通通扔进浓汤！&lt;/p>
&lt;p>大地，它恨我而颤抖！&lt;/p>
&lt;p>深坑，它抖得下降！&lt;/p>
&lt;p>地狱之火，熊熊燃起，&lt;/p>
&lt;p>熔化了一切&amp;hellip;..&lt;/p>
&lt;p>连我，也被它烧成灰烬，&lt;/p>
&lt;p>毁灭了，&lt;/p>
&lt;p>我的气息，失去了踪影&amp;hellip;..&lt;/p>
&lt;p>我睁开双眼，&lt;/p>
&lt;p>回想过去的日子，&lt;/p>
&lt;p>死去呀！死在过去&amp;hellip;&amp;hellip;&lt;/p>
&lt;p>此生再不到来！&lt;/p>
&lt;p>（二）迷雾森林&lt;/p>
&lt;p>前方的森林&lt;/p>
&lt;p>浓雾渐渐聚集，&lt;/p>
&lt;p>浓雾腐蚀我的双目，&lt;/p>
&lt;p>我伸开双手，&lt;/p>
&lt;p>跌跌撞撞地向前摸去。&lt;/p>
&lt;p>“啊，这歹毒心肠的刺，&lt;/p>
&lt;p>亦要置我于死地！&lt;/p>
&lt;p>这茫茫的无情大森林，&lt;/p>
&lt;p>我如何走得脱？”&lt;/p>
&lt;p>&amp;hellip;&amp;hellip;前方的白色已经消散，&lt;/p>
&lt;p>夜魅的精灵在引喉高歌。&lt;/p>
&lt;p>风，飕飕地向我袭来，&lt;/p>
&lt;p>腹部唱响抗议的交响曲，&lt;/p>
&lt;p>它已喝得太醉&lt;/p>
&lt;p>欲昏昏入睡。&lt;/p>
&lt;p>我的手和脚醉倒在暗草之上。&lt;/p>
&lt;p>它的命令没有士兵执行，&lt;/p>
&lt;p>也没有前进的方向。&lt;/p>
&lt;p>请闭上你的双眼，&lt;/p>
&lt;p>永眠直到永远！&lt;/p>
&lt;p>（三）飞鸟&lt;/p>
&lt;p>此前，一刻钟的生命已经枯萎，&lt;/p>
&lt;p>当下，你已获得新的生命，&lt;/p>
&lt;p>纵使你推脱不认识它，&lt;/p>
&lt;p>那是一张实在的说明，&lt;/p>
&lt;p>你永远无法在过去中永生，&lt;/p>
&lt;p>在未来中沉醉却辉煌！&lt;/p>
&lt;p>我的足迹，&lt;/p>
&lt;p>只有在此刻才印下，&lt;/p>
&lt;p>才有那么真实的触觉。&lt;/p>
&lt;p>凹凸不平是那么刻骨，&lt;/p>
&lt;p>坎坷的历程有无穷的快乐，&lt;/p>
&lt;p>你该踏实地走下去，&lt;/p>
&lt;p>忠于你的现在，&lt;/p>
&lt;p>永远地追寻快乐的飞鸟。&lt;/p>
&lt;p>此刻，你的足迹，&lt;/p>
&lt;p>才有真实可以诉说，&lt;/p>
&lt;p>在无尽的宇宙，&lt;/p>
&lt;p>拥有无尽的活力，&lt;/p>
&lt;p>走吧！&lt;/p>
&lt;p>留下此刻的足迹！&lt;/p>
&lt;h2 id="备注">备注&lt;/h2>
&lt;p>收录于 2021 年 3 月，这首诗是高中时期所作，刊登在学校文学社《晨露》2009 第二期“晨露之星”，此番留存以作纪念，年轻时写诗颇为稚嫩，词句斟酌并不是很恰当，但书写的勇气还是可嘉的。这首诗主要是告诉我们要立足当下，既不要沉迷过去，也不要没有目标的幻想未来。&lt;/p>
- https://forcemz.net/posts/2009/2009-03-04-poem-my-footsteps-now/ - Copyright (c) 2009-2024 J23</description></item></channel></rss>