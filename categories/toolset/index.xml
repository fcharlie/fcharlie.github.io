<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Toolset on Charlie's Rethinking</title><link>https://forcemz.net/categories/toolset/</link><description>Recent content in Toolset on Charlie's Rethinking</description><generator>Hugo</generator><language>zh-CN</language><copyright>Copyright (c) 2009-2024 J23</copyright><lastBuildDate>Tue, 20 Jul 2021 20:00:00 +0800</lastBuildDate><atom:link href="https://forcemz.net/categories/toolset/index.xml" rel="self" type="application/rss+xml"/><item><title>Baulk - 一次有趣的尝试</title><link>https://forcemz.net/posts/2021/2021-07-20-baulk-talk/</link><pubDate>Tue, 20 Jul 2021 20:00:00 +0800</pubDate><guid>https://forcemz.net/posts/2021/2021-07-20-baulk-talk/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>作为一个程序员，你认为你做过的最让你自豪的东西是什么？作为了一个菜鸡程序员，很遗憾，我拿不出什么像样的作品，工作上也只是站在前人的肩膀上，做了一些微小的改动。如果硬要说一个作品是我最得意的，我会选择 Baulk，它是一个极简的 Windows 包管理器，开发这个工具花费了我大量的业余时间，我很多有意思的构想也在开发 baulk 的过程中付诸实现了。Baulk &lt;code>[bɔːk]&lt;/code> 其含义是&lt;code>错误；失败；障碍（等于balk）&lt;/code> 或是 &lt;code>阻止；错过；推诿（等于balk）&lt;/code>；对于绝大多数人来说，2020 年有一个坠落的魔幻开局，到了今年，新冠疫情的阴影任然笼罩全球，Baulk 诞生于 2020 年 3 月 9 日，那个时候我确实是挫败的吧。Baulk 还可以翻译成&lt;code>梁木&lt;/code>，阴云将逐渐消散，baulk 也可以成为 &lt;code>梁木&lt;/code>。&lt;/p></description></item><item><title>评论文件解析</title><link>https://forcemz.net/posts/2021/2021-03-11-review-file-parsing/</link><pubDate>Thu, 11 Mar 2021 10:00:00 +0800</pubDate><guid>https://forcemz.net/posts/2021/2021-03-11-review-file-parsing/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>2019 年，我曾经写过一篇名为&lt;a href="https://forcemz.net/toolset/2019/01/25/FileParsing/">《文件的解析》&lt;/a>的文章，粗略的讲述了如何识别文件的特征，分析文件的类型。随着认识的不断加深，知识的不断积累，代码的不断重构，徘徊之间，我将文中提到的 Planck 分析库在 &lt;a href="https://github.com/fcharlie/bela">Bela&lt;/a> 项目中用 C++20 重写了，还将 Golang 的 PE/ELF/MachO/ZIP 库用 C++ 重写了一遍，然后在 &lt;a href="https://github.com/fcharlie/BelaUtils">BelaUtils&lt;/a> 项目中基于 Bela 文件分析库实现了文件类型检测工具 - &lt;strong>Bona&lt;/strong>，工具简单的推广后总算是有几个人收藏，之后有一点想法，觉得要和大家分享，便有了此文。&lt;/p></description></item><item><title>Baulk - 开发一个简单的包管理工具历程</title><link>https://forcemz.net/posts/2020/2020-07-18-baulk/</link><pubDate>Sat, 18 Jul 2020 20:00:00 +0800</pubDate><guid>https://forcemz.net/posts/2020/2020-07-18-baulk/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>相对于其他操作系统，我更习惯使用 Windows，但一直以来 Windows 缺乏官方的包管理器，而第三方无论是 Scoop 还是 Chocolatey 都无法满足我独特的需求，我的要求很简单，所有的软件包都应该使用绿色解压模式，这包括了 MSI 安装包，另外安装软件时不应该修改系统和用户环境变量。包管理工具应该足够快，还要支持创建启动器等等。&lt;/p></description></item><item><title>文件的解析</title><link>https://forcemz.net/posts/2019/2019-01-25-file-parsing/</link><pubDate>Fri, 25 Jan 2019 10:00:00 +0800</pubDate><guid>https://forcemz.net/posts/2019/2019-01-25-file-parsing/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本文探讨的是计算机文件，&lt;strong>计算机文件&lt;/strong> 用于记录数据到计算机设备上，维基百科上有简短的介绍：&lt;/p>
&lt;blockquote>
&lt;p>A computer file is a computer resource for recording data discretely in a computer storage device. Just as words can be written to paper, so can information be written to a computer file.&lt;/p></description></item><item><title>Clangbuilder 已支持自动构建 CURL</title><link>https://forcemz.net/posts/2018/2018-11-15-clangbuilder-win-curl/</link><pubDate>Thu, 15 Nov 2018 10:00:00 +0800</pubDate><guid>https://forcemz.net/posts/2018/2018-11-15-clangbuilder-win-curl/</guid><description>&lt;h1 id="curl">cURL&lt;/h1>
&lt;p>cURL 是一个非常著名的开源 URL 数据传输工具，支持 &lt;code>HTTP&lt;/code>,&lt;code>HTTPS&lt;/code>,&lt;code>FTP&lt;/code>,&lt;code>SCP&lt;/code>,&lt;code>SFTP&lt;/code>,&lt;code>Telnet&lt;/code> 等协议。绝大多数操作系统都自带了，也包括 Windows 10 17134/17763。但系统自带的版本通常都不会及时更新到最新版本，而 &lt;code>cURL&lt;/code> 是一个非常活跃的项目，大约2个月就会发布一个新版本。每一次更新都会修复大量 bug，新增很多新特性，比如最近增加了 &lt;code>DOH&lt;/code> 更好的 &lt;code>TLS1.3&lt;/code> 支持。&lt;/p></description></item><item><title>基于清单的启动器的实现</title><link>https://forcemz.net/posts/2015/2015-11-27-new-launcher/</link><pubDate>Fri, 27 Nov 2015 21:30:16 +0800</pubDate><guid>https://forcemz.net/posts/2015/2015-11-27-new-launcher/</guid><description>&lt;h1 id="launcher">Launcher&lt;/h1>
&lt;p>Launcher (启动器) 是一类非常有用的工具，这类工具的意义就在于设置好特定的环境以特定的参数启动特定的进程。
很多软件也用到了 launcher, 比如 Chrome，还有 Android Studio, 在 Windows 平台上，可见的是 studio.exe,
事实上，Android Studio 是基于 Intellij IDEA 开发的，IDE 代码是基于 Java 的，所谓的 studio.exe 其实就是个启动器，加载 jvm.dll 罢了。
IDEA WinLauncher 在 Github 上可以看到源码： &lt;a href="https://github.com/JetBrains/intellij-community/tree/master/native/WinLauncher">WinLauncher&lt;/a> &lt;br>
Manifest 清单是一类记录程序运行需求的文件，比如 Chrome 就有启动清单：&lt;/p></description></item></channel></rss>